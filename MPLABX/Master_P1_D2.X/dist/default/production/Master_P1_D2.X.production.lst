

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 18:02:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  06A4                     __pstrings:
   387  06A4                     stringtab:
   388  06A4                     __stringtab:
   389                           
   390                           ;	String table - string pointers are 1 byte each
   391  06A4  1BFF               	btfsc	btemp+1,7
   392  06A5  2EAE               	ljmp	stringcode
   393  06A6  1383               	bcf	3,7
   394  06A7  187F               	btfsc	btemp+1,0
   395  06A8  1783               	bsf	3,7
   396  06A9  0800               	movf	0,w
   397  06AA  0A84               	incf	4,f
   398  06AB  1903               	skipnz
   399  06AC  0AFF               	incf	btemp+1,f
   400  06AD  0008               	return
   401  06AE                     stringcode:
   402  06AE                     stringdir:
   403  06AE  3006               	movlw	high stringdir
   404  06AF  008A               	movwf	10
   405  06B0  0804               	movf	4,w
   406  06B1  0A84               	incf	4,f
   407  06B2  0782               	addwf	2,f
   408  06B3                     __stringbase:
   409  06B3  3400               	retlw	0
   410  06B4                     __end_of__stringtab:
   411  06B4                     _dpowers:
   412  06B4  3401               	retlw	1
   413  06B5  3400               	retlw	0
   414  06B6  340A               	retlw	10
   415  06B7  3400               	retlw	0
   416  06B8  3464               	retlw	100
   417  06B9  3400               	retlw	0
   418  06BA  34E8               	retlw	232
   419  06BB  3403               	retlw	3
   420  06BC  3410               	retlw	16
   421  06BD  3427               	retlw	39
   422  06BE                     __end_of_dpowers:
   423  0013                     _SSPBUF	set	19
   424  0014                     _SSPCON	set	20
   425  0019                     _TXREG	set	25
   426  000C                     _PIR1bits	set	12
   427  0018                     _RCSTAbits	set	24
   428  0009                     _PORTE	set	9
   429  0008                     _PORTD	set	8
   430  0007                     _PORTC	set	7
   431  0006                     _PORTB	set	6
   432  0005                     _PORTA	set	5
   433  000B                     _INTCONbits	set	11
   434  0008                     _PORTDbits	set	8
   435  0006                     _PORTBbits	set	6
   436  0043                     _RD3	set	67
   437  0047                     _RD7	set	71
   438  0046                     _RD6	set	70
   439  0045                     _RD5	set	69
   440  0044                     _RD4	set	68
   441  0063                     _SSPIF	set	99
   442  005E                     _PEIE	set	94
   443  005F                     _GIE	set	95
   444  0064                     _TXIF	set	100
   445  0058                     _RBIF	set	88
   446  0091                     _SSPCON2bits	set	145
   447  0094                     _SSPSTAT	set	148
   448  0093                     _SSPADD	set	147
   449  0091                     _SSPCON2	set	145
   450  008C                     _PIE1bits	set	140
   451  009A                     _SPBRGH	set	154
   452  0099                     _SPBRG	set	153
   453  0098                     _TXSTAbits	set	152
   454  0096                     _IOCBbits	set	150
   455  0095                     _WPUB	set	149
   456  0081                     _OPTION_REGbits	set	129
   457  0085                     _TRISA	set	133
   458  0088                     _TRISD	set	136
   459  0087                     _TRISCbits	set	135
   460  0086                     _TRISBbits	set	134
   461  008F                     _OSCCONbits	set	143
   462  0463                     _SSPIE	set	1123
   463  043C                     _TRISC4	set	1084
   464  043B                     _TRISC3	set	1083
   465  0187                     _BAUDCTLbits	set	391
   466  0189                     _ANSELH	set	393
   467  0188                     _ANSEL	set	392
   468  06BE                     STR_1:
   469  06BE  3443               	retlw	67	;'C'
   470  06BF  344F               	retlw	79	;'O'
   471  06C0  344E               	retlw	78	;'N'
   472  06C1  3454               	retlw	84	;'T'
   473  06C2  343A               	retlw	58	;':'
   474  06C3  3420               	retlw	32	;' '
   475  06C4  3453               	retlw	83	;'S'
   476  06C5  3454               	retlw	84	;'T'
   477  06C6  3441               	retlw	65	;'A'
   478  06C7  3454               	retlw	84	;'T'
   479  06C8  343A               	retlw	58	;':'
   480  06C9  3420               	retlw	32	;' '
   481  06CA  3454               	retlw	84	;'T'
   482  06CB  3445               	retlw	69	;'E'
   483  06CC  344D               	retlw	77	;'M'
   484  06CD  3450               	retlw	80	;'P'
   485  06CE  343A               	retlw	58	;':'
   486  06CF  3400               	retlw	0
   487  06D0                     STR_2:
   488  06D0  3425               	retlw	37	;'%'
   489  06D1  3464               	retlw	100	;'d'
   490  06D2  3420               	retlw	32	;' '
   491  06D3  3400               	retlw	0
   492  06D4                     STR_5:
   493  06D4  344F               	retlw	79	;'O'
   494  06D5  3446               	retlw	70	;'F'
   495  06D6  3446               	retlw	70	;'F'
   496  06D7  3400               	retlw	0
   497  06D8                     STR_4:
   498  06D8  344F               	retlw	79	;'O'
   499  06D9  344E               	retlw	78	;'N'
   500  06DA  3400               	retlw	0
   501  06D0                     
   502                           	psect	cinit
   503  000F                     start_initialization:	
   504                           ; #config settings
   505                           
   506  000F                     __initialization:
   507                           
   508                           ; Clear objects allocated to COMMON
   509  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   510  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   511                           
   512                           ; Clear objects allocated to BANK0
   513  0011  1283               	bcf	3,5	;RP0=0, select bank0
   514  0012  1303               	bcf	3,6	;RP1=0, select bank0
   515  0013  01E1               	clrf	__pbssBANK0& (0+127)
   516  0014  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   517  0015  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   518  0016  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   519  0017  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   520  0018  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   521  0019  01E7               	clrf	(__pbssBANK0+6)& (0+127)
   522  001A  01E8               	clrf	(__pbssBANK0+7)& (0+127)
   523  001B  01E9               	clrf	(__pbssBANK0+8)& (0+127)
   524  001C  01EA               	clrf	(__pbssBANK0+9)& (0+127)
   525  001D  01EB               	clrf	(__pbssBANK0+10)& (0+127)
   526  001E                     end_of_initialization:	
   527                           ;End of C runtime variable initialization code
   528                           
   529  001E                     __end_of__initialization:
   530  001E  0183               	clrf	3
   531  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   532                           
   533                           	psect	bssCOMMON
   534  007A                     __pbssCOMMON:
   535  007A                     _unidades:
   536  007A                     	ds	1
   537  007B                     _decenas:
   538  007B                     	ds	1
   539                           
   540                           	psect	bssBANK0
   541  0061                     __pbssBANK0:
   542  0061                     _uni:
   543  0061                     	ds	1
   544  0062                     _dec:
   545  0062                     	ds	1
   546  0063                     _cen:
   547  0063                     	ds	1
   548  0064                     _residuo:
   549  0064                     	ds	1
   550  0065                     _centenas:
   551  0065                     	ds	1
   552  0066                     _valor:
   553  0066                     	ds	1
   554  0067                     _cont:
   555  0067                     	ds	1
   556  0068                     _stat:
   557  0068                     	ds	1
   558  0069                     _temp:
   559  0069                     	ds	1
   560  006A                     _R2:
   561  006A                     	ds	1
   562  006B                     _R1:
   563  006B                     	ds	1
   564                           
   565                           	psect	cstackCOMMON
   566  0070                     __pcstackCOMMON:
   567  0070                     ?_setup:
   568  0070                     ?_Lcd_Init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Lcd_Clear:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Start:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_Text:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_division:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_isr:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ??_isr:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_I2C_Master_Wait:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Lcd_Port:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Lcd_Cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Lcd_Write_Char:	
   605                           ; 1 bytes @ 0x0
   606                           
   607                           
   608                           ; 1 bytes @ 0x0
   609  0070                     	ds	2
   610  0072                     ??_I2C_Master_Start:
   611  0072                     ?_I2C_Master_Write:	
   612                           ; 1 bytes @ 0x2
   613                           
   614  0072                     ??_I2C_Master_Stop:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  0072                     ??_I2C_Master_Wait:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0072                     ??_Lcd_Port:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     ?_I2C_Master_Read:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ?___awdiv:	
   627                           ; 2 bytes @ 0x2
   628                           
   629  0072                     ?___awmod:	
   630                           ; 2 bytes @ 0x2
   631                           
   632  0072                     ?___lwdiv:	
   633                           ; 2 bytes @ 0x2
   634                           
   635  0072                     ?___lldiv:	
   636                           ; 2 bytes @ 0x2
   637                           
   638  0072                     Lcd_Port@a:	
   639                           ; 4 bytes @ 0x2
   640                           
   641  0072                     I2C_Master_Write@d:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     I2C_Master_Read@a:	
   645                           ; 2 bytes @ 0x2
   646                           
   647  0072                     ___awdiv@divisor:	
   648                           ; 2 bytes @ 0x2
   649                           
   650  0072                     ___awmod@divisor:	
   651                           ; 2 bytes @ 0x2
   652                           
   653  0072                     ___lwdiv@divisor:	
   654                           ; 2 bytes @ 0x2
   655                           
   656  0072                     ___lldiv@divisor:	
   657                           ; 2 bytes @ 0x2
   658                           
   659                           
   660                           ; 4 bytes @ 0x2
   661  0072                     	ds	1
   662  0073                     ??_Lcd_Cmd:
   663  0073                     ??_Lcd_Write_Char:	
   664                           ; 1 bytes @ 0x3
   665                           
   666                           
   667                           ; 1 bytes @ 0x3
   668  0073                     	ds	1
   669  0074                     ??_I2C_Master_Write:
   670  0074                     ??_I2C_Master_Read:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     Lcd_Write_Char@temp:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ___awdiv@dividend:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ___awmod@dividend:	
   680                           ; 2 bytes @ 0x4
   681                           
   682  0074                     ___lwdiv@dividend:	
   683                           ; 2 bytes @ 0x4
   684                           
   685                           
   686                           ; 2 bytes @ 0x4
   687  0074                     	ds	1
   688  0075                     Lcd_Cmd@a:
   689  0075                     Lcd_Write_Char@y:	
   690                           ; 1 bytes @ 0x5
   691                           
   692                           
   693                           ; 1 bytes @ 0x5
   694  0075                     	ds	1
   695  0076                     ??_Lcd_Init:
   696  0076                     ??_Lcd_Clear:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0076                     ?_Lcd_Set_Cursor:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     ??___awdiv:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     ??___awmod:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     ??___lwdiv:	
   709                           ; 1 bytes @ 0x6
   710                           
   711  0076                     Lcd_Set_Cursor@b:	
   712                           ; 1 bytes @ 0x6
   713                           
   714  0076                     Lcd_Write_Char@a:	
   715                           ; 1 bytes @ 0x6
   716                           
   717  0076                     I2C_Master_Read@temp:	
   718                           ; 1 bytes @ 0x6
   719                           
   720  0076                     ___lldiv@dividend:	
   721                           ; 2 bytes @ 0x6
   722                           
   723                           
   724                           ; 4 bytes @ 0x6
   725  0076                     	ds	1
   726  0077                     ??_Lcd_Set_Cursor:
   727  0077                     ?_Lcd_Write_String:	
   728                           ; 1 bytes @ 0x7
   729                           
   730  0077                     ___awmod@counter:	
   731                           ; 1 bytes @ 0x7
   732                           
   733  0077                     Lcd_Write_String@a:	
   734                           ; 1 bytes @ 0x7
   735                           
   736  0077                     ___lwdiv@quotient:	
   737                           ; 2 bytes @ 0x7
   738                           
   739                           
   740                           ; 2 bytes @ 0x7
   741  0077                     	ds	1
   742  0078                     ___awmod@sign:
   743                           
   744                           ; 1 bytes @ 0x8
   745  0078                     	ds	1
   746  0079                     division@valor:
   747  0079                     ___lwdiv@counter:	
   748                           ; 1 bytes @ 0x9
   749                           
   750                           
   751                           ; 1 bytes @ 0x9
   752  0079                     	ds	1
   753  007A                     ??_setup:
   754                           
   755                           	psect	cstackBANK0
   756  0020                     __pcstackBANK0:	
   757                           ; 1 bytes @ 0xA
   758                           
   759  0020                     ??_Lcd_Write_String:
   760  0020                     ??___lldiv:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     ?___lwmod:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0020                     Lcd_Set_Cursor@a:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0020                     ___awdiv@counter:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     ___lwmod@divisor:	
   773                           ; 1 bytes @ 0x0
   774                           
   775                           
   776                           ; 2 bytes @ 0x0
   777  0020                     	ds	1
   778  0021                     Lcd_Set_Cursor@z:
   779  0021                     ___awdiv@sign:	
   780                           ; 1 bytes @ 0x1
   781                           
   782  0021                     ___lldiv@quotient:	
   783                           ; 1 bytes @ 0x1
   784                           
   785                           
   786                           ; 4 bytes @ 0x1
   787  0021                     	ds	1
   788  0022                     Lcd_Set_Cursor@y:
   789  0022                     ___awdiv@quotient:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0022                     ___lwmod@dividend:	
   793                           ; 2 bytes @ 0x2
   794                           
   795                           
   796                           ; 2 bytes @ 0x2
   797  0022                     	ds	1
   798  0023                     Lcd_Set_Cursor@temp:
   799  0023                     Lcd_Write_String@i:	
   800                           ; 1 bytes @ 0x3
   801                           
   802                           
   803                           ; 2 bytes @ 0x3
   804  0023                     	ds	1
   805  0024                     ??_division:
   806  0024                     ??___lwmod:	
   807                           ; 1 bytes @ 0x4
   808                           
   809                           
   810                           ; 1 bytes @ 0x4
   811  0024                     	ds	1
   812  0025                     ___lldiv@counter:
   813  0025                     ___lwmod@counter:	
   814                           ; 1 bytes @ 0x5
   815                           
   816                           
   817                           ; 1 bytes @ 0x5
   818  0025                     	ds	1
   819  0026                     ?_I2C_Master_Init:
   820  0026                     ?_sprintf:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0026                     sprintf@f:	
   824                           ; 2 bytes @ 0x6
   825                           
   826  0026                     I2C_Master_Init@c:	
   827                           ; 1 bytes @ 0x6
   828                           
   829                           
   830                           ; 4 bytes @ 0x6
   831  0026                     	ds	1
   832  0027                     ??_Text:
   833                           
   834                           ; 1 bytes @ 0x7
   835  0027                     	ds	2
   836  0029                     ??_sprintf:
   837                           
   838                           ; 1 bytes @ 0x9
   839  0029                     	ds	1
   840  002A                     ??_I2C_Master_Init:
   841                           
   842                           ; 1 bytes @ 0xA
   843  002A                     	ds	2
   844  002C                     sprintf@ap:
   845                           
   846                           ; 1 bytes @ 0xC
   847  002C                     	ds	1
   848  002D                     sprintf@flag:
   849                           
   850                           ; 1 bytes @ 0xD
   851  002D                     	ds	1
   852  002E                     sprintf@prec:
   853                           
   854                           ; 1 bytes @ 0xE
   855  002E                     	ds	1
   856  002F                     sprintf@val:
   857                           
   858                           ; 2 bytes @ 0xF
   859  002F                     	ds	2
   860  0031                     sprintf@sp:
   861                           
   862                           ; 1 bytes @ 0x11
   863  0031                     	ds	1
   864  0032                     sprintf@c:
   865                           
   866                           ; 1 bytes @ 0x12
   867  0032                     	ds	1
   868  0033                     ??_main:
   869                           
   870                           ; 1 bytes @ 0x13
   871  0033                     	ds	3
   872  0036                     main@buffer:
   873                           
   874                           ; 20 bytes @ 0x16
   875  0036                     	ds	20
   876  004A                     main@buffer2:
   877                           
   878                           ; 20 bytes @ 0x2A
   879  004A                     	ds	20
   880  005E                     main@val2:
   881                           
   882                           ; 1 bytes @ 0x3E
   883  005E                     	ds	1
   884  005F                     main@val1:
   885                           
   886                           ; 1 bytes @ 0x3F
   887  005F                     	ds	1
   888  0060                     main@val:
   889                           
   890                           ; 1 bytes @ 0x40
   891  0060                     	ds	1
   892                           
   893                           	psect	maintext
   894  0022                     __pmaintext:	
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 74 in file "main_master.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  buffer2        20   42[BANK0 ] unsigned char [20]
   905 ;;  buffer         20   22[BANK0 ] unsigned char [20]
   906 ;;  buffer1        20    0        unsigned char [20]
   907 ;;  val             1   64[BANK0 ] unsigned char 
   908 ;;  val1            1   63[BANK0 ] unsigned char 
   909 ;;  val2            1   62[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : B00/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0      43       0       0       0
   921 ;;      Temps:          0       3       0       0       0
   922 ;;      Totals:         0      46       0       0       0
   923 ;;Total ram usage:       46 bytes
   924 ;; Hardware stack levels required when called:    4
   925 ;; This function calls:
   926 ;;		_I2C_Master_Read
   927 ;;		_I2C_Master_Start
   928 ;;		_I2C_Master_Stop
   929 ;;		_I2C_Master_Write
   930 ;;		_Lcd_Clear
   931 ;;		_Lcd_Init
   932 ;;		_Lcd_Set_Cursor
   933 ;;		_Lcd_Write_String
   934 ;;		_Text
   935 ;;		_setup
   936 ;;		_sprintf
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _main
   944  0022                     _main:
   945  0022                     l2200:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;main_master.c: 76: 
   951  0022  120A  118A  2520  120A  118A  	fcall	_setup
   952                           
   953                           ;main_master.c: 77:         I2C_Master_Start();
   954  0027  120A  118A  2412  120A  118A  	fcall	_Lcd_Init
   955  002C                     l2202:
   956                           
   957                           ;main_master.c: 86:         R2 = I2C_Master_Read(0);;main_master.c: 87:         I2C_Mast
      +                          er_Stop();
   958  002C  1283               	bcf	3,5	;RP0=0, select bank0
   959  002D  1303               	bcf	3,6	;RP1=0, select bank0
   960  002E  086A               	movf	_R2,w
   961  002F  00B3               	movwf	??_main
   962  0030  0833               	movf	??_main,w
   963  0031  00E9               	movwf	_temp
   964  0032                     l2204:
   965                           
   966                           ;main_master.c: 88:         _delay((unsigned long)((200)*(4000000/4000.0)));
   967  0032  086B               	movf	_R1,w
   968  0033  00B3               	movwf	??_main
   969  0034  0833               	movf	??_main,w
   970  0035  00E7               	movwf	_cont
   971  0036                     l2206:
   972                           
   973                           ;main_master.c: 89: 
   974  0036  0867               	movf	_cont,w
   975  0037  00B3               	movwf	??_main
   976  0038  0833               	movf	??_main,w
   977  0039  00E0               	movwf	main@val
   978  003A                     l2208:
   979                           
   980                           ;main_master.c: 90:         Text();
   981  003A  0868               	movf	_stat,w
   982  003B  00B3               	movwf	??_main
   983  003C  0833               	movf	??_main,w
   984  003D  00DF               	movwf	main@val1
   985  003E                     l2210:
   986                           
   987                           ;main_master.c: 91: 
   988  003E  0869               	movf	_temp,w
   989  003F  00B3               	movwf	??_main
   990  0040  0833               	movf	??_main,w
   991  0041  00DE               	movwf	main@val2
   992  0042                     l2212:
   993                           
   994                           ;main_master.c: 93:     return;
   995  0042  120A  118A  2761  120A  118A  	fcall	_Lcd_Clear
   996  0047                     l2214:
   997                           
   998                           ;main_master.c: 94: }
   999  0047  01F6               	clrf	Lcd_Set_Cursor@b
  1000  0048  0AF6               	incf	Lcd_Set_Cursor@b,f
  1001  0049  3001               	movlw	1
  1002  004A  120A  118A  24C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1003  004F                     l2216:
  1004                           
  1005                           ;main_master.c: 95: 
  1006  004F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1007  0050  00F7               	movwf	Lcd_Write_String@a
  1008  0051  3080               	movlw	128
  1009  0052  00F8               	movwf	Lcd_Write_String@a+1
  1010  0053  120A  118A  256D  120A  118A  	fcall	_Lcd_Write_String
  1011  0058                     l2218:
  1012                           
  1013                           ;main_master.c: 96: 
  1014  0058  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1015  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1016  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1017  005B  00B3               	movwf	??_main
  1018  005C  0833               	movf	??_main,w
  1019  005D  00A6               	movwf	sprintf@f
  1020  005E  0860               	movf	main@val,w
  1021  005F  00B4               	movwf	??_main+1
  1022  0060  01B5               	clrf	??_main+2
  1023  0061  0834               	movf	??_main+1,w
  1024  0062  00A7               	movwf	?_sprintf+1
  1025  0063  0835               	movf	??_main+2,w
  1026  0064  00A8               	movwf	?_sprintf+2
  1027  0065  3036               	movlw	(low (main@buffer| 0))& (0+255)
  1028  0066  120A  118A  214D  120A  118A  	fcall	_sprintf
  1029  006B                     l2220:
  1030                           
  1031                           ;main_master.c: 97: 
  1032  006B  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1033  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1034  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1035  006E  00B3               	movwf	??_main
  1036  006F  0833               	movf	??_main,w
  1037  0070  00A6               	movwf	sprintf@f
  1038  0071  085E               	movf	main@val2,w
  1039  0072  00B4               	movwf	??_main+1
  1040  0073  01B5               	clrf	??_main+2
  1041  0074  0834               	movf	??_main+1,w
  1042  0075  00A7               	movwf	?_sprintf+1
  1043  0076  0835               	movf	??_main+2,w
  1044  0077  00A8               	movwf	?_sprintf+2
  1045  0078  304A               	movlw	(low (main@buffer2| 0))& (0+255)
  1046  0079  120A  118A  214D  120A  118A  	fcall	_sprintf
  1047  007E                     l2222:
  1048                           
  1049                           ;main_master.c: 98: void setup(void){
  1050  007E  3002               	movlw	2
  1051  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0081  00B3               	movwf	??_main
  1054  0082  0833               	movf	??_main,w
  1055  0083  00F6               	movwf	Lcd_Set_Cursor@b
  1056  0084  3002               	movlw	2
  1057  0085  120A  118A  24C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1058  008A                     l2224:
  1059                           
  1060                           ;main_master.c: 99: 
  1061  008A  3036               	movlw	(low (main@buffer| 0))& (0+255)
  1062  008B  00F7               	movwf	Lcd_Write_String@a
  1063  008C  3000               	movlw	0
  1064  008D  00F8               	movwf	Lcd_Write_String@a+1
  1065  008E  120A  118A  256D  120A  118A  	fcall	_Lcd_Write_String
  1066  0093                     l2226:
  1067                           
  1068                           ;main_master.c: 100:     OSCCONbits.IRCF0 = 0;
  1069  0093  300E               	movlw	14
  1070  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0096  00B3               	movwf	??_main
  1073  0097  0833               	movf	??_main,w
  1074  0098  00F6               	movwf	Lcd_Set_Cursor@b
  1075  0099  3002               	movlw	2
  1076  009A  120A  118A  24C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1077  009F                     l2228:
  1078                           
  1079                           ;main_master.c: 101:     OSCCONbits.IRCF1 = 1;
  1080  009F  304A               	movlw	(low (main@buffer2| 0))& (0+255)
  1081  00A0  00F7               	movwf	Lcd_Write_String@a
  1082  00A1  3000               	movlw	0
  1083  00A2  00F8               	movwf	Lcd_Write_String@a+1
  1084  00A3  120A  118A  256D  120A  118A  	fcall	_Lcd_Write_String
  1085  00A8                     l2230:
  1086                           
  1087                           ;main_master.c: 103:     OSCCONbits.SCS = 1;
  1088  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1089  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1090  00AA  035F               	decf	main@val1,w
  1091  00AB  1D03               	btfss	3,2
  1092  00AC  28AE               	goto	u1681
  1093  00AD  28AF               	goto	u1680
  1094  00AE                     u1681:
  1095  00AE  28C3               	goto	l2236
  1096  00AF                     u1680:
  1097  00AF                     l2232:
  1098                           
  1099                           ;main_master.c: 104: 
  1100  00AF  3008               	movlw	8
  1101  00B0  00B3               	movwf	??_main
  1102  00B1  0833               	movf	??_main,w
  1103  00B2  00F6               	movwf	Lcd_Set_Cursor@b
  1104  00B3  3002               	movlw	2
  1105  00B4  120A  118A  24C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1106  00B9                     l2234:
  1107                           
  1108                           ;main_master.c: 105: 
  1109  00B9  3025               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1110  00BA  00F7               	movwf	Lcd_Write_String@a
  1111  00BB  3080               	movlw	128
  1112  00BC  00F8               	movwf	Lcd_Write_String@a+1
  1113  00BD  120A  118A  256D  120A  118A  	fcall	_Lcd_Write_String
  1114                           
  1115                           ;main_master.c: 106:     ANSEL = 0;
  1116  00C2  28D6               	goto	l2240
  1117  00C3                     l2236:
  1118                           
  1119                           ;main_master.c: 108: 
  1120  00C3  3008               	movlw	8
  1121  00C4  00B3               	movwf	??_main
  1122  00C5  0833               	movf	??_main,w
  1123  00C6  00F6               	movwf	Lcd_Set_Cursor@b
  1124  00C7  3002               	movlw	2
  1125  00C8  120A  118A  24C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1126  00CD                     l2238:
  1127                           
  1128                           ;main_master.c: 109: 
  1129  00CD  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1130  00CE  00F7               	movwf	Lcd_Write_String@a
  1131  00CF  3080               	movlw	128
  1132  00D0  00F8               	movwf	Lcd_Write_String@a+1
  1133  00D1  120A  118A  256D  120A  118A  	fcall	_Lcd_Write_String
  1134  00D6                     l2240:
  1135                           
  1136                           ;main_master.c: 111:     TRISCbits.TRISC0 = 0;
  1137  00D6  300B               	movlw	11
  1138  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00D9  00B5               	movwf	??_main+2
  1141  00DA  3026               	movlw	38
  1142  00DB  00B4               	movwf	??_main+1
  1143  00DC  305D               	movlw	93
  1144  00DD  00B3               	movwf	??_main
  1145  00DE                     u1697:
  1146  00DE  0BB3               	decfsz	??_main,f
  1147  00DF  28DE               	goto	u1697
  1148  00E0  0BB4               	decfsz	??_main+1,f
  1149  00E1  28DE               	goto	u1697
  1150  00E2  0BB5               	decfsz	??_main+2,f
  1151  00E3  28DE               	goto	u1697
  1152  00E4                     l2242:
  1153                           
  1154                           ;main_master.c: 114: 
  1155  00E4  120A  118A  278E  120A  118A  	fcall	_I2C_Master_Start
  1156  00E9                     l2244:
  1157                           
  1158                           ;main_master.c: 115: 
  1159  00E9  3051               	movlw	81
  1160  00EA  00F2               	movwf	I2C_Master_Write@d
  1161  00EB  3000               	movlw	0
  1162  00EC  00F3               	movwf	I2C_Master_Write@d+1
  1163  00ED  120A  118A  277B  120A  118A  	fcall	_I2C_Master_Write
  1164  00F2                     l2246:
  1165                           
  1166                           ;main_master.c: 116:     PORTA = 0x00;
  1167  00F2  3000               	movlw	0
  1168  00F3  00F2               	movwf	I2C_Master_Read@a
  1169  00F4  00F3               	movwf	I2C_Master_Read@a+1
  1170  00F5  120A  118A  26DB  120A  118A  	fcall	_I2C_Master_Read
  1171  00FA  0872               	movf	?_I2C_Master_Read,w
  1172  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00FD  00B3               	movwf	??_main
  1175  00FE  0833               	movf	??_main,w
  1176  00FF  00EB               	movwf	_R1
  1177  0100                     l2248:
  1178                           
  1179                           ;main_master.c: 117:     PORTB = 0x00;
  1180  0100  120A  118A  2785  120A  118A  	fcall	_I2C_Master_Stop
  1181  0105                     l2250:
  1182                           
  1183                           ;main_master.c: 118:     PORTC = 0x00;
  1184  0105  3002               	movlw	2
  1185  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0108  00B5               	movwf	??_main+2
  1188  0109  3004               	movlw	4
  1189  010A  00B4               	movwf	??_main+1
  1190  010B  30B9               	movlw	185
  1191  010C  00B3               	movwf	??_main
  1192  010D                     u1707:
  1193  010D  0BB3               	decfsz	??_main,f
  1194  010E  290D               	goto	u1707
  1195  010F  0BB4               	decfsz	??_main+1,f
  1196  0110  290D               	goto	u1707
  1197  0111  0BB5               	decfsz	??_main+2,f
  1198  0112  290D               	goto	u1707
  1199  0113  2914               	nop2
  1200  0114                     l2252:
  1201                           
  1202                           ;main_master.c: 121: 
  1203  0114  120A  118A  278E  120A  118A  	fcall	_I2C_Master_Start
  1204  0119                     l2254:
  1205                           
  1206                           ;main_master.c: 122: 
  1207  0119  3061               	movlw	97
  1208  011A  00F2               	movwf	I2C_Master_Write@d
  1209  011B  3000               	movlw	0
  1210  011C  00F3               	movwf	I2C_Master_Write@d+1
  1211  011D  120A  118A  277B  120A  118A  	fcall	_I2C_Master_Write
  1212  0122                     l2256:
  1213                           
  1214                           ;main_master.c: 123:     OPTION_REGbits.nRBPU = 0;
  1215  0122  3000               	movlw	0
  1216  0123  00F2               	movwf	I2C_Master_Read@a
  1217  0124  00F3               	movwf	I2C_Master_Read@a+1
  1218  0125  120A  118A  26DB  120A  118A  	fcall	_I2C_Master_Read
  1219  012A  0872               	movf	?_I2C_Master_Read,w
  1220  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1221  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1222  012D  00B3               	movwf	??_main
  1223  012E  0833               	movf	??_main,w
  1224  012F  00EA               	movwf	_R2
  1225  0130                     l2258:
  1226                           
  1227                           ;main_master.c: 124:     WPUB = 0b00000001;
  1228  0130  120A  118A  2785  120A  118A  	fcall	_I2C_Master_Stop
  1229  0135                     l2260:
  1230                           
  1231                           ;main_master.c: 125:     IOCBbits.IOCB0 = 1;
  1232  0135  3002               	movlw	2
  1233  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0138  00B5               	movwf	??_main+2
  1236  0139  3004               	movlw	4
  1237  013A  00B4               	movwf	??_main+1
  1238  013B  30B9               	movlw	185
  1239  013C  00B3               	movwf	??_main
  1240  013D                     u1717:
  1241  013D  0BB3               	decfsz	??_main,f
  1242  013E  293D               	goto	u1717
  1243  013F  0BB4               	decfsz	??_main+1,f
  1244  0140  293D               	goto	u1717
  1245  0141  0BB5               	decfsz	??_main+2,f
  1246  0142  293D               	goto	u1717
  1247  0143  2944               	nop2
  1248  0144                     l2262:
  1249                           
  1250                           ;main_master.c: 127: 
  1251  0144  120A  118A  2237  120A  118A  	fcall	_Text
  1252  0149  282C               	goto	l2202
  1253  014A  120A  118A  280C   	ljmp	start
  1254  014D                     __end_of_main:
  1255                           
  1256                           	psect	text1
  1257  014D                     __ptext1:	
  1258 ;; *************** function _sprintf *****************
  1259 ;; Defined at:
  1260 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  sp              1    wreg     PTR unsigned char 
  1263 ;;		 -> main@buffer2(20), main@buffer(20), 
  1264 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1265 ;;		 -> STR_3(4), STR_2(4), 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1268 ;;		 -> main@buffer2(20), main@buffer(20), 
  1269 ;;  tmpval          4    0        struct .
  1270 ;;  val             2   15[BANK0 ] unsigned int 
  1271 ;;  cp              2    0        PTR const unsigned char 
  1272 ;;  len             2    0        unsigned int 
  1273 ;;  c               1   18[BANK0 ] unsigned char 
  1274 ;;  prec            1   14[BANK0 ] char 
  1275 ;;  flag            1   13[BANK0 ] unsigned char 
  1276 ;;  ap              1   12[BANK0 ] PTR void [1]
  1277 ;;		 -> ?_sprintf(2), 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2    6[BANK0 ] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       3       0       0       0
  1288 ;;      Locals:         0       7       0       0       0
  1289 ;;      Temps:          0       3       0       0       0
  1290 ;;      Totals:         0      13       0       0       0
  1291 ;;Total ram usage:       13 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    2
  1294 ;; This function calls:
  1295 ;;		___lwdiv
  1296 ;;		___lwmod
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _sprintf
  1304  014D                     _sprintf:
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1308                           ;sprintf@sp stored from wreg
  1309  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1310  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1311  014F  00B1               	movwf	sprintf@sp
  1312  0150                     l2116:
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1315  0150  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1316  0151  00A9               	movwf	??_sprintf
  1317  0152  0829               	movf	??_sprintf,w
  1318  0153  00AC               	movwf	sprintf@ap
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1321  0154  2A20               	goto	l2168
  1322  0155                     l2118:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1325  0155  3025               	movlw	37
  1326  0156  0632               	xorwf	sprintf@c,w
  1327  0157  1903               	btfsc	3,2
  1328  0158  295A               	goto	u1611
  1329  0159  295B               	goto	u1610
  1330  015A                     u1611:
  1331  015A  2967               	goto	l2124
  1332  015B                     u1610:
  1333  015B                     l2120:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1336  015B  0832               	movf	sprintf@c,w
  1337  015C  00A9               	movwf	??_sprintf
  1338  015D  0831               	movf	sprintf@sp,w
  1339  015E  0084               	movwf	4
  1340  015F  0829               	movf	??_sprintf,w
  1341  0160  1383               	bcf	3,7	;select IRP bank0
  1342  0161  0080               	movwf	0
  1343  0162                     l2122:
  1344  0162  3001               	movlw	1
  1345  0163  00A9               	movwf	??_sprintf
  1346  0164  0829               	movf	??_sprintf,w
  1347  0165  07B1               	addwf	sprintf@sp,f
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1350  0166  2A20               	goto	l2168
  1351  0167                     l2124:
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1354  0167  01AD               	clrf	sprintf@flag
  1355  0168                     l2128:	
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1357                           
  1358  0168  3001               	movlw	1
  1359  0169  07A6               	addwf	sprintf@f,f
  1360  016A  30FF               	movlw	-1
  1361  016B  0726               	addwf	sprintf@f,w
  1362  016C  0084               	movwf	4
  1363  016D  120A  118A  26AE  120A  118A  	fcall	stringdir
  1364  0172  00B2               	movwf	sprintf@c
  1365  0173  00A9               	movwf	??_sprintf
  1366  0174  01AA               	clrf	??_sprintf+1
  1367                           
  1368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 1, Range of values is 0 to 0
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte            4     3 (average)
  1374                           ; direct_byte           11     8 (fixed)
  1375                           ; jumptable            260     6 (fixed)
  1376                           ;	Chosen strategy is simple_byte
  1377  0175  082A               	movf	??_sprintf+1,w
  1378  0176  3A00               	xorlw	0	; case 0
  1379  0177  1903               	skipnz
  1380  0178  297A               	goto	l2284
  1381  0179  2A20               	goto	l2168
  1382  017A                     l2284:
  1383                           
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 3, Range of values is 0 to 105
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte           10     6 (average)
  1389                           ; jumptable            260     6 (fixed)
  1390                           ;	Chosen strategy is simple_byte
  1391  017A  0829               	movf	??_sprintf,w
  1392  017B  3A00               	xorlw	0	; case 0
  1393  017C  1903               	skipnz
  1394  017D  2A32               	goto	l2170
  1395  017E  3A64               	xorlw	100	; case 100
  1396  017F  1903               	skipnz
  1397  0180  2985               	goto	l2130
  1398  0181  3A0D               	xorlw	13	; case 105
  1399  0182  1903               	skipnz
  1400  0183  2985               	goto	l2130
  1401  0184  2A20               	goto	l2168
  1402  0185                     l2130:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1405  0185  082C               	movf	sprintf@ap,w
  1406  0186  0084               	movwf	4
  1407  0187  1383               	bcf	3,7	;select IRP bank0
  1408  0188  0800               	movf	0,w
  1409  0189  00AF               	movwf	sprintf@val
  1410  018A  0A84               	incf	4,f
  1411  018B  0800               	movf	0,w
  1412  018C  00B0               	movwf	sprintf@val+1
  1413  018D                     l2132:
  1414  018D  3002               	movlw	2
  1415  018E  00A9               	movwf	??_sprintf
  1416  018F  0829               	movf	??_sprintf,w
  1417  0190  07AC               	addwf	sprintf@ap,f
  1418  0191                     l2134:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1421  0191  1FB0               	btfss	sprintf@val+1,7
  1422  0192  2994               	goto	u1621
  1423  0193  2995               	goto	u1620
  1424  0194                     u1621:
  1425  0194  299E               	goto	l2140
  1426  0195                     u1620:
  1427  0195                     l2136:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1430  0195  3003               	movlw	3
  1431  0196  00A9               	movwf	??_sprintf
  1432  0197  0829               	movf	??_sprintf,w
  1433  0198  04AD               	iorwf	sprintf@flag,f
  1434  0199                     l2138:
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1437  0199  09AF               	comf	sprintf@val,f
  1438  019A  09B0               	comf	sprintf@val+1,f
  1439  019B  0AAF               	incf	sprintf@val,f
  1440  019C  1903               	skipnz
  1441  019D  0AB0               	incf	sprintf@val+1,f
  1442  019E                     l2140:
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1445  019E  01B2               	clrf	sprintf@c
  1446  019F  0AB2               	incf	sprintf@c,f
  1447  01A0                     l2146:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1450  01A0  0832               	movf	sprintf@c,w
  1451  01A1  00A9               	movwf	??_sprintf
  1452  01A2  0729               	addwf	??_sprintf,w
  1453  01A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1454  01A4  0084               	movwf	4
  1455  01A5  120A  118A  26AE  120A  118A  	fcall	stringdir
  1456  01AA  00AA               	movwf	??_sprintf+1
  1457  01AB  120A  118A  26AE  120A  118A  	fcall	stringdir
  1458  01B0  00AB               	movwf	??_sprintf+2
  1459  01B1  082B               	movf	??_sprintf+2,w
  1460  01B2  0230               	subwf	sprintf@val+1,w
  1461  01B3  1D03               	skipz
  1462  01B4  29B7               	goto	u1635
  1463  01B5  082A               	movf	??_sprintf+1,w
  1464  01B6  022F               	subwf	sprintf@val,w
  1465  01B7                     u1635:
  1466  01B7  1803               	skipnc
  1467  01B8  29BA               	goto	u1631
  1468  01B9  29BB               	goto	u1630
  1469  01BA                     u1631:
  1470  01BA  29BC               	goto	l2150
  1471  01BB                     u1630:
  1472  01BB  29C6               	goto	l2152
  1473  01BC                     l2150:
  1474  01BC  3001               	movlw	1
  1475  01BD  00A9               	movwf	??_sprintf
  1476  01BE  0829               	movf	??_sprintf,w
  1477  01BF  07B2               	addwf	sprintf@c,f
  1478  01C0  3005               	movlw	5
  1479  01C1  0632               	xorwf	sprintf@c,w
  1480  01C2  1D03               	btfss	3,2
  1481  01C3  29C5               	goto	u1641
  1482  01C4  29C6               	goto	u1640
  1483  01C5                     u1641:
  1484  01C5  29A0               	goto	l2146
  1485  01C6                     u1640:
  1486  01C6                     l2152:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1489  01C6  082D               	movf	sprintf@flag,w
  1490  01C7  3903               	andlw	3
  1491  01C8  1903               	btfsc	3,2
  1492  01C9  29CB               	goto	u1651
  1493  01CA  29CC               	goto	u1650
  1494  01CB                     u1651:
  1495  01CB  29D7               	goto	l2158
  1496  01CC                     u1650:
  1497  01CC                     l2154:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1500  01CC  302D               	movlw	45
  1501  01CD  00A9               	movwf	??_sprintf
  1502  01CE  0831               	movf	sprintf@sp,w
  1503  01CF  0084               	movwf	4
  1504  01D0  0829               	movf	??_sprintf,w
  1505  01D1  1383               	bcf	3,7	;select IRP bank0
  1506  01D2  0080               	movwf	0
  1507  01D3                     l2156:
  1508  01D3  3001               	movlw	1
  1509  01D4  00A9               	movwf	??_sprintf
  1510  01D5  0829               	movf	??_sprintf,w
  1511  01D6  07B1               	addwf	sprintf@sp,f
  1512  01D7                     l2158:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1515  01D7  0832               	movf	sprintf@c,w
  1516  01D8  00A9               	movwf	??_sprintf
  1517  01D9  0829               	movf	??_sprintf,w
  1518  01DA  00AE               	movwf	sprintf@prec
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1521  01DB  2A17               	goto	l2166
  1522  01DC                     l2160:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1525  01DC  300A               	movlw	10
  1526  01DD  00A0               	movwf	___lwmod@divisor
  1527  01DE  3000               	movlw	0
  1528  01DF  00A1               	movwf	___lwmod@divisor+1
  1529  01E0  082E               	movf	sprintf@prec,w
  1530  01E1  00A9               	movwf	??_sprintf
  1531  01E2  0729               	addwf	??_sprintf,w
  1532  01E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1533  01E4  0084               	movwf	4
  1534  01E5  120A  118A  26AE  120A  118A  	fcall	stringdir
  1535  01EA  00F2               	movwf	___lwdiv@divisor
  1536  01EB  120A  118A  26AE  120A  118A  	fcall	stringdir
  1537  01F0  00F3               	movwf	___lwdiv@divisor+1
  1538  01F1  0830               	movf	sprintf@val+1,w
  1539  01F2  00F5               	movwf	___lwdiv@dividend+1
  1540  01F3  082F               	movf	sprintf@val,w
  1541  01F4  00F4               	movwf	___lwdiv@dividend
  1542  01F5  120A  118A  25B3  120A  118A  	fcall	___lwdiv
  1543  01FA  0873               	movf	?___lwdiv+1,w
  1544  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1545  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1546  01FD  00A3               	movwf	___lwmod@dividend+1
  1547  01FE  0872               	movf	?___lwdiv,w
  1548  01FF  00A2               	movwf	___lwmod@dividend
  1549  0200  120A  118A  25F7  120A  118A  	fcall	___lwmod
  1550  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0207  0820               	movf	?___lwmod,w
  1553  0208  3E30               	addlw	48
  1554  0209  00AA               	movwf	??_sprintf+1
  1555  020A  082A               	movf	??_sprintf+1,w
  1556  020B  00B2               	movwf	sprintf@c
  1557  020C                     l2162:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1560  020C  0832               	movf	sprintf@c,w
  1561  020D  00A9               	movwf	??_sprintf
  1562  020E  0831               	movf	sprintf@sp,w
  1563  020F  0084               	movwf	4
  1564  0210  0829               	movf	??_sprintf,w
  1565  0211  1383               	bcf	3,7	;select IRP bank0
  1566  0212  0080               	movwf	0
  1567  0213                     l2164:
  1568  0213  3001               	movlw	1
  1569  0214  00A9               	movwf	??_sprintf
  1570  0215  0829               	movf	??_sprintf,w
  1571  0216  07B1               	addwf	sprintf@sp,f
  1572  0217                     l2166:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1575  0217  30FF               	movlw	255
  1576  0218  00A9               	movwf	??_sprintf
  1577  0219  0829               	movf	??_sprintf,w
  1578  021A  07AE               	addwf	sprintf@prec,f
  1579  021B  0A2E               	incf	sprintf@prec,w
  1580  021C  1D03               	btfss	3,2
  1581  021D  2A1F               	goto	u1661
  1582  021E  2A20               	goto	u1660
  1583  021F                     u1661:
  1584  021F  29DC               	goto	l2160
  1585  0220                     u1660:
  1586  0220                     l2168:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1589  0220  3001               	movlw	1
  1590  0221  07A6               	addwf	sprintf@f,f
  1591  0222  30FF               	movlw	-1
  1592  0223  0726               	addwf	sprintf@f,w
  1593  0224  0084               	movwf	4
  1594  0225  120A  118A  26AE  120A  118A  	fcall	stringdir
  1595  022A  00A9               	movwf	??_sprintf
  1596  022B  0829               	movf	??_sprintf,w
  1597  022C  00B2               	movwf	sprintf@c
  1598  022D  0832               	movf	sprintf@c,w
  1599  022E  1D03               	btfss	3,2
  1600  022F  2A31               	goto	u1671
  1601  0230  2A32               	goto	u1670
  1602  0231                     u1671:
  1603  0231  2955               	goto	l2118
  1604  0232                     u1670:
  1605  0232                     l2170:
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1608  0232  0831               	movf	sprintf@sp,w
  1609  0233  0084               	movwf	4
  1610  0234  1383               	bcf	3,7	;select IRP bank0
  1611  0235  0180               	clrf	0
  1612  0236                     l364:
  1613  0236  0008               	return
  1614  0237                     __end_of_sprintf:
  1615                           
  1616                           	psect	text2
  1617  05F7                     __ptext2:	
  1618 ;; *************** function ___lwmod *****************
  1619 ;; Defined at:
  1620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  divisor         2    0[BANK0 ] unsigned int 
  1623 ;;  dividend        2    2[BANK0 ] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  counter         1    5[BANK0 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    0[BANK0 ] unsigned int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       1       0       0       0
  1637 ;;      Temps:          0       1       0       0       0
  1638 ;;      Totals:         0       6       0       0       0
  1639 ;;Total ram usage:        6 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_sprintf
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function ___lwmod
  1651  05F7                     ___lwmod:
  1652  05F7                     l2034:	
  1653                           ;incstack = 0
  1654                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1655                           
  1656  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1657  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1658  05F9  0820               	movf	___lwmod@divisor,w
  1659  05FA  0421               	iorwf	___lwmod@divisor+1,w
  1660  05FB  1903               	btfsc	3,2
  1661  05FC  2DFE               	goto	u1521
  1662  05FD  2DFF               	goto	u1520
  1663  05FE                     u1521:
  1664  05FE  2E2E               	goto	l2052
  1665  05FF                     u1520:
  1666  05FF                     l2036:
  1667  05FF  01A5               	clrf	___lwmod@counter
  1668  0600  0AA5               	incf	___lwmod@counter,f
  1669  0601  2E0D               	goto	l2042
  1670  0602                     l2038:
  1671  0602  3001               	movlw	1
  1672  0603                     u1535:
  1673  0603  1003               	clrc
  1674  0604  0DA0               	rlf	___lwmod@divisor,f
  1675  0605  0DA1               	rlf	___lwmod@divisor+1,f
  1676  0606  3EFF               	addlw	-1
  1677  0607  1D03               	skipz
  1678  0608  2E03               	goto	u1535
  1679  0609                     l2040:
  1680  0609  3001               	movlw	1
  1681  060A  00A4               	movwf	??___lwmod
  1682  060B  0824               	movf	??___lwmod,w
  1683  060C  07A5               	addwf	___lwmod@counter,f
  1684  060D                     l2042:
  1685  060D  1FA1               	btfss	___lwmod@divisor+1,7
  1686  060E  2E10               	goto	u1541
  1687  060F  2E11               	goto	u1540
  1688  0610                     u1541:
  1689  0610  2E02               	goto	l2038
  1690  0611                     u1540:
  1691  0611                     l2044:
  1692  0611  0821               	movf	___lwmod@divisor+1,w
  1693  0612  0223               	subwf	___lwmod@dividend+1,w
  1694  0613  1D03               	skipz
  1695  0614  2E17               	goto	u1555
  1696  0615  0820               	movf	___lwmod@divisor,w
  1697  0616  0222               	subwf	___lwmod@dividend,w
  1698  0617                     u1555:
  1699  0617  1C03               	skipc
  1700  0618  2E1A               	goto	u1551
  1701  0619  2E1B               	goto	u1550
  1702  061A                     u1551:
  1703  061A  2E21               	goto	l2048
  1704  061B                     u1550:
  1705  061B                     l2046:
  1706  061B  0820               	movf	___lwmod@divisor,w
  1707  061C  02A2               	subwf	___lwmod@dividend,f
  1708  061D  0821               	movf	___lwmod@divisor+1,w
  1709  061E  1C03               	skipc
  1710  061F  03A3               	decf	___lwmod@dividend+1,f
  1711  0620  02A3               	subwf	___lwmod@dividend+1,f
  1712  0621                     l2048:
  1713  0621  3001               	movlw	1
  1714  0622                     u1565:
  1715  0622  1003               	clrc
  1716  0623  0CA1               	rrf	___lwmod@divisor+1,f
  1717  0624  0CA0               	rrf	___lwmod@divisor,f
  1718  0625  3EFF               	addlw	-1
  1719  0626  1D03               	skipz
  1720  0627  2E22               	goto	u1565
  1721  0628                     l2050:
  1722  0628  3001               	movlw	1
  1723  0629  02A5               	subwf	___lwmod@counter,f
  1724  062A  1D03               	btfss	3,2
  1725  062B  2E2D               	goto	u1571
  1726  062C  2E2E               	goto	u1570
  1727  062D                     u1571:
  1728  062D  2E11               	goto	l2044
  1729  062E                     u1570:
  1730  062E                     l2052:
  1731  062E  0823               	movf	___lwmod@dividend+1,w
  1732  062F  00A1               	movwf	?___lwmod+1
  1733  0630  0822               	movf	___lwmod@dividend,w
  1734  0631  00A0               	movwf	?___lwmod
  1735  0632                     l650:
  1736  0632  0008               	return
  1737  0633                     __end_of___lwmod:
  1738                           
  1739                           	psect	text3
  1740  05B3                     __ptext3:	
  1741 ;; *************** function ___lwdiv *****************
  1742 ;; Defined at:
  1743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  divisor         2    2[COMMON] unsigned int 
  1746 ;;  dividend        2    4[COMMON] unsigned int 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  quotient        2    7[COMMON] unsigned int 
  1749 ;;  counter         1    9[COMMON] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  2    2[COMMON] unsigned int 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         4       0       0       0       0
  1760 ;;      Locals:         3       0       0       0       0
  1761 ;;      Temps:          1       0       0       0       0
  1762 ;;      Totals:         8       0       0       0       0
  1763 ;;Total ram usage:        8 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_sprintf
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function ___lwdiv
  1775  05B3                     ___lwdiv:
  1776  05B3                     l1590:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1779                           
  1780  05B3  01F7               	clrf	___lwdiv@quotient
  1781  05B4  01F8               	clrf	___lwdiv@quotient+1
  1782  05B5                     l1592:
  1783  05B5  0872               	movf	___lwdiv@divisor,w
  1784  05B6  0473               	iorwf	___lwdiv@divisor+1,w
  1785  05B7  1903               	btfsc	3,2
  1786  05B8  2DBA               	goto	u1021
  1787  05B9  2DBB               	goto	u1020
  1788  05BA                     u1021:
  1789  05BA  2DF2               	goto	l1612
  1790  05BB                     u1020:
  1791  05BB                     l1594:
  1792  05BB  01F9               	clrf	___lwdiv@counter
  1793  05BC  0AF9               	incf	___lwdiv@counter,f
  1794  05BD  2DC9               	goto	l1600
  1795  05BE                     l1596:
  1796  05BE  3001               	movlw	1
  1797  05BF                     u1035:
  1798  05BF  1003               	clrc
  1799  05C0  0DF2               	rlf	___lwdiv@divisor,f
  1800  05C1  0DF3               	rlf	___lwdiv@divisor+1,f
  1801  05C2  3EFF               	addlw	-1
  1802  05C3  1D03               	skipz
  1803  05C4  2DBF               	goto	u1035
  1804  05C5                     l1598:
  1805  05C5  3001               	movlw	1
  1806  05C6  00F6               	movwf	??___lwdiv
  1807  05C7  0876               	movf	??___lwdiv,w
  1808  05C8  07F9               	addwf	___lwdiv@counter,f
  1809  05C9                     l1600:
  1810  05C9  1FF3               	btfss	___lwdiv@divisor+1,7
  1811  05CA  2DCC               	goto	u1041
  1812  05CB  2DCD               	goto	u1040
  1813  05CC                     u1041:
  1814  05CC  2DBE               	goto	l1596
  1815  05CD                     u1040:
  1816  05CD                     l1602:
  1817  05CD  3001               	movlw	1
  1818  05CE                     u1055:
  1819  05CE  1003               	clrc
  1820  05CF  0DF7               	rlf	___lwdiv@quotient,f
  1821  05D0  0DF8               	rlf	___lwdiv@quotient+1,f
  1822  05D1  3EFF               	addlw	-1
  1823  05D2  1D03               	skipz
  1824  05D3  2DCE               	goto	u1055
  1825  05D4  0873               	movf	___lwdiv@divisor+1,w
  1826  05D5  0275               	subwf	___lwdiv@dividend+1,w
  1827  05D6  1D03               	skipz
  1828  05D7  2DDA               	goto	u1065
  1829  05D8  0872               	movf	___lwdiv@divisor,w
  1830  05D9  0274               	subwf	___lwdiv@dividend,w
  1831  05DA                     u1065:
  1832  05DA  1C03               	skipc
  1833  05DB  2DDD               	goto	u1061
  1834  05DC  2DDE               	goto	u1060
  1835  05DD                     u1061:
  1836  05DD  2DE5               	goto	l1608
  1837  05DE                     u1060:
  1838  05DE                     l1604:
  1839  05DE  0872               	movf	___lwdiv@divisor,w
  1840  05DF  02F4               	subwf	___lwdiv@dividend,f
  1841  05E0  0873               	movf	___lwdiv@divisor+1,w
  1842  05E1  1C03               	skipc
  1843  05E2  03F5               	decf	___lwdiv@dividend+1,f
  1844  05E3  02F5               	subwf	___lwdiv@dividend+1,f
  1845  05E4                     l1606:
  1846  05E4  1477               	bsf	___lwdiv@quotient,0
  1847  05E5                     l1608:
  1848  05E5  3001               	movlw	1
  1849  05E6                     u1075:
  1850  05E6  1003               	clrc
  1851  05E7  0CF3               	rrf	___lwdiv@divisor+1,f
  1852  05E8  0CF2               	rrf	___lwdiv@divisor,f
  1853  05E9  3EFF               	addlw	-1
  1854  05EA  1D03               	skipz
  1855  05EB  2DE6               	goto	u1075
  1856  05EC                     l1610:
  1857  05EC  3001               	movlw	1
  1858  05ED  02F9               	subwf	___lwdiv@counter,f
  1859  05EE  1D03               	btfss	3,2
  1860  05EF  2DF1               	goto	u1081
  1861  05F0  2DF2               	goto	u1080
  1862  05F1                     u1081:
  1863  05F1  2DCD               	goto	l1602
  1864  05F2                     u1080:
  1865  05F2                     l1612:
  1866  05F2  0878               	movf	___lwdiv@quotient+1,w
  1867  05F3  00F3               	movwf	?___lwdiv+1
  1868  05F4  0877               	movf	___lwdiv@quotient,w
  1869  05F5  00F2               	movwf	?___lwdiv
  1870  05F6                     l640:
  1871  05F6  0008               	return
  1872  05F7                     __end_of___lwdiv:
  1873                           
  1874                           	psect	text4
  1875  0520                     __ptext4:	
  1876 ;; *************** function _setup *****************
  1877 ;; Defined at:
  1878 ;;		line 135 in file "main_master.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    3
  1899 ;; This function calls:
  1900 ;;		_I2C_Master_Init
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _setup
  1908  0520                     _setup:
  1909  0520                     l2056:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1912                           
  1913                           
  1914                           ;main_master.c: 137:     RCSTAbits.CREN = 1;
  1915  0520  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0521  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0522  120F               	bcf	15,4	;volatile
  1918                           
  1919                           ;main_master.c: 138:     TXSTAbits.TX9 = 0;
  1920  0523  168F               	bsf	15,5	;volatile
  1921                           
  1922                           ;main_master.c: 139: 
  1923  0524  170F               	bsf	15,6	;volatile
  1924                           
  1925                           ;main_master.c: 140:     TXSTAbits.TXEN = 1;
  1926  0525  140F               	bsf	15,0	;volatile
  1927  0526                     l2058:
  1928                           
  1929                           ;main_master.c: 143:     PIR1bits.TXIF = 0;
  1930  0526  1683               	bsf	3,5	;RP0=1, select bank3
  1931  0527  1703               	bsf	3,6	;RP1=1, select bank3
  1932  0528  0188               	clrf	8	;volatile
  1933                           
  1934                           ;main_master.c: 144: 
  1935  0529  0189               	clrf	9	;volatile
  1936  052A                     l2060:
  1937                           
  1938                           ;main_master.c: 147:     INTCONbits.PEIE = 1;
  1939  052A  1683               	bsf	3,5	;RP0=1, select bank1
  1940  052B  1303               	bcf	3,6	;RP1=0, select bank1
  1941  052C  1406               	bsf	6,0	;volatile
  1942  052D                     l2062:
  1943                           
  1944                           ;main_master.c: 148:     PIE1bits.RCIE = 0;
  1945  052D  1007               	bcf	7,0	;volatile
  1946                           
  1947                           ;main_master.c: 149:     PIE1bits.TXIE = 0;
  1948  052E  0188               	clrf	8	;volatile
  1949                           
  1950                           ;main_master.c: 150:     INTCONbits.RBIF = 1;
  1951  052F  0185               	clrf	5	;volatile
  1952                           
  1953                           ;main_master.c: 153: 
  1954  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0532  0185               	clrf	5	;volatile
  1957                           
  1958                           ;main_master.c: 154:     I2C_Master_Init(100000);
  1959  0533  0186               	clrf	6	;volatile
  1960                           
  1961                           ;main_master.c: 155: }
  1962  0534  0187               	clrf	7	;volatile
  1963                           
  1964                           ;main_master.c: 156: 
  1965  0535  0188               	clrf	8	;volatile
  1966                           
  1967                           ;main_master.c: 157: 
  1968  0536  0189               	clrf	9	;volatile
  1969  0537                     l2064:
  1970                           
  1971                           ;main_master.c: 160:      division(cont);
  1972  0537  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0538  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0539  1381               	bcf	1,7	;volatile
  1975  053A                     l2066:
  1976                           
  1977                           ;main_master.c: 161:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1978  053A  3001               	movlw	1
  1979  053B  0095               	movwf	21	;volatile
  1980  053C                     l2068:
  1981                           
  1982                           ;main_master.c: 162:     TXREG = decenas;
  1983  053C  1416               	bsf	22,0	;volatile
  1984  053D                     l2070:
  1985                           
  1986                           ;main_master.c: 165:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1987  053D  1218               	bcf	24,4	;volatile
  1988  053E                     l2072:
  1989                           
  1990                           ;main_master.c: 166: 
  1991  053E  1518               	bsf	24,2	;volatile
  1992  053F                     l2074:
  1993                           
  1994                           ;main_master.c: 167: 
  1995  053F  1683               	bsf	3,5	;RP0=1, select bank3
  1996  0540  1703               	bsf	3,6	;RP1=1, select bank3
  1997  0541  1187               	bcf	7,3	;volatile
  1998  0542                     l2076:
  1999                           
  2000                           ;main_master.c: 169:     division(stat);
  2001  0542  3019               	movlw	25
  2002  0543  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0544  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0545  0099               	movwf	25	;volatile
  2005  0546                     l2078:
  2006                           
  2007                           ;main_master.c: 170: 
  2008  0546  3001               	movlw	1
  2009  0547  009A               	movwf	26	;volatile
  2010  0548                     l2080:
  2011                           
  2012                           ;main_master.c: 172:     TXREG = unidades;
  2013  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2015  054A  1798               	bsf	24,7	;volatile
  2016  054B                     l2082:
  2017                           
  2018                           ;main_master.c: 173:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2019  054B  1318               	bcf	24,6	;volatile
  2020  054C                     l2084:
  2021                           
  2022                           ;main_master.c: 174: 
  2023  054C  1618               	bsf	24,4	;volatile
  2024  054D                     l2086:
  2025                           
  2026                           ;main_master.c: 175: 
  2027  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2028  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2029  054F  1318               	bcf	24,6	;volatile
  2030  0550                     l2088:
  2031                           
  2032                           ;main_master.c: 177:      division(temp);
  2033  0550  1698               	bsf	24,5	;volatile
  2034  0551                     l2090:
  2035                           
  2036                           ;main_master.c: 179:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2037  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0553  128C               	bcf	12,5	;volatile
  2040  0554                     l2092:
  2041                           
  2042                           ;main_master.c: 180:     TXREG = centenas;
  2043  0554  120C               	bcf	12,4	;volatile
  2044  0555                     l2094:
  2045                           
  2046                           ;main_master.c: 183:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2047  0555  178B               	bsf	11,7	;volatile
  2048  0556                     l2096:
  2049                           
  2050                           ;main_master.c: 184:     TXREG = unidades;
  2051  0556  170B               	bsf	11,6	;volatile
  2052  0557                     l2098:
  2053                           
  2054                           ;main_master.c: 185:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2055  0557  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0558  1303               	bcf	3,6	;RP1=0, select bank1
  2057  0559  128C               	bcf	12,5	;volatile
  2058  055A                     l2100:
  2059                           
  2060                           ;main_master.c: 186: 
  2061  055A  120C               	bcf	12,4	;volatile
  2062  055B                     l2102:
  2063                           
  2064                           ;main_master.c: 187: }
  2065  055B  140B               	bsf	11,0	;volatile
  2066  055C                     l2104:
  2067                           
  2068                           ;main_master.c: 188: 
  2069  055C  158B               	bsf	11,3	;volatile
  2070  055D                     l2106:
  2071                           
  2072                           ;main_master.c: 191:     centenas = valor/100;
  2073  055D  3000               	movlw	0
  2074  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2075  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0560  00A9               	movwf	I2C_Master_Init@c+3
  2077  0561  3001               	movlw	1
  2078  0562  00A8               	movwf	I2C_Master_Init@c+2
  2079  0563  3086               	movlw	134
  2080  0564  00A7               	movwf	I2C_Master_Init@c+1
  2081  0565  30A0               	movlw	160
  2082  0566  00A6               	movwf	I2C_Master_Init@c
  2083  0567  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Init
  2084  056C                     l132:
  2085  056C  0008               	return
  2086  056D                     __end_of_setup:
  2087                           
  2088                           	psect	text5
  2089  066C                     __ptext5:	
  2090 ;; *************** function _I2C_Master_Init *****************
  2091 ;; Defined at:
  2092 ;;		line 16 in file "I2C.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  c               4    6[BANK0 ] const unsigned long 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       4       0       0       0
  2107 ;;      Locals:         0       0       0       0       0
  2108 ;;      Temps:          0       4       0       0       0
  2109 ;;      Totals:         0       8       0       0       0
  2110 ;;Total ram usage:        8 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    2
  2113 ;; This function calls:
  2114 ;;		___lldiv
  2115 ;; This function is called by:
  2116 ;;		_setup
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _I2C_Master_Init
  2122  066C                     _I2C_Master_Init:
  2123  066C                     l2014:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2126                           
  2127                           
  2128                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2129  066C  3028               	movlw	40
  2130  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2131  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2132  066F  0094               	movwf	20	;volatile
  2133  0670                     l2016:
  2134                           
  2135                           ;I2C.c: 19:     SSPCON2 = 0;
  2136  0670  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0671  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0672  0191               	clrf	17	;volatile
  2139  0673                     l2018:
  2140                           
  2141                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2142  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0675  0826               	movf	I2C_Master_Init@c,w
  2145  0676  00AA               	movwf	??_I2C_Master_Init
  2146  0677  0827               	movf	I2C_Master_Init@c+1,w
  2147  0678  00AB               	movwf	??_I2C_Master_Init+1
  2148  0679  0828               	movf	I2C_Master_Init@c+2,w
  2149  067A  00AC               	movwf	??_I2C_Master_Init+2
  2150  067B  0829               	movf	I2C_Master_Init@c+3,w
  2151  067C  00AD               	movwf	??_I2C_Master_Init+3
  2152  067D  3002               	movlw	2
  2153  067E                     u1515:
  2154  067E  1003               	clrc
  2155  067F  0DAA               	rlf	??_I2C_Master_Init,f
  2156  0680  0DAB               	rlf	??_I2C_Master_Init+1,f
  2157  0681  0DAC               	rlf	??_I2C_Master_Init+2,f
  2158  0682  0DAD               	rlf	??_I2C_Master_Init+3,f
  2159  0683                     u1510:
  2160  0683  3EFF               	addlw	-1
  2161  0684  1D03               	skipz
  2162  0685  2E7E               	goto	u1515
  2163  0686  082D               	movf	??_I2C_Master_Init+3,w
  2164  0687  00F5               	movwf	___lldiv@divisor+3
  2165  0688  082C               	movf	??_I2C_Master_Init+2,w
  2166  0689  00F4               	movwf	___lldiv@divisor+2
  2167  068A  082B               	movf	??_I2C_Master_Init+1,w
  2168  068B  00F3               	movwf	___lldiv@divisor+1
  2169  068C  082A               	movf	??_I2C_Master_Init,w
  2170  068D  00F2               	movwf	___lldiv@divisor
  2171  068E  3000               	movlw	0
  2172  068F  00F9               	movwf	___lldiv@dividend+3
  2173  0690  307A               	movlw	122
  2174  0691  00F8               	movwf	___lldiv@dividend+2
  2175  0692  3012               	movlw	18
  2176  0693  00F7               	movwf	___lldiv@dividend+1
  2177  0694  3000               	movlw	0
  2178  0695  00F6               	movwf	___lldiv@dividend
  2179  0696  120A  118A  23AA  120A  118A  	fcall	___lldiv
  2180  069B  0872               	movf	?___lldiv,w
  2181  069C  3EFF               	addlw	255
  2182  069D  1683               	bsf	3,5	;RP0=1, select bank1
  2183  069E  1303               	bcf	3,6	;RP1=0, select bank1
  2184  069F  0093               	movwf	19	;volatile
  2185  06A0                     l2020:
  2186                           
  2187                           ;I2C.c: 21:     SSPSTAT = 0;
  2188  06A0  0194               	clrf	20	;volatile
  2189  06A1                     l2022:
  2190                           
  2191                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2192  06A1  1587               	bsf	7,3	;volatile
  2193  06A2                     l2024:
  2194                           
  2195                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2196  06A2  1607               	bsf	7,4	;volatile
  2197  06A3                     l173:
  2198  06A3  0008               	return
  2199  06A4                     __end_of_I2C_Master_Init:
  2200                           
  2201                           	psect	text6
  2202  03AA                     __ptext6:	
  2203 ;; *************** function ___lldiv *****************
  2204 ;; Defined at:
  2205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  divisor         4    2[COMMON] unsigned long 
  2208 ;;  dividend        4    6[COMMON] unsigned long 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  quotient        4    1[BANK0 ] unsigned long 
  2211 ;;  counter         1    5[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  4    2[COMMON] unsigned long 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         8       0       0       0       0
  2222 ;;      Locals:         0       5       0       0       0
  2223 ;;      Temps:          0       1       0       0       0
  2224 ;;      Totals:         8       6       0       0       0
  2225 ;;Total ram usage:       14 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_I2C_Master_Init
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function ___lldiv
  2237  03AA                     ___lldiv:
  2238  03AA                     l1946:	
  2239                           ;incstack = 0
  2240                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2241                           
  2242  03AA  3000               	movlw	0
  2243  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2244  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2245  03AD  00A4               	movwf	___lldiv@quotient+3
  2246  03AE  3000               	movlw	0
  2247  03AF  00A3               	movwf	___lldiv@quotient+2
  2248  03B0  3000               	movlw	0
  2249  03B1  00A2               	movwf	___lldiv@quotient+1
  2250  03B2  3000               	movlw	0
  2251  03B3  00A1               	movwf	___lldiv@quotient
  2252  03B4  0875               	movf	___lldiv@divisor+3,w
  2253  03B5  0474               	iorwf	___lldiv@divisor+2,w
  2254  03B6  0473               	iorwf	___lldiv@divisor+1,w
  2255  03B7  0472               	iorwf	___lldiv@divisor,w
  2256  03B8  1903               	skipnz
  2257  03B9  2BBB               	goto	u1341
  2258  03BA  2BBC               	goto	u1340
  2259  03BB                     u1341:
  2260  03BB  2C09               	goto	l1966
  2261  03BC                     u1340:
  2262  03BC                     l1948:
  2263  03BC  01A5               	clrf	___lldiv@counter
  2264  03BD  0AA5               	incf	___lldiv@counter,f
  2265  03BE  2BCC               	goto	l1952
  2266  03BF                     l1950:
  2267  03BF  3001               	movlw	1
  2268  03C0  00A0               	movwf	??___lldiv
  2269  03C1                     u1355:
  2270  03C1  1003               	clrc
  2271  03C2  0DF2               	rlf	___lldiv@divisor,f
  2272  03C3  0DF3               	rlf	___lldiv@divisor+1,f
  2273  03C4  0DF4               	rlf	___lldiv@divisor+2,f
  2274  03C5  0DF5               	rlf	___lldiv@divisor+3,f
  2275  03C6  0BA0               	decfsz	??___lldiv,f
  2276  03C7  2BC1               	goto	u1355
  2277  03C8  3001               	movlw	1
  2278  03C9  00A0               	movwf	??___lldiv
  2279  03CA  0820               	movf	??___lldiv,w
  2280  03CB  07A5               	addwf	___lldiv@counter,f
  2281  03CC                     l1952:
  2282  03CC  1FF5               	btfss	___lldiv@divisor+3,7
  2283  03CD  2BCF               	goto	u1361
  2284  03CE  2BD0               	goto	u1360
  2285  03CF                     u1361:
  2286  03CF  2BBF               	goto	l1950
  2287  03D0                     u1360:
  2288  03D0                     l1954:
  2289  03D0  3001               	movlw	1
  2290  03D1  00A0               	movwf	??___lldiv
  2291  03D2                     u1375:
  2292  03D2  1003               	clrc
  2293  03D3  0DA1               	rlf	___lldiv@quotient,f
  2294  03D4  0DA2               	rlf	___lldiv@quotient+1,f
  2295  03D5  0DA3               	rlf	___lldiv@quotient+2,f
  2296  03D6  0DA4               	rlf	___lldiv@quotient+3,f
  2297  03D7  0BA0               	decfsz	??___lldiv,f
  2298  03D8  2BD2               	goto	u1375
  2299  03D9                     l1956:
  2300  03D9  0875               	movf	___lldiv@divisor+3,w
  2301  03DA  0279               	subwf	___lldiv@dividend+3,w
  2302  03DB  1D03               	skipz
  2303  03DC  2BE7               	goto	u1385
  2304  03DD  0874               	movf	___lldiv@divisor+2,w
  2305  03DE  0278               	subwf	___lldiv@dividend+2,w
  2306  03DF  1D03               	skipz
  2307  03E0  2BE7               	goto	u1385
  2308  03E1  0873               	movf	___lldiv@divisor+1,w
  2309  03E2  0277               	subwf	___lldiv@dividend+1,w
  2310  03E3  1D03               	skipz
  2311  03E4  2BE7               	goto	u1385
  2312  03E5  0872               	movf	___lldiv@divisor,w
  2313  03E6  0276               	subwf	___lldiv@dividend,w
  2314  03E7                     u1385:
  2315  03E7  1C03               	skipc
  2316  03E8  2BEA               	goto	u1381
  2317  03E9  2BEB               	goto	u1380
  2318  03EA                     u1381:
  2319  03EA  2BFA               	goto	l1962
  2320  03EB                     u1380:
  2321  03EB                     l1958:
  2322  03EB  0872               	movf	___lldiv@divisor,w
  2323  03EC  02F6               	subwf	___lldiv@dividend,f
  2324  03ED  0873               	movf	___lldiv@divisor+1,w
  2325  03EE  1C03               	skipc
  2326  03EF  0F73               	incfsz	___lldiv@divisor+1,w
  2327  03F0  02F7               	subwf	___lldiv@dividend+1,f
  2328  03F1  0874               	movf	___lldiv@divisor+2,w
  2329  03F2  1C03               	skipc
  2330  03F3  0F74               	incfsz	___lldiv@divisor+2,w
  2331  03F4  02F8               	subwf	___lldiv@dividend+2,f
  2332  03F5  0875               	movf	___lldiv@divisor+3,w
  2333  03F6  1C03               	skipc
  2334  03F7  0F75               	incfsz	___lldiv@divisor+3,w
  2335  03F8  02F9               	subwf	___lldiv@dividend+3,f
  2336  03F9                     l1960:
  2337  03F9  1421               	bsf	___lldiv@quotient,0
  2338  03FA                     l1962:
  2339  03FA  3001               	movlw	1
  2340  03FB                     u1395:
  2341  03FB  1003               	clrc
  2342  03FC  0CF5               	rrf	___lldiv@divisor+3,f
  2343  03FD  0CF4               	rrf	___lldiv@divisor+2,f
  2344  03FE  0CF3               	rrf	___lldiv@divisor+1,f
  2345  03FF  0CF2               	rrf	___lldiv@divisor,f
  2346  0400  3EFF               	addlw	-1
  2347  0401  1D03               	skipz
  2348  0402  2BFB               	goto	u1395
  2349  0403                     l1964:
  2350  0403  3001               	movlw	1
  2351  0404  02A5               	subwf	___lldiv@counter,f
  2352  0405  1D03               	btfss	3,2
  2353  0406  2C08               	goto	u1401
  2354  0407  2C09               	goto	u1400
  2355  0408                     u1401:
  2356  0408  2BD0               	goto	l1954
  2357  0409                     u1400:
  2358  0409                     l1966:
  2359  0409  0824               	movf	___lldiv@quotient+3,w
  2360  040A  00F5               	movwf	?___lldiv+3
  2361  040B  0823               	movf	___lldiv@quotient+2,w
  2362  040C  00F4               	movwf	?___lldiv+2
  2363  040D  0822               	movf	___lldiv@quotient+1,w
  2364  040E  00F3               	movwf	?___lldiv+1
  2365  040F  0821               	movf	___lldiv@quotient,w
  2366  0410  00F2               	movwf	?___lldiv
  2367  0411                     l404:
  2368  0411  0008               	return
  2369  0412                     __end_of___lldiv:
  2370                           
  2371                           	psect	text7
  2372  0237                     __ptext7:	
  2373 ;; *************** function _Text *****************
  2374 ;; Defined at:
  2375 ;;		line 195 in file "main_master.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          0       2       0       0       0
  2392 ;;      Totals:         0       2       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    3
  2396 ;; This function calls:
  2397 ;;		_division
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _Text
  2405  0237                     _Text:
  2406  0237                     l2178:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _Text: [wreg+status,2+status,0+pclath+cstack]
  2409                           
  2410                           
  2411                           ;main_master.c: 196:     centenas = centenas + 48;
  2412  0237  3041               	movlw	65
  2413  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2415  023A  00A8               	movwf	??_Text+1
  2416  023B  30ED               	movlw	237
  2417  023C  00A7               	movwf	??_Text
  2418  023D                     u1727:
  2419  023D  0BA7               	decfsz	??_Text,f
  2420  023E  2A3D               	goto	u1727
  2421  023F  0BA8               	decfsz	??_Text+1,f
  2422  0240  2A3D               	goto	u1727
  2423  0241  2A42               	nop2
  2424  0242                     l2180:
  2425                           
  2426                           ;main_master.c: 197:     decenas = decenas + 48;
  2427  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0244  0867               	movf	_cont,w
  2430  0245  120A  118A  22D6  120A  118A  	fcall	_division
  2431  024A                     l2182:
  2432                           
  2433                           ;main_master.c: 198:     unidades = unidades + 48;
  2434  024A  3041               	movlw	65
  2435  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2436  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2437  024D  00A8               	movwf	??_Text+1
  2438  024E  30ED               	movlw	237
  2439  024F  00A7               	movwf	??_Text
  2440  0250                     u1737:
  2441  0250  0BA7               	decfsz	??_Text,f
  2442  0251  2A50               	goto	u1737
  2443  0252  0BA8               	decfsz	??_Text+1,f
  2444  0253  2A50               	goto	u1737
  2445  0254  2A55               	nop2
  2446  0255                     l2184:
  2447                           
  2448                           ;main_master.c: 199: }
  2449  0255  087B               	movf	_decenas,w
  2450  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0258  0099               	movwf	25	;volatile
  2453  0259                     l2186:
  2454                           
  2455                           ;main_master.c: 200: 
  2456  0259  3041               	movlw	65
  2457  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2458  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2459  025C  00A8               	movwf	??_Text+1
  2460  025D  30ED               	movlw	237
  2461  025E  00A7               	movwf	??_Text
  2462  025F                     u1747:
  2463  025F  0BA7               	decfsz	??_Text,f
  2464  0260  2A5F               	goto	u1747
  2465  0261  0BA8               	decfsz	??_Text+1,f
  2466  0262  2A5F               	goto	u1747
  2467  0263  2A64               	nop2
  2468  0264                     l2188:
  2469                           
  2470                           ;main_master.c: 201: 
  2471  0264  087A               	movf	_unidades,w
  2472  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0267  0099               	movwf	25	;volatile
  2475  0268                     l2190:
  2476                           
  2477                           ;main_master.c: 202: void putch(char data){
  2478  0268  3041               	movlw	65
  2479  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2480  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2481  026B  00A8               	movwf	??_Text+1
  2482  026C  30ED               	movlw	237
  2483  026D  00A7               	movwf	??_Text
  2484  026E                     u1757:
  2485  026E  0BA7               	decfsz	??_Text,f
  2486  026F  2A6E               	goto	u1757
  2487  0270  0BA8               	decfsz	??_Text+1,f
  2488  0271  2A6E               	goto	u1757
  2489  0272  2A73               	nop2
  2490                           
  2491                           ;main_master.c: 206: }
  2492  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0275  0868               	movf	_stat,w
  2495  0276  120A  118A  22D6  120A  118A  	fcall	_division
  2496  027B                     l2192:
  2497  027B  3041               	movlw	65
  2498  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2499  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2500  027E  00A8               	movwf	??_Text+1
  2501  027F  30ED               	movlw	237
  2502  0280  00A7               	movwf	??_Text
  2503  0281                     u1767:
  2504  0281  0BA7               	decfsz	??_Text,f
  2505  0282  2A81               	goto	u1767
  2506  0283  0BA8               	decfsz	??_Text+1,f
  2507  0284  2A81               	goto	u1767
  2508  0285  2A86               	nop2
  2509  0286                     l2194:
  2510  0286  087A               	movf	_unidades,w
  2511  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0289  0099               	movwf	25	;volatile
  2514  028A                     l2196:
  2515  028A  3041               	movlw	65
  2516  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2517  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2518  028D  00A8               	movwf	??_Text+1
  2519  028E  30ED               	movlw	237
  2520  028F  00A7               	movwf	??_Text
  2521  0290                     u1777:
  2522  0290  0BA7               	decfsz	??_Text,f
  2523  0291  2A90               	goto	u1777
  2524  0292  0BA8               	decfsz	??_Text+1,f
  2525  0293  2A90               	goto	u1777
  2526  0294  2A95               	nop2
  2527  0295                     l2198:
  2528  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0297  0869               	movf	_temp,w
  2531  0298  120A  118A  22D6  120A  118A  	fcall	_division
  2532  029D  3041               	movlw	65
  2533  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2534  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2535  02A0  00A8               	movwf	??_Text+1
  2536  02A1  30ED               	movlw	237
  2537  02A2  00A7               	movwf	??_Text
  2538  02A3                     u1787:
  2539  02A3  0BA7               	decfsz	??_Text,f
  2540  02A4  2AA3               	goto	u1787
  2541  02A5  0BA8               	decfsz	??_Text+1,f
  2542  02A6  2AA3               	goto	u1787
  2543  02A7  2AA8               	nop2
  2544  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2545  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2546  02AA  0865               	movf	_centenas,w
  2547  02AB  0099               	movwf	25	;volatile
  2548  02AC  3041               	movlw	65
  2549  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2550  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2551  02AF  00A8               	movwf	??_Text+1
  2552  02B0  30ED               	movlw	237
  2553  02B1  00A7               	movwf	??_Text
  2554  02B2                     u1797:
  2555  02B2  0BA7               	decfsz	??_Text,f
  2556  02B3  2AB2               	goto	u1797
  2557  02B4  0BA8               	decfsz	??_Text+1,f
  2558  02B5  2AB2               	goto	u1797
  2559  02B6  2AB7               	nop2
  2560  02B7  087B               	movf	_decenas,w
  2561  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2562  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2563  02BA  0099               	movwf	25	;volatile
  2564  02BB  3041               	movlw	65
  2565  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2566  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2567  02BE  00A8               	movwf	??_Text+1
  2568  02BF  30ED               	movlw	237
  2569  02C0  00A7               	movwf	??_Text
  2570  02C1                     u1807:
  2571  02C1  0BA7               	decfsz	??_Text,f
  2572  02C2  2AC1               	goto	u1807
  2573  02C3  0BA8               	decfsz	??_Text+1,f
  2574  02C4  2AC1               	goto	u1807
  2575  02C5  2AC6               	nop2
  2576  02C6  087A               	movf	_unidades,w
  2577  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2578  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2579  02C9  0099               	movwf	25	;volatile
  2580  02CA  3041               	movlw	65
  2581  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2582  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2583  02CD  00A8               	movwf	??_Text+1
  2584  02CE  30ED               	movlw	237
  2585  02CF  00A7               	movwf	??_Text
  2586  02D0                     u1817:
  2587  02D0  0BA7               	decfsz	??_Text,f
  2588  02D1  2AD0               	goto	u1817
  2589  02D2  0BA8               	decfsz	??_Text+1,f
  2590  02D3  2AD0               	goto	u1817
  2591  02D4  2AD5               	nop2
  2592  02D5                     l135:
  2593  02D5  0008               	return
  2594  02D6                     __end_of_Text:
  2595                           
  2596                           	psect	text8
  2597  02D6                     __ptext8:	
  2598 ;; *************** function _division *****************
  2599 ;; Defined at:
  2600 ;;		line 227 in file "main_master.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  valor           1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  valor           1    9[COMMON] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      unsigned char 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         1       0       0       0       0
  2616 ;;      Temps:          0       3       0       0       0
  2617 ;;      Totals:         1       3       0       0       0
  2618 ;;Total ram usage:        4 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    2
  2621 ;; This function calls:
  2622 ;;		___awdiv
  2623 ;;		___awmod
  2624 ;; This function is called by:
  2625 ;;		_Text
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _division
  2631  02D6                     _division:
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2635                           ;division@valor stored from wreg
  2636  02D6  00F9               	movwf	division@valor
  2637  02D7                     l2026:
  2638  02D7  3064               	movlw	100
  2639  02D8  00F2               	movwf	___awdiv@divisor
  2640  02D9  3000               	movlw	0
  2641  02DA  00F3               	movwf	___awdiv@divisor+1
  2642  02DB  0879               	movf	division@valor,w
  2643  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2644  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2645  02DE  00A4               	movwf	??_division
  2646  02DF  01A5               	clrf	??_division+1
  2647  02E0  0824               	movf	??_division,w
  2648  02E1  00F4               	movwf	___awdiv@dividend
  2649  02E2  0825               	movf	??_division+1,w
  2650  02E3  00F5               	movwf	___awdiv@dividend+1
  2651  02E4  120A  118A  2341  120A  118A  	fcall	___awdiv
  2652  02E9  0872               	movf	?___awdiv,w
  2653  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2654  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2655  02EC  00A6               	movwf	??_division+2
  2656  02ED  0826               	movf	??_division+2,w
  2657  02EE  00E5               	movwf	_centenas
  2658  02EF  3064               	movlw	100
  2659  02F0  00F2               	movwf	___awmod@divisor
  2660  02F1  3000               	movlw	0
  2661  02F2  00F3               	movwf	___awmod@divisor+1
  2662  02F3  0879               	movf	division@valor,w
  2663  02F4  00A4               	movwf	??_division
  2664  02F5  01A5               	clrf	??_division+1
  2665  02F6  0824               	movf	??_division,w
  2666  02F7  00F4               	movwf	___awmod@dividend
  2667  02F8  0825               	movf	??_division+1,w
  2668  02F9  00F5               	movwf	___awmod@dividend+1
  2669  02FA  120A  118A  246F  120A  118A  	fcall	___awmod
  2670  02FF  0872               	movf	?___awmod,w
  2671  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0302  00A6               	movwf	??_division+2
  2674  0303  0826               	movf	??_division+2,w
  2675  0304  00E4               	movwf	_residuo
  2676  0305  300A               	movlw	10
  2677  0306  00F2               	movwf	___awdiv@divisor
  2678  0307  3000               	movlw	0
  2679  0308  00F3               	movwf	___awdiv@divisor+1
  2680  0309  0864               	movf	_residuo,w
  2681  030A  00A4               	movwf	??_division
  2682  030B  01A5               	clrf	??_division+1
  2683  030C  0824               	movf	??_division,w
  2684  030D  00F4               	movwf	___awdiv@dividend
  2685  030E  0825               	movf	??_division+1,w
  2686  030F  00F5               	movwf	___awdiv@dividend+1
  2687  0310  120A  118A  2341  120A  118A  	fcall	___awdiv
  2688  0315  0872               	movf	?___awdiv,w
  2689  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0318  00A6               	movwf	??_division+2
  2692  0319  0826               	movf	??_division+2,w
  2693  031A  00FB               	movwf	_decenas
  2694  031B  300A               	movlw	10
  2695  031C  00F2               	movwf	___awmod@divisor
  2696  031D  3000               	movlw	0
  2697  031E  00F3               	movwf	___awmod@divisor+1
  2698  031F  0864               	movf	_residuo,w
  2699  0320  00A4               	movwf	??_division
  2700  0321  01A5               	clrf	??_division+1
  2701  0322  0824               	movf	??_division,w
  2702  0323  00F4               	movwf	___awmod@dividend
  2703  0324  0825               	movf	??_division+1,w
  2704  0325  00F5               	movwf	___awmod@dividend+1
  2705  0326  120A  118A  246F  120A  118A  	fcall	___awmod
  2706  032B  0872               	movf	?___awmod,w
  2707  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2708  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2709  032E  00A6               	movwf	??_division+2
  2710  032F  0826               	movf	??_division+2,w
  2711  0330  00FA               	movwf	_unidades
  2712  0331                     l2028:
  2713  0331  0865               	movf	_centenas,w
  2714  0332  3E30               	addlw	48
  2715  0333  00A4               	movwf	??_division
  2716  0334  0824               	movf	??_division,w
  2717  0335  00E5               	movwf	_centenas
  2718  0336                     l2030:
  2719  0336  087B               	movf	_decenas,w
  2720  0337  3E30               	addlw	48
  2721  0338  00A4               	movwf	??_division
  2722  0339  0824               	movf	??_division,w
  2723  033A  00FB               	movwf	_decenas
  2724  033B                     l2032:
  2725  033B  087A               	movf	_unidades,w
  2726  033C  3E30               	addlw	48
  2727  033D  00A4               	movwf	??_division
  2728  033E  0824               	movf	??_division,w
  2729  033F  00FA               	movwf	_unidades
  2730  0340                     l138:
  2731  0340  0008               	return
  2732  0341                     __end_of_division:
  2733                           
  2734                           	psect	text9
  2735  046F                     __ptext9:	
  2736 ;; *************** function ___awmod *****************
  2737 ;; Defined at:
  2738 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  divisor         2    2[COMMON] int 
  2741 ;;  dividend        2    4[COMMON] int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  sign            1    8[COMMON] unsigned char 
  2744 ;;  counter         1    7[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    2[COMMON] int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         4       0       0       0       0
  2755 ;;      Locals:         2       0       0       0       0
  2756 ;;      Temps:          1       0       0       0       0
  2757 ;;      Totals:         7       0       0       0       0
  2758 ;;Total ram usage:        7 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_division
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___awmod
  2770  046F                     ___awmod:
  2771  046F                     l1498:	
  2772                           ;incstack = 0
  2773                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2774                           
  2775  046F  01F8               	clrf	___awmod@sign
  2776  0470                     l1500:
  2777  0470  1FF5               	btfss	___awmod@dividend+1,7
  2778  0471  2C73               	goto	u891
  2779  0472  2C74               	goto	u890
  2780  0473                     u891:
  2781  0473  2C7B               	goto	l1506
  2782  0474                     u890:
  2783  0474                     l1502:
  2784  0474  09F4               	comf	___awmod@dividend,f
  2785  0475  09F5               	comf	___awmod@dividend+1,f
  2786  0476  0AF4               	incf	___awmod@dividend,f
  2787  0477  1903               	skipnz
  2788  0478  0AF5               	incf	___awmod@dividend+1,f
  2789  0479                     l1504:
  2790  0479  01F8               	clrf	___awmod@sign
  2791  047A  0AF8               	incf	___awmod@sign,f
  2792  047B                     l1506:
  2793  047B  1FF3               	btfss	___awmod@divisor+1,7
  2794  047C  2C7E               	goto	u901
  2795  047D  2C7F               	goto	u900
  2796  047E                     u901:
  2797  047E  2C84               	goto	l1510
  2798  047F                     u900:
  2799  047F                     l1508:
  2800  047F  09F2               	comf	___awmod@divisor,f
  2801  0480  09F3               	comf	___awmod@divisor+1,f
  2802  0481  0AF2               	incf	___awmod@divisor,f
  2803  0482  1903               	skipnz
  2804  0483  0AF3               	incf	___awmod@divisor+1,f
  2805  0484                     l1510:
  2806  0484  0872               	movf	___awmod@divisor,w
  2807  0485  0473               	iorwf	___awmod@divisor+1,w
  2808  0486  1903               	btfsc	3,2
  2809  0487  2C89               	goto	u911
  2810  0488  2C8A               	goto	u910
  2811  0489                     u911:
  2812  0489  2CB9               	goto	l1528
  2813  048A                     u910:
  2814  048A                     l1512:
  2815  048A  01F7               	clrf	___awmod@counter
  2816  048B  0AF7               	incf	___awmod@counter,f
  2817  048C  2C98               	goto	l1518
  2818  048D                     l1514:
  2819  048D  3001               	movlw	1
  2820  048E                     u925:
  2821  048E  1003               	clrc
  2822  048F  0DF2               	rlf	___awmod@divisor,f
  2823  0490  0DF3               	rlf	___awmod@divisor+1,f
  2824  0491  3EFF               	addlw	-1
  2825  0492  1D03               	skipz
  2826  0493  2C8E               	goto	u925
  2827  0494                     l1516:
  2828  0494  3001               	movlw	1
  2829  0495  00F6               	movwf	??___awmod
  2830  0496  0876               	movf	??___awmod,w
  2831  0497  07F7               	addwf	___awmod@counter,f
  2832  0498                     l1518:
  2833  0498  1FF3               	btfss	___awmod@divisor+1,7
  2834  0499  2C9B               	goto	u931
  2835  049A  2C9C               	goto	u930
  2836  049B                     u931:
  2837  049B  2C8D               	goto	l1514
  2838  049C                     u930:
  2839  049C                     l1520:
  2840  049C  0873               	movf	___awmod@divisor+1,w
  2841  049D  0275               	subwf	___awmod@dividend+1,w
  2842  049E  1D03               	skipz
  2843  049F  2CA2               	goto	u945
  2844  04A0  0872               	movf	___awmod@divisor,w
  2845  04A1  0274               	subwf	___awmod@dividend,w
  2846  04A2                     u945:
  2847  04A2  1C03               	skipc
  2848  04A3  2CA5               	goto	u941
  2849  04A4  2CA6               	goto	u940
  2850  04A5                     u941:
  2851  04A5  2CAC               	goto	l1524
  2852  04A6                     u940:
  2853  04A6                     l1522:
  2854  04A6  0872               	movf	___awmod@divisor,w
  2855  04A7  02F4               	subwf	___awmod@dividend,f
  2856  04A8  0873               	movf	___awmod@divisor+1,w
  2857  04A9  1C03               	skipc
  2858  04AA  03F5               	decf	___awmod@dividend+1,f
  2859  04AB  02F5               	subwf	___awmod@dividend+1,f
  2860  04AC                     l1524:
  2861  04AC  3001               	movlw	1
  2862  04AD                     u955:
  2863  04AD  1003               	clrc
  2864  04AE  0CF3               	rrf	___awmod@divisor+1,f
  2865  04AF  0CF2               	rrf	___awmod@divisor,f
  2866  04B0  3EFF               	addlw	-1
  2867  04B1  1D03               	skipz
  2868  04B2  2CAD               	goto	u955
  2869  04B3                     l1526:
  2870  04B3  3001               	movlw	1
  2871  04B4  02F7               	subwf	___awmod@counter,f
  2872  04B5  1D03               	btfss	3,2
  2873  04B6  2CB8               	goto	u961
  2874  04B7  2CB9               	goto	u960
  2875  04B8                     u961:
  2876  04B8  2C9C               	goto	l1520
  2877  04B9                     u960:
  2878  04B9                     l1528:
  2879  04B9  0878               	movf	___awmod@sign,w
  2880  04BA  1903               	btfsc	3,2
  2881  04BB  2CBD               	goto	u971
  2882  04BC  2CBE               	goto	u970
  2883  04BD                     u971:
  2884  04BD  2CC3               	goto	l1532
  2885  04BE                     u970:
  2886  04BE                     l1530:
  2887  04BE  09F4               	comf	___awmod@dividend,f
  2888  04BF  09F5               	comf	___awmod@dividend+1,f
  2889  04C0  0AF4               	incf	___awmod@dividend,f
  2890  04C1  1903               	skipnz
  2891  04C2  0AF5               	incf	___awmod@dividend+1,f
  2892  04C3                     l1532:
  2893  04C3  0875               	movf	___awmod@dividend+1,w
  2894  04C4  00F3               	movwf	?___awmod+1
  2895  04C5  0874               	movf	___awmod@dividend,w
  2896  04C6  00F2               	movwf	?___awmod
  2897  04C7                     l534:
  2898  04C7  0008               	return
  2899  04C8                     __end_of___awmod:
  2900                           
  2901                           	psect	text10
  2902  0341                     __ptext10:	
  2903 ;; *************** function ___awdiv *****************
  2904 ;; Defined at:
  2905 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  divisor         2    2[COMMON] int 
  2908 ;;  dividend        2    4[COMMON] int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  quotient        2    2[BANK0 ] int 
  2911 ;;  sign            1    1[BANK0 ] unsigned char 
  2912 ;;  counter         1    0[BANK0 ] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  2    2[COMMON] int 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         4       0       0       0       0
  2923 ;;      Locals:         0       4       0       0       0
  2924 ;;      Temps:          1       0       0       0       0
  2925 ;;      Totals:         5       4       0       0       0
  2926 ;;Total ram usage:        9 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_division
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function ___awdiv
  2938  0341                     ___awdiv:
  2939  0341                     l1970:	
  2940                           ;incstack = 0
  2941                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2942                           
  2943  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0343  01A1               	clrf	___awdiv@sign
  2946  0344                     l1972:
  2947  0344  1FF3               	btfss	___awdiv@divisor+1,7
  2948  0345  2B47               	goto	u1411
  2949  0346  2B48               	goto	u1410
  2950  0347                     u1411:
  2951  0347  2B4F               	goto	l1978
  2952  0348                     u1410:
  2953  0348                     l1974:
  2954  0348  09F2               	comf	___awdiv@divisor,f
  2955  0349  09F3               	comf	___awdiv@divisor+1,f
  2956  034A  0AF2               	incf	___awdiv@divisor,f
  2957  034B  1903               	skipnz
  2958  034C  0AF3               	incf	___awdiv@divisor+1,f
  2959  034D                     l1976:
  2960  034D  01A1               	clrf	___awdiv@sign
  2961  034E  0AA1               	incf	___awdiv@sign,f
  2962  034F                     l1978:
  2963  034F  1FF5               	btfss	___awdiv@dividend+1,7
  2964  0350  2B52               	goto	u1421
  2965  0351  2B53               	goto	u1420
  2966  0352                     u1421:
  2967  0352  2B5C               	goto	l1984
  2968  0353                     u1420:
  2969  0353                     l1980:
  2970  0353  09F4               	comf	___awdiv@dividend,f
  2971  0354  09F5               	comf	___awdiv@dividend+1,f
  2972  0355  0AF4               	incf	___awdiv@dividend,f
  2973  0356  1903               	skipnz
  2974  0357  0AF5               	incf	___awdiv@dividend+1,f
  2975  0358                     l1982:
  2976  0358  3001               	movlw	1
  2977  0359  00F6               	movwf	??___awdiv
  2978  035A  0876               	movf	??___awdiv,w
  2979  035B  06A1               	xorwf	___awdiv@sign,f
  2980  035C                     l1984:
  2981  035C  01A2               	clrf	___awdiv@quotient
  2982  035D  01A3               	clrf	___awdiv@quotient+1
  2983  035E                     l1986:
  2984  035E  0872               	movf	___awdiv@divisor,w
  2985  035F  0473               	iorwf	___awdiv@divisor+1,w
  2986  0360  1903               	btfsc	3,2
  2987  0361  2B63               	goto	u1431
  2988  0362  2B64               	goto	u1430
  2989  0363                     u1431:
  2990  0363  2B9B               	goto	l2006
  2991  0364                     u1430:
  2992  0364                     l1988:
  2993  0364  01A0               	clrf	___awdiv@counter
  2994  0365  0AA0               	incf	___awdiv@counter,f
  2995  0366  2B72               	goto	l1994
  2996  0367                     l1990:
  2997  0367  3001               	movlw	1
  2998  0368                     u1445:
  2999  0368  1003               	clrc
  3000  0369  0DF2               	rlf	___awdiv@divisor,f
  3001  036A  0DF3               	rlf	___awdiv@divisor+1,f
  3002  036B  3EFF               	addlw	-1
  3003  036C  1D03               	skipz
  3004  036D  2B68               	goto	u1445
  3005  036E                     l1992:
  3006  036E  3001               	movlw	1
  3007  036F  00F6               	movwf	??___awdiv
  3008  0370  0876               	movf	??___awdiv,w
  3009  0371  07A0               	addwf	___awdiv@counter,f
  3010  0372                     l1994:
  3011  0372  1FF3               	btfss	___awdiv@divisor+1,7
  3012  0373  2B75               	goto	u1451
  3013  0374  2B76               	goto	u1450
  3014  0375                     u1451:
  3015  0375  2B67               	goto	l1990
  3016  0376                     u1450:
  3017  0376                     l1996:
  3018  0376  3001               	movlw	1
  3019  0377                     u1465:
  3020  0377  1003               	clrc
  3021  0378  0DA2               	rlf	___awdiv@quotient,f
  3022  0379  0DA3               	rlf	___awdiv@quotient+1,f
  3023  037A  3EFF               	addlw	-1
  3024  037B  1D03               	skipz
  3025  037C  2B77               	goto	u1465
  3026  037D  0873               	movf	___awdiv@divisor+1,w
  3027  037E  0275               	subwf	___awdiv@dividend+1,w
  3028  037F  1D03               	skipz
  3029  0380  2B83               	goto	u1475
  3030  0381  0872               	movf	___awdiv@divisor,w
  3031  0382  0274               	subwf	___awdiv@dividend,w
  3032  0383                     u1475:
  3033  0383  1C03               	skipc
  3034  0384  2B86               	goto	u1471
  3035  0385  2B87               	goto	u1470
  3036  0386                     u1471:
  3037  0386  2B8E               	goto	l2002
  3038  0387                     u1470:
  3039  0387                     l1998:
  3040  0387  0872               	movf	___awdiv@divisor,w
  3041  0388  02F4               	subwf	___awdiv@dividend,f
  3042  0389  0873               	movf	___awdiv@divisor+1,w
  3043  038A  1C03               	skipc
  3044  038B  03F5               	decf	___awdiv@dividend+1,f
  3045  038C  02F5               	subwf	___awdiv@dividend+1,f
  3046  038D                     l2000:
  3047  038D  1422               	bsf	___awdiv@quotient,0
  3048  038E                     l2002:
  3049  038E  3001               	movlw	1
  3050  038F                     u1485:
  3051  038F  1003               	clrc
  3052  0390  0CF3               	rrf	___awdiv@divisor+1,f
  3053  0391  0CF2               	rrf	___awdiv@divisor,f
  3054  0392  3EFF               	addlw	-1
  3055  0393  1D03               	skipz
  3056  0394  2B8F               	goto	u1485
  3057  0395                     l2004:
  3058  0395  3001               	movlw	1
  3059  0396  02A0               	subwf	___awdiv@counter,f
  3060  0397  1D03               	btfss	3,2
  3061  0398  2B9A               	goto	u1491
  3062  0399  2B9B               	goto	u1490
  3063  039A                     u1491:
  3064  039A  2B76               	goto	l1996
  3065  039B                     u1490:
  3066  039B                     l2006:
  3067  039B  0821               	movf	___awdiv@sign,w
  3068  039C  1903               	btfsc	3,2
  3069  039D  2B9F               	goto	u1501
  3070  039E  2BA0               	goto	u1500
  3071  039F                     u1501:
  3072  039F  2BA5               	goto	l2010
  3073  03A0                     u1500:
  3074  03A0                     l2008:
  3075  03A0  09A2               	comf	___awdiv@quotient,f
  3076  03A1  09A3               	comf	___awdiv@quotient+1,f
  3077  03A2  0AA2               	incf	___awdiv@quotient,f
  3078  03A3  1903               	skipnz
  3079  03A4  0AA3               	incf	___awdiv@quotient+1,f
  3080  03A5                     l2010:
  3081  03A5  0823               	movf	___awdiv@quotient+1,w
  3082  03A6  00F3               	movwf	?___awdiv+1
  3083  03A7  0822               	movf	___awdiv@quotient,w
  3084  03A8  00F2               	movwf	?___awdiv
  3085  03A9                     l521:
  3086  03A9  0008               	return
  3087  03AA                     __end_of___awdiv:
  3088                           
  3089                           	psect	text11
  3090  056D                     __ptext11:	
  3091 ;; *************** function _Lcd_Write_String *****************
  3092 ;; Defined at:
  3093 ;;		line 98 in file "LCD.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  a               2    7[COMMON] PTR unsigned char 
  3096 ;;		 -> STR_5(4), STR_4(3), main@buffer2(20), main@buffer(20), 
  3097 ;;		 -> STR_1(18), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  i               2    3[BANK0 ] int 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         2       0       0       0       0
  3110 ;;      Locals:         0       2       0       0       0
  3111 ;;      Temps:          0       3       0       0       0
  3112 ;;      Totals:         2       5       0       0       0
  3113 ;;Total ram usage:        7 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		_Lcd_Write_Char
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _Lcd_Write_String
  3125  056D                     _Lcd_Write_String:
  3126  056D                     l2108:	
  3127                           ;incstack = 0
  3128                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3129                           
  3130                           
  3131                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3132  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3133  056E  1303               	bcf	3,6	;RP1=0, select bank0
  3134  056F  01A3               	clrf	Lcd_Write_String@i
  3135  0570  01A4               	clrf	Lcd_Write_String@i+1
  3136  0571  2D96               	goto	l2114
  3137  0572                     l2110:
  3138                           
  3139                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3140  0572  0823               	movf	Lcd_Write_String@i,w
  3141  0573  0777               	addwf	Lcd_Write_String@a,w
  3142  0574  00A1               	movwf	??_Lcd_Write_String+1
  3143  0575  0878               	movf	Lcd_Write_String@a+1,w
  3144  0576  00A0               	movwf	??_Lcd_Write_String
  3145  0577  1803               	skipnc
  3146  0578  0AA0               	incf	??_Lcd_Write_String,f
  3147  0579  1FA3               	btfss	Lcd_Write_String@i,7
  3148  057A  2D7C               	goto	u1580
  3149  057B  03A0               	decf	??_Lcd_Write_String,f
  3150  057C                     u1580:
  3151  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3152  057D  1303               	bcf	3,6	;RP1=0, select bank0
  3153  057E  0820               	movf	??_Lcd_Write_String,w
  3154  057F  00A2               	movwf	??_Lcd_Write_String+2
  3155  0580  0822               	movf	??_Lcd_Write_String+2,w
  3156  0581  00FF               	movwf	btemp+1
  3157  0582  0821               	movf	??_Lcd_Write_String+1,w
  3158  0583  0084               	movwf	4
  3159  0584  120A  118A  26A4  120A  118A  	fcall	stringtab
  3160  0589  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_Char
  3161  058E                     l2112:
  3162  058E  3001               	movlw	1
  3163  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0591  07A3               	addwf	Lcd_Write_String@i,f
  3166  0592  1803               	skipnc
  3167  0593  0AA4               	incf	Lcd_Write_String@i+1,f
  3168  0594  3000               	movlw	0
  3169  0595  07A4               	addwf	Lcd_Write_String@i+1,f
  3170  0596                     l2114:
  3171  0596  0823               	movf	Lcd_Write_String@i,w
  3172  0597  0777               	addwf	Lcd_Write_String@a,w
  3173  0598  00A1               	movwf	??_Lcd_Write_String+1
  3174  0599  0878               	movf	Lcd_Write_String@a+1,w
  3175  059A  00A0               	movwf	??_Lcd_Write_String
  3176  059B  1803               	skipnc
  3177  059C  0AA0               	incf	??_Lcd_Write_String,f
  3178  059D  1FA3               	btfss	Lcd_Write_String@i,7
  3179  059E  2DA0               	goto	u1590
  3180  059F  03A0               	decf	??_Lcd_Write_String,f
  3181  05A0                     u1590:
  3182  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3183  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3184  05A2  0820               	movf	??_Lcd_Write_String,w
  3185  05A3  00A2               	movwf	??_Lcd_Write_String+2
  3186  05A4  0822               	movf	??_Lcd_Write_String+2,w
  3187  05A5  00FF               	movwf	btemp+1
  3188  05A6  0821               	movf	??_Lcd_Write_String+1,w
  3189  05A7  0084               	movwf	4
  3190  05A8  120A  118A  26A4  120A  118A  	fcall	stringtab
  3191  05AD  3A00               	xorlw	0
  3192  05AE  1D03               	skipz
  3193  05AF  2DB1               	goto	u1601
  3194  05B0  2DB2               	goto	u1600
  3195  05B1                     u1601:
  3196  05B1  2D72               	goto	l2110
  3197  05B2                     u1600:
  3198  05B2                     l248:
  3199  05B2  0008               	return
  3200  05B3                     __end_of_Lcd_Write_String:
  3201                           
  3202                           	psect	text12
  3203  0633                     __ptext12:	
  3204 ;; *************** function _Lcd_Write_Char *****************
  3205 ;; Defined at:
  3206 ;;		line 83 in file "LCD.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  a               1    wreg     unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  a               1    6[COMMON] unsigned char 
  3211 ;;  y               1    5[COMMON] unsigned char 
  3212 ;;  temp            1    4[COMMON] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         3       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0
  3225 ;;      Totals:         4       0       0       0       0
  3226 ;;Total ram usage:        4 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    2
  3229 ;; This function calls:
  3230 ;;		_Lcd_Port
  3231 ;; This function is called by:
  3232 ;;		_Lcd_Write_String
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _Lcd_Write_Char
  3238  0633                     _Lcd_Write_Char:
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3242                           ;Lcd_Write_Char@a stored from wreg
  3243  0633  00F6               	movwf	Lcd_Write_Char@a
  3244  0634                     l1570:
  3245                           
  3246                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3247  0634  0876               	movf	Lcd_Write_Char@a,w
  3248  0635  390F               	andlw	15
  3249  0636  00F3               	movwf	??_Lcd_Write_Char
  3250  0637  0873               	movf	??_Lcd_Write_Char,w
  3251  0638  00F4               	movwf	Lcd_Write_Char@temp
  3252                           
  3253                           ;LCD.c: 86:     y = a & 0xF0;
  3254  0639  0876               	movf	Lcd_Write_Char@a,w
  3255  063A  39F0               	andlw	240
  3256  063B  00F3               	movwf	??_Lcd_Write_Char
  3257  063C  0873               	movf	??_Lcd_Write_Char,w
  3258  063D  00F5               	movwf	Lcd_Write_Char@y
  3259  063E                     l1572:
  3260                           
  3261                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3262  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3263  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0640  1508               	bsf	8,2	;volatile
  3265  0641                     l1574:
  3266                           
  3267                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3268  0641  0875               	movf	Lcd_Write_Char@y,w
  3269  0642  00F3               	movwf	??_Lcd_Write_Char
  3270  0643  3004               	movlw	4
  3271  0644                     u1015:
  3272  0644  1003               	clrc
  3273  0645  0CF3               	rrf	??_Lcd_Write_Char,f
  3274  0646  3EFF               	addlw	-1
  3275  0647  1D03               	skipz
  3276  0648  2E44               	goto	u1015
  3277  0649  0873               	movf	??_Lcd_Write_Char,w
  3278  064A  120A  118A  2709  120A  118A  	fcall	_Lcd_Port
  3279  064F                     l1576:
  3280                           
  3281                           ;LCD.c: 89:     RD3 = 1;
  3282  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3284  0651  1588               	bsf	8,3	;volatile
  3285  0652                     l1578:
  3286                           
  3287                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3288  0652  301A               	movlw	26
  3289  0653  00F3               	movwf	??_Lcd_Write_Char
  3290  0654                     u1827:
  3291  0654  0BF3               	decfsz	??_Lcd_Write_Char,f
  3292  0655  2E54               	goto	u1827
  3293  0656  0000               	nop
  3294  0657                     l1580:
  3295                           
  3296                           ;LCD.c: 91:     RD3 = 0;
  3297  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0659  1188               	bcf	8,3	;volatile
  3300  065A                     l1582:
  3301                           
  3302                           ;LCD.c: 92:     Lcd_Port(temp);
  3303  065A  0874               	movf	Lcd_Write_Char@temp,w
  3304  065B  120A  118A  2709  120A  118A  	fcall	_Lcd_Port
  3305  0660                     l1584:
  3306                           
  3307                           ;LCD.c: 93:     RD3 = 1;
  3308  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0662  1588               	bsf	8,3	;volatile
  3311  0663                     l1586:
  3312                           
  3313                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3314  0663  301A               	movlw	26
  3315  0664  00F3               	movwf	??_Lcd_Write_Char
  3316  0665                     u1837:
  3317  0665  0BF3               	decfsz	??_Lcd_Write_Char,f
  3318  0666  2E65               	goto	u1837
  3319  0667  0000               	nop
  3320  0668                     l1588:
  3321                           
  3322                           ;LCD.c: 95:     RD3 = 0;
  3323  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3325  066A  1188               	bcf	8,3	;volatile
  3326  066B                     l242:
  3327  066B  0008               	return
  3328  066C                     __end_of_Lcd_Write_Char:
  3329                           
  3330                           	psect	text13
  3331  04C8                     __ptext13:	
  3332 ;; *************** function _Lcd_Set_Cursor *****************
  3333 ;; Defined at:
  3334 ;;		line 48 in file "LCD.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  a               1    wreg     unsigned char 
  3337 ;;  b               1    6[COMMON] unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  a               1    0[BANK0 ] unsigned char 
  3340 ;;  temp            1    3[BANK0 ] unsigned char 
  3341 ;;  y               1    2[BANK0 ] unsigned char 
  3342 ;;  z               1    1[BANK0 ] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         1       0       0       0       0
  3353 ;;      Locals:         0       4       0       0       0
  3354 ;;      Temps:          2       0       0       0       0
  3355 ;;      Totals:         3       4       0       0       0
  3356 ;;Total ram usage:        7 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    3
  3359 ;; This function calls:
  3360 ;;		_Lcd_Cmd
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _Lcd_Set_Cursor
  3368  04C8                     _Lcd_Set_Cursor:
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3372                           ;Lcd_Set_Cursor@a stored from wreg
  3373  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3374  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3375  04CA  00A0               	movwf	Lcd_Set_Cursor@a
  3376  04CB                     l1702:
  3377                           
  3378                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3379  04CB  0320               	decf	Lcd_Set_Cursor@a,w
  3380  04CC  1D03               	btfss	3,2
  3381  04CD  2CCF               	goto	u1151
  3382  04CE  2CD0               	goto	u1150
  3383  04CF                     u1151:
  3384  04CF  2CF5               	goto	l1712
  3385  04D0                     u1150:
  3386  04D0                     l1704:
  3387                           
  3388                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3389  04D0  0876               	movf	Lcd_Set_Cursor@b,w
  3390  04D1  3E7F               	addlw	127
  3391  04D2  00F7               	movwf	??_Lcd_Set_Cursor
  3392  04D3  0877               	movf	??_Lcd_Set_Cursor,w
  3393  04D4  00A3               	movwf	Lcd_Set_Cursor@temp
  3394                           
  3395                           ;LCD.c: 52:         z = temp >> 4;
  3396  04D5  0823               	movf	Lcd_Set_Cursor@temp,w
  3397  04D6  00F7               	movwf	??_Lcd_Set_Cursor
  3398  04D7  3004               	movlw	4
  3399  04D8                     u1165:
  3400  04D8  1003               	clrc
  3401  04D9  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3402  04DA  3EFF               	addlw	-1
  3403  04DB  1D03               	skipz
  3404  04DC  2CD8               	goto	u1165
  3405  04DD  0877               	movf	??_Lcd_Set_Cursor,w
  3406  04DE  00F8               	movwf	??_Lcd_Set_Cursor+1
  3407  04DF  0878               	movf	??_Lcd_Set_Cursor+1,w
  3408  04E0  00A1               	movwf	Lcd_Set_Cursor@z
  3409  04E1                     l1706:
  3410                           
  3411                           ;LCD.c: 53:         y = temp & 0x0F;
  3412  04E1  0823               	movf	Lcd_Set_Cursor@temp,w
  3413  04E2  390F               	andlw	15
  3414  04E3  00F7               	movwf	??_Lcd_Set_Cursor
  3415  04E4  0877               	movf	??_Lcd_Set_Cursor,w
  3416  04E5  00A2               	movwf	Lcd_Set_Cursor@y
  3417  04E6                     l1708:
  3418                           
  3419                           ;LCD.c: 54:         Lcd_Cmd(z);
  3420  04E6  0821               	movf	Lcd_Set_Cursor@z,w
  3421  04E7  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3422  04EC                     l1710:
  3423                           
  3424                           ;LCD.c: 55:         Lcd_Cmd(y);
  3425  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3426  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3427  04EE  0822               	movf	Lcd_Set_Cursor@y,w
  3428  04EF  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3429                           
  3430                           ;LCD.c: 56:     } else if (a == 2) {
  3431  04F4  2D1F               	goto	l236
  3432  04F5                     l1712:
  3433  04F5  3002               	movlw	2
  3434  04F6  0620               	xorwf	Lcd_Set_Cursor@a,w
  3435  04F7  1D03               	btfss	3,2
  3436  04F8  2CFA               	goto	u1171
  3437  04F9  2CFB               	goto	u1170
  3438  04FA                     u1171:
  3439  04FA  2D1F               	goto	l236
  3440  04FB                     u1170:
  3441  04FB                     l1714:
  3442                           
  3443                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3444  04FB  0876               	movf	Lcd_Set_Cursor@b,w
  3445  04FC  3EBF               	addlw	191
  3446  04FD  00F7               	movwf	??_Lcd_Set_Cursor
  3447  04FE  0877               	movf	??_Lcd_Set_Cursor,w
  3448  04FF  00A3               	movwf	Lcd_Set_Cursor@temp
  3449                           
  3450                           ;LCD.c: 58:         z = temp >> 4;
  3451  0500  0823               	movf	Lcd_Set_Cursor@temp,w
  3452  0501  00F7               	movwf	??_Lcd_Set_Cursor
  3453  0502  3004               	movlw	4
  3454  0503                     u1185:
  3455  0503  1003               	clrc
  3456  0504  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3457  0505  3EFF               	addlw	-1
  3458  0506  1D03               	skipz
  3459  0507  2D03               	goto	u1185
  3460  0508  0877               	movf	??_Lcd_Set_Cursor,w
  3461  0509  00F8               	movwf	??_Lcd_Set_Cursor+1
  3462  050A  0878               	movf	??_Lcd_Set_Cursor+1,w
  3463  050B  00A1               	movwf	Lcd_Set_Cursor@z
  3464  050C                     l1716:
  3465                           
  3466                           ;LCD.c: 59:         y = temp & 0x0F;
  3467  050C  0823               	movf	Lcd_Set_Cursor@temp,w
  3468  050D  390F               	andlw	15
  3469  050E  00F7               	movwf	??_Lcd_Set_Cursor
  3470  050F  0877               	movf	??_Lcd_Set_Cursor,w
  3471  0510  00A2               	movwf	Lcd_Set_Cursor@y
  3472  0511                     l1718:
  3473                           
  3474                           ;LCD.c: 60:         Lcd_Cmd(z);
  3475  0511  0821               	movf	Lcd_Set_Cursor@z,w
  3476  0512  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3477  0517                     l1720:
  3478                           
  3479                           ;LCD.c: 61:         Lcd_Cmd(y);
  3480  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0519  0822               	movf	Lcd_Set_Cursor@y,w
  3483  051A  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3484  051F                     l236:
  3485  051F  0008               	return
  3486  0520                     __end_of_Lcd_Set_Cursor:
  3487                           
  3488                           	psect	text14
  3489  0412                     __ptext14:	
  3490 ;; *************** function _Lcd_Init *****************
  3491 ;; Defined at:
  3492 ;;		line 65 in file "LCD.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0
  3508 ;;      Temps:          2       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    3
  3513 ;; This function calls:
  3514 ;;		_Lcd_Cmd
  3515 ;;		_Lcd_Port
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _Lcd_Init
  3523  0412                     _Lcd_Init:
  3524  0412                     l1690:	
  3525                           ;incstack = 0
  3526                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3527                           
  3528                           
  3529                           ;LCD.c: 66:     Lcd_Port(0x00);
  3530  0412  3000               	movlw	0
  3531  0413  120A  118A  2709  120A  118A  	fcall	_Lcd_Port
  3532  0418                     l1692:
  3533                           
  3534                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3535  0418  3034               	movlw	52
  3536  0419  00F7               	movwf	??_Lcd_Init+1
  3537  041A  30F1               	movlw	241
  3538  041B  00F6               	movwf	??_Lcd_Init
  3539  041C                     u1847:
  3540  041C  0BF6               	decfsz	??_Lcd_Init,f
  3541  041D  2C1C               	goto	u1847
  3542  041E  0BF7               	decfsz	??_Lcd_Init+1,f
  3543  041F  2C1C               	goto	u1847
  3544  0420  2C21               	nop2
  3545  0421                     l1694:
  3546                           
  3547                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3548  0421  3003               	movlw	3
  3549  0422  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3550                           
  3551                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3552  0427  300D               	movlw	13
  3553  0428  00F7               	movwf	??_Lcd_Init+1
  3554  0429  30FB               	movlw	251
  3555  042A  00F6               	movwf	??_Lcd_Init
  3556  042B                     u1857:
  3557  042B  0BF6               	decfsz	??_Lcd_Init,f
  3558  042C  2C2B               	goto	u1857
  3559  042D  0BF7               	decfsz	??_Lcd_Init+1,f
  3560  042E  2C2B               	goto	u1857
  3561  042F  2C30               	nop2
  3562  0430                     l1696:
  3563                           
  3564                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3565  0430  3003               	movlw	3
  3566  0431  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3567  0436                     l1698:
  3568                           
  3569                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3570  0436  301D               	movlw	29
  3571  0437  00F7               	movwf	??_Lcd_Init+1
  3572  0438  3091               	movlw	145
  3573  0439  00F6               	movwf	??_Lcd_Init
  3574  043A                     u1867:
  3575  043A  0BF6               	decfsz	??_Lcd_Init,f
  3576  043B  2C3A               	goto	u1867
  3577  043C  0BF7               	decfsz	??_Lcd_Init+1,f
  3578  043D  2C3A               	goto	u1867
  3579                           
  3580                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3581  043E  3003               	movlw	3
  3582  043F  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3583                           
  3584                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3585  0444  3002               	movlw	2
  3586  0445  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3587                           
  3588                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3589  044A  3002               	movlw	2
  3590  044B  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3591                           
  3592                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3593  0450  3008               	movlw	8
  3594  0451  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3595                           
  3596                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3597  0456  3000               	movlw	0
  3598  0457  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3599                           
  3600                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3601  045C  300C               	movlw	12
  3602  045D  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3603                           
  3604                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3605  0462  3000               	movlw	0
  3606  0463  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3607                           
  3608                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3609  0468  3006               	movlw	6
  3610  0469  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3611  046E                     l239:
  3612  046E  0008               	return
  3613  046F                     __end_of_Lcd_Init:
  3614                           
  3615                           	psect	text15
  3616  0761                     __ptext15:	
  3617 ;; *************** function _Lcd_Clear *****************
  3618 ;; Defined at:
  3619 ;;		line 43 in file "LCD.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    3
  3640 ;; This function calls:
  3641 ;;		_Lcd_Cmd
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           
  3648                           ;psect for function _Lcd_Clear
  3649  0761                     _Lcd_Clear:
  3650  0761                     l1700:	
  3651                           ;incstack = 0
  3652                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3653                           
  3654                           
  3655                           ;LCD.c: 44:     Lcd_Cmd(0);
  3656  0761  3000               	movlw	0
  3657  0762  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3658                           
  3659                           ;LCD.c: 45:     Lcd_Cmd(1);
  3660  0767  3001               	movlw	1
  3661  0768  120A  118A  2747  120A  118A  	fcall	_Lcd_Cmd
  3662  076D                     l230:
  3663  076D  0008               	return
  3664  076E                     __end_of_Lcd_Clear:
  3665                           
  3666                           	psect	text16
  3667  0747                     __ptext16:	
  3668 ;; *************** function _Lcd_Cmd *****************
  3669 ;; Defined at:
  3670 ;;		line 35 in file "LCD.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  a               1    wreg     unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  a               1    5[COMMON] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3684 ;;      Params:         0       0       0       0       0
  3685 ;;      Locals:         1       0       0       0       0
  3686 ;;      Temps:          2       0       0       0       0
  3687 ;;      Totals:         3       0       0       0       0
  3688 ;;Total ram usage:        3 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    2
  3691 ;; This function calls:
  3692 ;;		_Lcd_Port
  3693 ;; This function is called by:
  3694 ;;		_Lcd_Clear
  3695 ;;		_Lcd_Set_Cursor
  3696 ;;		_Lcd_Init
  3697 ;;		_Lcd_Shift_Right
  3698 ;;		_Lcd_Shift_Left
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _Lcd_Cmd
  3704  0747                     _Lcd_Cmd:
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3708                           ;Lcd_Cmd@a stored from wreg
  3709  0747  00F5               	movwf	Lcd_Cmd@a
  3710  0748                     l1560:
  3711                           
  3712                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3713  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0749  1303               	bcf	3,6	;RP1=0, select bank0
  3715  074A  1108               	bcf	8,2	;volatile
  3716  074B                     l1562:
  3717                           
  3718                           ;LCD.c: 37:     Lcd_Port(a);
  3719  074B  0875               	movf	Lcd_Cmd@a,w
  3720  074C  120A  118A  2709  120A  118A  	fcall	_Lcd_Port
  3721  0751                     l1564:
  3722                           
  3723                           ;LCD.c: 38:     RD3 = 1;
  3724  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0752  1303               	bcf	3,6	;RP1=0, select bank0
  3726  0753  1588               	bsf	8,3	;volatile
  3727  0754                     l1566:
  3728                           
  3729                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3730  0754  300B               	movlw	11
  3731  0755  00F4               	movwf	??_Lcd_Cmd+1
  3732  0756  3062               	movlw	98
  3733  0757  00F3               	movwf	??_Lcd_Cmd
  3734  0758                     u1877:
  3735  0758  0BF3               	decfsz	??_Lcd_Cmd,f
  3736  0759  2F58               	goto	u1877
  3737  075A  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3738  075B  2F58               	goto	u1877
  3739  075C  0000               	nop
  3740  075D                     l1568:
  3741                           
  3742                           ;LCD.c: 40:     RD3 = 0;
  3743  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3744  075E  1303               	bcf	3,6	;RP1=0, select bank0
  3745  075F  1188               	bcf	8,3	;volatile
  3746  0760                     l227:
  3747  0760  0008               	return
  3748  0761                     __end_of_Lcd_Cmd:
  3749                           
  3750                           	psect	text17
  3751  0709                     __ptext17:	
  3752 ;; *************** function _Lcd_Port *****************
  3753 ;; Defined at:
  3754 ;;		line 13 in file "LCD.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  a               1    wreg     unsigned char 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  a               1    2[COMMON] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       0       0       0       0
  3769 ;;      Locals:         1       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         1       0       0       0       0
  3772 ;;Total ram usage:        1 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    1
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_Lcd_Cmd
  3779 ;;		_Lcd_Init
  3780 ;;		_Lcd_Write_Char
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _Lcd_Port
  3786  0709                     _Lcd_Port:
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _Lcd_Port: [wreg]
  3790                           ;Lcd_Port@a stored from wreg
  3791  0709  00F2               	movwf	Lcd_Port@a
  3792  070A                     l1420:
  3793                           
  3794                           ;LCD.c: 14:     if (a & 1)
  3795  070A  1C72               	btfss	Lcd_Port@a,0
  3796  070B  2F0D               	goto	u681
  3797  070C  2F0E               	goto	u680
  3798  070D                     u681:
  3799  070D  2F12               	goto	l216
  3800  070E                     u680:
  3801  070E                     l1422:
  3802                           
  3803                           ;LCD.c: 15:         RD4 = 1;
  3804  070E  1283               	bcf	3,5	;RP0=0, select bank0
  3805  070F  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0710  1608               	bsf	8,4	;volatile
  3807  0711  2F15               	goto	l217
  3808  0712                     l216:	
  3809                           ;LCD.c: 16:     else
  3810                           
  3811                           
  3812                           ;LCD.c: 17:         RD4 = 0;
  3813  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0714  1208               	bcf	8,4	;volatile
  3816  0715                     l217:
  3817                           
  3818                           ;LCD.c: 19:     if (a & 2)
  3819  0715  1CF2               	btfss	Lcd_Port@a,1
  3820  0716  2F18               	goto	u691
  3821  0717  2F19               	goto	u690
  3822  0718                     u691:
  3823  0718  2F1B               	goto	l218
  3824  0719                     u690:
  3825  0719                     l1424:
  3826                           
  3827                           ;LCD.c: 20:         RD5 = 1;
  3828  0719  1688               	bsf	8,5	;volatile
  3829  071A  2F1C               	goto	l219
  3830  071B                     l218:	
  3831                           ;LCD.c: 21:     else
  3832                           
  3833                           
  3834                           ;LCD.c: 22:         RD5 = 0;
  3835  071B  1288               	bcf	8,5	;volatile
  3836  071C                     l219:
  3837                           
  3838                           ;LCD.c: 24:     if (a & 4)
  3839  071C  1D72               	btfss	Lcd_Port@a,2
  3840  071D  2F1F               	goto	u701
  3841  071E  2F20               	goto	u700
  3842  071F                     u701:
  3843  071F  2F22               	goto	l220
  3844  0720                     u700:
  3845  0720                     l1426:
  3846                           
  3847                           ;LCD.c: 25:         RD6 = 1;
  3848  0720  1708               	bsf	8,6	;volatile
  3849  0721  2F23               	goto	l221
  3850  0722                     l220:	
  3851                           ;LCD.c: 26:     else
  3852                           
  3853                           
  3854                           ;LCD.c: 27:         RD6 = 0;
  3855  0722  1308               	bcf	8,6	;volatile
  3856  0723                     l221:
  3857                           
  3858                           ;LCD.c: 29:     if (a & 8)
  3859  0723  1DF2               	btfss	Lcd_Port@a,3
  3860  0724  2F26               	goto	u711
  3861  0725  2F27               	goto	u710
  3862  0726                     u711:
  3863  0726  2F29               	goto	l222
  3864  0727                     u710:
  3865  0727                     l1428:
  3866                           
  3867                           ;LCD.c: 30:         RD7 = 1;
  3868  0727  1788               	bsf	8,7	;volatile
  3869  0728  2F2A               	goto	l224
  3870  0729                     l222:	
  3871                           ;LCD.c: 31:     else
  3872                           
  3873                           
  3874                           ;LCD.c: 32:         RD7 = 0;
  3875  0729  1388               	bcf	8,7	;volatile
  3876  072A                     l224:
  3877  072A  0008               	return
  3878  072B                     __end_of_Lcd_Port:
  3879                           
  3880                           	psect	text18
  3881  077B                     __ptext18:	
  3882 ;; *************** function _I2C_Master_Write *****************
  3883 ;; Defined at:
  3884 ;;		line 65 in file "I2C.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  d               2    2[COMMON] unsigned int 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0, pclath, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         2       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0
  3901 ;;      Totals:         2       0       0       0       0
  3902 ;;Total ram usage:        2 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    2
  3905 ;; This function calls:
  3906 ;;		_I2C_Master_Wait
  3907 ;; This function is called by:
  3908 ;;		_main
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           
  3913                           ;psect for function _I2C_Master_Write
  3914  077B                     _I2C_Master_Write:
  3915  077B                     l1796:	
  3916                           ;incstack = 0
  3917                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3918                           
  3919                           
  3920                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3921  077B  120A  118A  276E  120A  118A  	fcall	_I2C_Master_Wait
  3922  0780                     l1798:
  3923                           
  3924                           ;I2C.c: 68:     SSPBUF = d;
  3925  0780  0872               	movf	I2C_Master_Write@d,w
  3926  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0783  0093               	movwf	19	;volatile
  3929  0784                     l191:
  3930  0784  0008               	return
  3931  0785                     __end_of_I2C_Master_Write:
  3932                           
  3933                           	psect	text19
  3934  0785                     __ptext19:	
  3935 ;; *************** function _I2C_Master_Stop *****************
  3936 ;; Defined at:
  3937 ;;		line 55 in file "I2C.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, pclath, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3951 ;;      Params:         0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    2
  3958 ;; This function calls:
  3959 ;;		_I2C_Master_Wait
  3960 ;; This function is called by:
  3961 ;;		_main
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           
  3966                           ;psect for function _I2C_Master_Stop
  3967  0785                     _I2C_Master_Stop:
  3968  0785                     l1816:	
  3969                           ;incstack = 0
  3970                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3971                           
  3972                           
  3973                           ;I2C.c: 57:     I2C_Master_Wait();
  3974  0785  120A  118A  276E  120A  118A  	fcall	_I2C_Master_Wait
  3975  078A                     l1818:
  3976                           
  3977                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3978  078A  1683               	bsf	3,5	;RP0=1, select bank1
  3979  078B  1303               	bcf	3,6	;RP1=0, select bank1
  3980  078C  1511               	bsf	17,2	;volatile
  3981  078D                     l188:
  3982  078D  0008               	return
  3983  078E                     __end_of_I2C_Master_Stop:
  3984                           
  3985                           	psect	text20
  3986  078E                     __ptext20:	
  3987 ;; *************** function _I2C_Master_Start *****************
  3988 ;; Defined at:
  3989 ;;		line 39 in file "I2C.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    2
  4010 ;; This function calls:
  4011 ;;		_I2C_Master_Wait
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _I2C_Master_Start
  4019  078E                     _I2C_Master_Start:
  4020  078E                     l1792:	
  4021                           ;incstack = 0
  4022                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4023                           
  4024                           
  4025                           ;I2C.c: 41:     I2C_Master_Wait();
  4026  078E  120A  118A  276E  120A  118A  	fcall	_I2C_Master_Wait
  4027  0793                     l1794:
  4028                           
  4029                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4030  0793  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0794  1303               	bcf	3,6	;RP1=0, select bank1
  4032  0795  1411               	bsf	17,0	;volatile
  4033  0796                     l182:
  4034  0796  0008               	return
  4035  0797                     __end_of_I2C_Master_Start:
  4036                           
  4037                           	psect	text21
  4038  06DB                     __ptext21:	
  4039 ;; *************** function _I2C_Master_Read *****************
  4040 ;; Defined at:
  4041 ;;		line 74 in file "I2C.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  a               2    2[COMMON] unsigned short 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  temp            2    6[COMMON] unsigned short 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    2[COMMON] unsigned short 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4055 ;;      Params:         2       0       0       0       0
  4056 ;;      Locals:         2       0       0       0       0
  4057 ;;      Temps:          2       0       0       0       0
  4058 ;;      Totals:         6       0       0       0       0
  4059 ;;Total ram usage:        6 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    2
  4062 ;; This function calls:
  4063 ;;		_I2C_Master_Wait
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _I2C_Master_Read
  4071  06DB                     _I2C_Master_Read:
  4072  06DB                     l1800:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4075                           
  4076                           
  4077                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4078  06DB  120A  118A  276E  120A  118A  	fcall	_I2C_Master_Wait
  4079  06E0                     l1802:
  4080                           
  4081                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4082  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  4083  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  4084  06E2  1591               	bsf	17,3	;volatile
  4085                           
  4086                           ;I2C.c: 79:     I2C_Master_Wait();
  4087  06E3  120A  118A  276E  120A  118A  	fcall	_I2C_Master_Wait
  4088  06E8                     l1804:
  4089                           
  4090                           ;I2C.c: 80:     temp = SSPBUF;
  4091  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  4092  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  4093  06EA  0813               	movf	19,w	;volatile
  4094  06EB  00F4               	movwf	??_I2C_Master_Read
  4095  06EC  01F5               	clrf	??_I2C_Master_Read+1
  4096  06ED  0874               	movf	??_I2C_Master_Read,w
  4097  06EE  00F6               	movwf	I2C_Master_Read@temp
  4098  06EF  0875               	movf	??_I2C_Master_Read+1,w
  4099  06F0  00F7               	movwf	I2C_Master_Read@temp+1
  4100  06F1                     l1806:
  4101                           
  4102                           ;I2C.c: 81:     I2C_Master_Wait();
  4103  06F1  120A  118A  276E  120A  118A  	fcall	_I2C_Master_Wait
  4104  06F6                     l1808:
  4105                           
  4106                           ;I2C.c: 82:     if(a == 1){
  4107  06F6  0372               	decf	I2C_Master_Read@a,w
  4108  06F7  0473               	iorwf	I2C_Master_Read@a+1,w
  4109  06F8  1D03               	btfss	3,2
  4110  06F9  2EFB               	goto	u1291
  4111  06FA  2EFC               	goto	u1290
  4112  06FB                     u1291:
  4113  06FB  2F00               	goto	l194
  4114  06FC                     u1290:
  4115  06FC                     l1810:
  4116                           
  4117                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4118  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  4119  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  4120  06FE  1291               	bcf	17,5	;volatile
  4121                           
  4122                           ;I2C.c: 84:     }else{
  4123  06FF  2F03               	goto	l195
  4124  0700                     l194:
  4125                           
  4126                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4127  0700  1683               	bsf	3,5	;RP0=1, select bank1
  4128  0701  1303               	bcf	3,6	;RP1=0, select bank1
  4129  0702  1691               	bsf	17,5	;volatile
  4130  0703                     l195:	
  4131                           ;I2C.c: 86:     }
  4132                           
  4133                           
  4134                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4135  0703  1611               	bsf	17,4	;volatile
  4136  0704                     l1812:
  4137                           
  4138                           ;I2C.c: 88:     return temp;
  4139  0704  0877               	movf	I2C_Master_Read@temp+1,w
  4140  0705  00F3               	movwf	?_I2C_Master_Read+1
  4141  0706  0876               	movf	I2C_Master_Read@temp,w
  4142  0707  00F2               	movwf	?_I2C_Master_Read
  4143  0708                     l196:
  4144  0708  0008               	return
  4145  0709                     __end_of_I2C_Master_Read:
  4146                           
  4147                           	psect	text22
  4148  076E                     __ptext22:	
  4149 ;; *************** function _I2C_Master_Wait *****************
  4150 ;; Defined at:
  4151 ;;		line 32 in file "I2C.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0
  4168 ;;      Totals:         0       0       0       0       0
  4169 ;;Total ram usage:        0 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_I2C_Master_Start
  4176 ;;		_I2C_Master_Stop
  4177 ;;		_I2C_Master_Write
  4178 ;;		_I2C_Master_Read
  4179 ;;		_I2C_Master_RepeatedStart
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function _I2C_Master_Wait
  4185  076E                     _I2C_Master_Wait:
  4186  076E                     l1556:	
  4187                           ;incstack = 0
  4188                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4189                           
  4190  076E                     l176:	
  4191                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4192                           
  4193  076E  1683               	bsf	3,5	;RP0=1, select bank1
  4194  076F  1303               	bcf	3,6	;RP1=0, select bank1
  4195  0770  1914               	btfsc	20,2	;volatile
  4196  0771  2F73               	goto	u991
  4197  0772  2F74               	goto	u990
  4198  0773                     u991:
  4199  0773  2F6E               	goto	l176
  4200  0774                     u990:
  4201  0774                     l1558:
  4202  0774  0811               	movf	17,w	;volatile
  4203  0775  391F               	andlw	31
  4204  0776  1D03               	btfss	3,2
  4205  0777  2F79               	goto	u1001
  4206  0778  2F7A               	goto	u1000
  4207  0779                     u1001:
  4208  0779  2F6E               	goto	l176
  4209  077A                     u1000:
  4210  077A                     l179:
  4211  077A  0008               	return
  4212  077B                     __end_of_I2C_Master_Wait:
  4213                           
  4214                           	psect	text23
  4215  072B                     __ptext23:	
  4216 ;; *************** function _isr *****************
  4217 ;; Defined at:
  4218 ;;		line 55 in file "main_master.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		status,2
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0
  4234 ;;      Temps:          2       0       0       0       0
  4235 ;;      Totals:         2       0       0       0       0
  4236 ;;Total ram usage:        2 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		Interrupt level 1
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           
  4246                           ;psect for function _isr
  4247  072B                     _isr:
  4248  072B                     i1l1842:
  4249                           
  4250                           ;main_master.c: 57:         Lcd_Set_Cursor(1,1);
  4251  072B  1C0B               	btfss	11,0	;volatile
  4252  072C  2F2E               	goto	u130_21
  4253  072D  2F2F               	goto	u130_20
  4254  072E                     u130_21:
  4255  072E  2F40               	goto	i1l119
  4256  072F                     u130_20:
  4257  072F                     i1l1844:
  4258                           
  4259                           ;main_master.c: 58:         Lcd_Write_String("CONT: STAT: TEMP:");;main_master.c: 59:   
      +                                sprintf(buffer, "%d ", val);
  4260  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4261  0730  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0731  1806               	btfsc	6,0	;volatile
  4263  0732  2F34               	goto	u131_21
  4264  0733  2F35               	goto	u131_20
  4265  0734                     u131_21:
  4266  0734  2F39               	goto	i1l116
  4267  0735                     u131_20:
  4268  0735                     i1l1846:
  4269                           
  4270                           ;main_master.c: 60:         sprintf(buffer2, "%d ", val2);;main_master.c: 61:         Lc
      +                          d_Set_Cursor(2,2);
  4271  0735  1408               	bsf	8,0	;volatile
  4272                           
  4273                           ;main_master.c: 62:         Lcd_Write_String(buffer);
  4274  0736  01E8               	clrf	_stat
  4275  0737  0AE8               	incf	_stat,f
  4276                           
  4277                           ;main_master.c: 63:         Lcd_Set_Cursor(2,14);
  4278  0738  2F3F               	goto	i1l1852
  4279  0739                     i1l116:	
  4280                           ;main_master.c: 64:         Lcd_Write_String(buffer2);
  4281                           
  4282  0739  1C06               	btfss	6,0	;volatile
  4283  073A  2F3C               	goto	u132_21
  4284  073B  2F3D               	goto	u132_20
  4285  073C                     u132_21:
  4286  073C  2F3F               	goto	i1l1852
  4287  073D                     u132_20:
  4288  073D                     i1l1848:
  4289                           
  4290                           ;main_master.c: 65: ;main_master.c: 66:         if (val1==1){
  4291  073D  1008               	bcf	8,0	;volatile
  4292  073E                     i1l1850:
  4293                           
  4294                           ;main_master.c: 67:             Lcd_Set_Cursor(2,8);
  4295  073E  01E8               	clrf	_stat
  4296  073F                     i1l1852:
  4297                           
  4298                           ;main_master.c: 69:         }
  4299  073F  100B               	bcf	11,0	;volatile
  4300  0740                     i1l119:
  4301  0740  0871               	movf	??_isr+1,w
  4302  0741  008A               	movwf	10
  4303  0742  0E70               	swapf	??_isr,w
  4304  0743  0083               	movwf	3
  4305  0744  0EFE               	swapf	btemp,f
  4306  0745  0E7E               	swapf	btemp,w
  4307  0746  0009               	retfie
  4308  0747                     __end_of_isr:
  4309  007E                     btemp	set	126	;btemp
  4310  007E                     wtemp0	set	126
  4311                           
  4312                           	psect	intentry
  4313  0004                     __pintentry:	
  4314                           ;incstack = 0
  4315                           ; Regs used in _isr: [status,2]
  4316                           
  4317  0004                     interrupt_function:
  4318  007E                     saved_w	set	btemp
  4319  0004  00FE               	movwf	btemp
  4320  0005  0E03               	swapf	3,w
  4321  0006  00F0               	movwf	??_isr
  4322  0007  080A               	movf	10,w
  4323  0008  00F1               	movwf	??_isr+1
  4324  0009  120A  118A  2F2B   	ljmp	_isr
  4325                           
  4326                           	psect	config
  4327                           
  4328                           ;Config register CONFIG1 @ 0x2007
  4329                           ;	Oscillator Selection bits
  4330                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4331                           ;	Watchdog Timer Enable bit
  4332                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4333                           ;	Power-up Timer Enable bit
  4334                           ;	PWRTE = OFF, PWRT disabled
  4335                           ;	RE3/MCLR pin function select bit
  4336                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4337                           ;	Code Protection bit
  4338                           ;	CP = OFF, Program memory code protection is disabled
  4339                           ;	Data Code Protection bit
  4340                           ;	CPD = OFF, Data memory code protection is disabled
  4341                           ;	Brown Out Reset Selection bits
  4342                           ;	BOREN = OFF, BOR disabled
  4343                           ;	Internal External Switchover bit
  4344                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4345                           ;	Fail-Safe Clock Monitor Enabled bit
  4346                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4347                           ;	Low Voltage Programming Enable bit
  4348                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4349                           ;	In-Circuit Debugger Mode bit
  4350                           ;	DEBUG = 0x1, unprogrammed default
  4351  2007                     	org	8199
  4352  2007  20D4               	dw	8404
  4353                           
  4354                           ;Config register CONFIG2 @ 0x2008
  4355                           ;	Brown-out Reset Selection bit
  4356                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4357                           ;	Flash Program Memory Self Write Enable bits
  4358                           ;	WRT = OFF, Write protection off
  4359  2008                     	org	8200
  4360  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[4]), STR_4(CODE[3]), main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Text->_division
    _division->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Text->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    6166
                                             19 BANK0     46    46      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _Text
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1674
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Text                                                 2     2      0    1467
                                              7 BANK0      2     2      0
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     758
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     760
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Text
     _division
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      58      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 18:02:40 2021

                        pc 0002                         _R1 006B                         _R2 006A  
             ___awdiv@sign 0021                         fsr 0004                        l220 0722  
                      l132 056C                        l221 0723                        l222 0729  
                      l230 076D                        l135 02D5                        l224 072A  
                      l216 0712                        l217 0715                        l218 071B  
                      l242 066B                        l138 0340                        l219 071C  
                      l227 0760                        l236 051F                        l404 0411  
                      l173 06A3                        l182 0796                        l191 0784  
                      l239 046E                        l176 076E                        l248 05B2  
                      l521 03A9                        l194 0700                        l179 077A  
                      l195 0703                        l196 0708                        l188 078D  
                      l364 0236                        l534 04C7                        l640 05F6  
                      l650 0632                        _GIE 005F                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u700 0720                        u701 071F  
                      u710 0727                        u711 0726                        u900 047F  
                      u901 047E                        u910 048A                        u911 0489  
                      u680 070E                        u681 070D                        u690 0719  
                      u930 049C                        u691 0718                        u931 049B  
                      u940 04A6                        u941 04A5                        u925 048E  
                      u960 04B9                        u961 04B8                        u945 04A2  
                      u970 04BE                        u890 0474                        u971 04BD  
                      u955 04AD                        u891 0473                        u990 0774  
                      u991 0773                        _dec 0062                        _cen 0063  
                      _isr 072B                        fsr0 0004                        _uni 0061  
                      indf 0000               ___awmod@sign 0078                main@buffer2 004A  
                     l2000 038D                       l2010 03A5                       l2002 038E  
                     l2004 0395                       l2020 06A0                       l2100 055A  
                     l2110 0572                       l2006 039B                       l2030 0336  
                     l2022 06A1                       l2014 066C                       l2102 055B  
                     l2112 058E                       l2008 03A0                       l2032 033B  
                     l2024 06A2                       l2016 0670                       l2104 055C  
                     l2040 0609                       l2120 015B                       l2200 0022  
                     l2114 0596                       l2026 02D7                       l2018 0673  
                     l2106 055D                       l2050 0628                       l2042 060D  
                     l2034 05F7                       l2130 0185                       l2122 0162  
                     l2210 003E                       l2202 002C                       l1420 070A  
                     l2108 056D                       l1500 0470                       l2028 0331  
                     l2060 052A                       l2044 0611                       l2036 05FF  
                     l2052 062E                       l2140 019E                       l2132 018D  
                     l2124 0167                       l2116 0150                       l2220 006B  
                     l2212 0042                       l2204 0032                       l1422 070E  
                     l1510 0484                       l1502 0474                       l2070 053D  
                     l2062 052D                       l2046 061B                       l2038 0602  
                     l2150 01BC                       l2134 0191                       l2118 0155  
                     l2230 00A8                       l2222 007E                       l2214 0047  
                     l2206 0036                       l1424 0719                       l1520 049C  
                     l1512 048A                       l1504 0479                       l2080 0548  
                     l2072 053E                       l2064 0537                       l2056 0520  
                     l1600 05C9                       l2048 0621                       l2160 01DC  
                     l2152 01C6                       l2136 0195                       l2128 0168  
                     l2240 00D6                       l2232 00AF                       l2224 008A  
                     l2216 004F                       l2208 003A                       l1426 0720  
                     l1530 04BE                       l1522 04A6                       l1514 048D  
                     l1506 047B                       l2090 0551                       l2082 054B  
                     l2074 053F                       l2066 053A                       l2058 0526  
                     l1610 05EC                       l1602 05CD                       l2162 020C  
                     l2154 01CC                       l2146 01A0                       l2138 0199  
                     l2170 0232                       l2250 0105                       l2242 00E4  
                     l2234 00B9                       l2226 0093                       l2218 0058  
                     l1428 0727                       l1700 0761                       l1532 04C3  
                     l1524 04AC                       l1516 0494                       l1508 047F  
                     l2180 0242                       l2092 0554                       l2084 054C  
                     l2076 0542                       l2068 053C                       l1604 05DE  
                     l1612 05F2                       l2164 0213                       l2156 01D3  
                     l2260 0135                       l2252 0114                       l2244 00E9  
                     l2236 00C3                       l2228 009F                       l1710 04EC  
                     l1702 04CB                       l1526 04B3                       l1518 0498  
                     l2190 0268                       l2182 024A                       l2094 0555  
                     l2086 054D                       l2078 0546                       l1606 05E4  
                     l2166 0217                       l2158 01D7                       l2262 0144  
                     l2254 0119                       l2246 00F2                       l2238 00CD  
                     l1800 06DB                       l1560 0748                       l1720 0517  
                     l1704 04D0                       l1712 04F5                       l1528 04B9  
                     l2192 027B                       l2184 0255                       l2096 0556  
                     l2088 0550                       l1608 05E5                       l2168 0220  
                     l2256 0122                       l2248 0100                       l1810 06FC  
                     l1802 06E0                       l1562 074B                       l1714 04FB  
                     l1706 04E1                       l1570 0634                       l2194 0286  
                     l2186 0259                       l2178 0237                       l2098 0557  
                     l2258 0130                       l1556 076E                       l1812 0704  
                     l1804 06E8                       l1564 0751                       l1716 050C  
                     l1708 04E6                       l1580 0657                       l1572 063E  
                     l2196 028A                       l2188 0264                       l2284 017A  
                     l1558 0774                       l1806 06F1                       l1566 0754  
                     l1718 0511                       l1582 065A                       l1574 0641  
                     l2198 0295                       l1590 05B3                       l1808 06F6  
                     l1816 0785                       l1568 075D                       l1584 0660  
                     l1576 064F                       l1592 05B5                       l1818 078A  
                     l1690 0412                       l1586 0663                       l1578 0652  
                     l1498 046F                       l1594 05BB                       l1692 0418  
                     l1588 0668                       l1596 05BE                       l1694 0421  
                     l1950 03BF                       l1598 05C5                       l1792 078E  
                     l1696 0430                       l1960 03F9                       l1952 03CC  
                     l1794 0793                       l1698 0436                       l1970 0341  
                     l1962 03FA                       l1954 03D0                       l1946 03AA  
                     l1796 077B                       l1980 0353                       l1972 0344  
                     l1964 0403                       l1956 03D9                       l1948 03BC  
                     l1798 0780                       l1990 0367                       l1982 0358  
                     l1974 0348                       l1958 03EB                       l1966 0409  
                     l1992 036E                       l1984 035C                       l1976 034D  
                     l1994 0372                       l1986 035E                       l1978 034F  
                     l1996 0376                       l1988 0364                       l1998 0387  
                     ?_isr 0070                       STR_1 06BE                       STR_2 06D0  
                     STR_3 06D0                       STR_4 06D8                       STR_5 06D4  
                     u1000 077A                       u1001 0779                       u1020 05BB  
                     u1021 05BA                       u1015 0644                       u1040 05CD  
                     u1041 05CC                       u1035 05BF                       u1060 05DE  
                     u1061 05DD                       u1150 04D0                       u1151 04CF  
                     u1055 05CE                       u1400 0409                       u1080 05F2  
                     u1401 0408                       u1081 05F1                       u1065 05DA  
                     u1170 04FB                       u1410 0348                       u1171 04FA  
                     u1411 0347                       u1075 05E6                       u1500 03A0  
                     u1420 0353                       u1340 03BC                       u1165 04D8  
                     u1501 039F                       u1421 0352                       u1341 03BB  
                     u1430 0364                       u1510 0683                       u1431 0363  
                     u1600 05B2                       u1360 03D0                       u1520 05FF  
                     u1185 0503                       u1601 05B1                       u1361 03CF  
                     u1521 05FE                       u1290 06FC                       u1450 0376  
                     u1610 015B                       u1291 06FB                       u1451 0375  
                     u1355 03C1                       u1515 067E                       u1611 015A  
                     u1380 03EB                       u1540 0611                       u1620 0195  
                     u1445 0368                       u1381 03EA                       u1541 0610  
                     u1621 0194                       u1470 0387                       u1550 061B  
                     u1630 01BB                       u1471 0386                       u1375 03D2  
                     u1551 061A                       u1535 0603                       u1631 01BA  
                     u1640 01C6                       u1465 0377                       u1385 03E7  
                     u1641 01C5                       u1490 039B                       u1570 062E  
                     u1650 01CC                       u1491 039A                       u1475 0383  
                     u1395 03FB                       u1571 062D                       u1555 0617  
                     u1651 01CB                       u1635 01B7                       u1707 010D  
                     u1580 057C                       u1660 0220                       u1485 038F  
                     u1565 0622                       u1661 021F                       u1717 013D  
                     u1590 05A0                       u1670 0232                       u1807 02C1  
                     u1727 023D                       u1671 0231                       u1680 00AF  
                     u1817 02D0                       u1737 0250                       u1681 00AE  
                     u1827 0654                       u1747 025F                       u1837 0665  
                     u1757 026E                       u1847 041C                       u1767 0281  
                     u1857 042B                       u1777 0290                       u1697 00DE  
                     u1867 043A                       u1787 02A3                       _PEIE 005E  
                     u1877 0758                       u1797 02B2                       _RBIF 0058  
                     _TXIF 0064                       _WPUB 0095                       _Text 0237  
        ?_Lcd_Write_String 0077                       _cont 0067                       _main 0022  
                     _temp 0069                       _stat 0068                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 0761  
                    ??_isr 0070           ?_I2C_Master_Init 0026           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_Text 0070  
                    ?_main 0070            __end_of___awdiv 03AA            __end_of___awmod 04C8  
                    _ANSEL 0188            __end_of___lldiv 0412            ___awdiv@divisor 0072  
          __end_of___lwdiv 05F7                      i1l116 0739                      i1l119 0740  
          __end_of___lwmod 0633            ___awdiv@counter 0020                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019            __end_of_dpowers 06BE  
                    _valor 0066                      _setup 0520                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0237  
         __end_of_Lcd_Init 046F           __end_of_Lcd_Port 072B            __initialization 000F  
             __end_of_Text 02D6               __end_of_main 014D                     ??_Text 0027  
                   ??_main 0033         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074  
         ___awdiv@dividend 0074                     ?_setup 0070                     _ANSELH 0189  
                   u130_20 072F                     u130_21 072E                     i1l1850 073E  
                   i1l1842 072B                     i1l1852 073F                     i1l1844 072F  
                   i1l1846 0735                     i1l1848 073D                     u131_20 0735  
                   u131_21 0734                     u132_20 073D                     u132_21 073C  
                ??_Lcd_Cmd 0073                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0039  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of_division 0341  
                ??___awdiv 0076                  ??___awmod 0076                  ??___lldiv 0020  
                ??___lwdiv 0076                  ??___lwmod 0024           ___awdiv@quotient 0022  
          ___awmod@divisor 0072            ___awmod@counter 0077                     saved_w 007E  
                ??_sprintf 0029            Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076  
          Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021    __end_of__initialization 001E  
        __end_of_Lcd_Clear 076E             __pcstackCOMMON 0070              __end_of_setup 056D  
            division@valor 0079             _Lcd_Set_Cursor 04C8             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007A  
               __pbssBANK0 0061                 __pmaintext 0022                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0520                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 06A4                  ?_division 0070             _Lcd_Write_Char 0633  
                  _Lcd_Cmd 0747                    ___awdiv 0341                    ___awmod 046F  
                  ___lldiv 03AA                    ___lwdiv 05B3                    ___lwmod 05F7  
                  _decenas 007B            ?_Lcd_Set_Cursor 0076                    __ptext1 014D  
                  __ptext2 05F7                    __ptext3 05B3                    __ptext4 0520  
                  __ptext5 066C                    __ptext6 03AA                    __ptext7 0237  
                  __ptext8 02D6                    __ptext9 046F                    _dpowers 06B4  
             __size_of_isr 001C           ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E                    _residuo 0064   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 014D                    main@val 0060  
   __end_of_Lcd_Write_Char 066C       end_of_initialization 001E                 ??_division 0024  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072  
          ___lldiv@counter 0025                  _RCSTAbits 0018           I2C_Master_Init@c 0026  
         I2C_Master_Read@a 0072                  Lcd_Port@a 0072                  _PORTBbits 0006  
                _PORTDbits 0008                  _TRISBbits 0086                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0023  
               main@buffer 0036                  _TXSTAbits 0098                  _Lcd_Clear 0761  
         _Lcd_Write_String 056D                _BAUDCTLbits 0187        start_initialization 000F  
              __end_of_isr 0747          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
        ??_I2C_Master_Init 002A          ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072  
        ??_I2C_Master_Stop 0072                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0076  
          Lcd_Write_Char@y 0075                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 002D  
        __size_of_division 006B                sprintf@prec 002E           _I2C_Master_Start 078E  
         _I2C_Master_Write 077B           ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0072                   ?___awmod 0072                   ?___lldiv 0072  
                 ?___lwdiv 0072                   ?___lwmod 0020                  __pstrings 06A4  
         ___lwdiv@quotient 0077                   ?_sprintf 0026             __size_of_setup 004D  
        interrupt_function 0004                   _IOCBbits 0096                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075                   _PIR1bits 000C                ??_Lcd_Clear 0076  
              __stringbase 06B3           ??_Lcd_Write_Char 0073                   _Lcd_Init 0412  
                 _Lcd_Port 0709        I2C_Master_Read@temp 0076   __end_of_Lcd_Write_String 05B3  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069           __size_of___awmod 0059  
         __size_of___lldiv 0068           __size_of___lwdiv 0044           __size_of___lwmod 003C  
       __end_of__stringtab 06B4                 sprintf@val 002F            _I2C_Master_Init 066C  
          _I2C_Master_Read 06DB            _I2C_Master_Wait 076E            _I2C_Master_Stop 0785  
          ___lwdiv@divisor 0072                   _centenas 0065            ___lwdiv@counter 0079  
                 __ptext10 0341                   __ptext11 056D                   __ptext20 078E  
                 __ptext12 0633                   __ptext21 06DB                   __ptext13 04C8  
                 __ptext22 076E                   __ptext14 0412                   __ptext23 072B  
                 __ptext15 0761                   __ptext16 0747                   __ptext17 0709  
                 __ptext18 077B                   __ptext19 0785                   _division 02D6  
         __size_of_sprintf 00EA              __size_of_Text 009F              __size_of_main 012B  
                 _unidades 007A                   main@val1 005F                   main@val2 005E  
 __end_of_I2C_Master_Start 0797   __end_of_I2C_Master_Write 0785                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0074                   intlevel1 0000                  sprintf@ap 002C  
                sprintf@sp 0031           ___lwmod@dividend 0022           ___lldiv@dividend 0076  
                stringcode 06AE                 _OSCCONbits 008F    __end_of_I2C_Master_Init 06A4  
  __end_of_I2C_Master_Read 0709    __end_of_I2C_Master_Wait 077B    __end_of_I2C_Master_Stop 078E  
       Lcd_Set_Cursor@temp 0023                   sprintf@c 0032                   sprintf@f 0026  
         ___lldiv@quotient 0021          I2C_Master_Write@d 0072            ___lwmod@divisor 0020  
          ___lwmod@counter 0025                   stringdir 06AE                   stringtab 06A4  
              _SSPCON2bits 0091  
