

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Sep 05 14:25:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308                           
   309                           	psect	idataBANK0
   310  06EE                     __pidataBANK0:
   311                           
   312                           ;initializer for _BackLight_State
   313  06EE  3408               	retlw	8
   314                           
   315                           	psect	strings
   316  059F                     __pstrings:
   317  059F                     stringtab:
   318  059F                     __stringtab:
   319                           
   320                           ;	String table - string pointers are 1 byte each
   321  059F  1BFF               	btfsc	btemp+1,7
   322  05A0  2DA9               	ljmp	stringcode
   323  05A1  1383               	bcf	3,7
   324  05A2  187F               	btfsc	btemp+1,0
   325  05A3  1783               	bsf	3,7
   326  05A4  0800               	movf	0,w
   327  05A5  0A84               	incf	4,f
   328  05A6  1903               	skipnz
   329  05A7  0AFF               	incf	btemp+1,f
   330  05A8  0008               	return
   331  05A9                     stringcode:
   332  05A9                     stringdir:
   333  05A9  3005               	movlw	high stringdir
   334  05AA  008A               	movwf	10
   335  05AB  0804               	movf	4,w
   336  05AC  0A84               	incf	4,f
   337  05AD  0782               	addwf	2,f
   338  05AE                     __stringbase:
   339  05AE  3400               	retlw	0
   340  05AF                     __end_of__stringtab:
   341  05AF                     _dpowers:
   342  05AF  3401               	retlw	1
   343  05B0  3400               	retlw	0
   344  05B1  340A               	retlw	10
   345  05B2  3400               	retlw	0
   346  05B3  3464               	retlw	100
   347  05B4  3400               	retlw	0
   348  05B5  34E8               	retlw	232
   349  05B6  3403               	retlw	3
   350  05B7  3410               	retlw	16
   351  05B8  3427               	retlw	39
   352  05B9                     __end_of_dpowers:
   353  05B9                     STR_1:
   354  05B9  3443               	retlw	67	;'C'
   355  05BA  344F               	retlw	79	;'O'
   356  05BB  344E               	retlw	78	;'N'
   357  05BC  3454               	retlw	84	;'T'
   358  05BD  343A               	retlw	58	;':'
   359  05BE  3420               	retlw	32	;' '
   360  05BF  3445               	retlw	69	;'E'
   361  05C0  344E               	retlw	78	;'N'
   362  05C1  3443               	retlw	67	;'C'
   363  05C2  343A               	retlw	58	;':'
   364  05C3  3420               	retlw	32	;' '
   365  05C4  3454               	retlw	84	;'T'
   366  05C5  3445               	retlw	69	;'E'
   367  05C6  344D               	retlw	77	;'M'
   368  05C7  3450               	retlw	80	;'P'
   369  05C8  343A               	retlw	58	;':'
   370  05C9  3400               	retlw	0
   371  05CA                     STR_4:
   372  05CA  344F               	retlw	79	;'O'
   373  05CB  344E               	retlw	78	;'N'
   374  05CC  3420               	retlw	32	;' '
   375  05CD  3420               	retlw	32	;' '
   376  05CE  3400               	retlw	0
   377  05CF                     STR_2:
   378  05CF  3425               	retlw	37	;'%'
   379  05D0  3464               	retlw	100	;'d'
   380  05D1  3420               	retlw	32	;' '
   381  05D2  3400               	retlw	0
   382  05D3                     STR_5:
   383  05D3  344F               	retlw	79	;'O'
   384  05D4  3446               	retlw	70	;'F'
   385  05D5  3446               	retlw	70	;'F'
   386  05D6  3400               	retlw	0
   387  05CF                     
   388                           	psect	nvBANK0
   389  006E                     __pnvBANK0:
   390  006E                     _i2c_add:
   391  006E                     	ds	1
   392  0013                     _SSPBUF	set	19
   393  0014                     _SSPCON	set	20
   394  0019                     _TXREG	set	25
   395  000C                     _PIR1bits	set	12
   396  0018                     _RCSTAbits	set	24
   397  0009                     _PORTE	set	9
   398  0008                     _PORTD	set	8
   399  0007                     _PORTC	set	7
   400  0006                     _PORTB	set	6
   401  0005                     _PORTA	set	5
   402  000B                     _INTCONbits	set	11
   403  0008                     _PORTDbits	set	8
   404  0006                     _PORTBbits	set	6
   405  0063                     _SSPIF	set	99
   406  0064                     _TXIF	set	100
   407  0058                     _RBIF	set	88
   408  0093                     _SSPADD	set	147
   409  0094                     _SSPSTAT	set	148
   410  0091                     _SSPCON2	set	145
   411  008C                     _PIE1bits	set	140
   412  009A                     _SPBRGH	set	154
   413  0099                     _SPBRG	set	153
   414  0098                     _TXSTAbits	set	152
   415  0096                     _IOCBbits	set	150
   416  0095                     _WPUB	set	149
   417  0081                     _OPTION_REGbits	set	129
   418  0085                     _TRISA	set	133
   419  0088                     _TRISD	set	136
   420  0087                     _TRISCbits	set	135
   421  0086                     _TRISBbits	set	134
   422  008F                     _OSCCONbits	set	143
   423  048B                     _RCEN	set	1163
   424  048E                     _ACKSTAT	set	1166
   425  048C                     _ACKEN	set	1164
   426  048D                     _ACKDT	set	1165
   427  048A                     _PEN	set	1162
   428  0489                     _RSEN	set	1161
   429  0488                     _SEN	set	1160
   430  043C                     _TRISC4	set	1084
   431  043B                     _TRISC3	set	1083
   432  0187                     _BAUDCTLbits	set	391
   433  0189                     _ANSELH	set	393
   434  0188                     _ANSEL	set	392
   435                           
   436                           	psect	cinit
   437  000F                     start_initialization:	
   438                           ; #config settings
   439                           
   440  000F                     __initialization:
   441                           
   442                           ; Initialize objects allocated to BANK0
   443  000F  120A  118A  26EE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   444  0014  00EF               	movwf	__pdataBANK0& (0+127)
   445                           
   446                           ; Clear objects allocated to BANK0
   447  0015  01E1               	clrf	__pbssBANK0& (0+127)
   448  0016  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   449  0017  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   450  0018  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   451  0019  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   452  001A  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   453  001B  01E7               	clrf	(__pbssBANK0+6)& (0+127)
   454  001C  01E8               	clrf	(__pbssBANK0+7)& (0+127)
   455  001D  01E9               	clrf	(__pbssBANK0+8)& (0+127)
   456  001E  01EA               	clrf	(__pbssBANK0+9)& (0+127)
   457  001F  01EB               	clrf	(__pbssBANK0+10)& (0+127)
   458  0020  01EC               	clrf	(__pbssBANK0+11)& (0+127)
   459  0021  01ED               	clrf	(__pbssBANK0+12)& (0+127)
   460                           
   461                           ; Clear objects allocated to COMMON
   462  0022  01FA               	clrf	__pbssCOMMON& (0+127)
   463  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   464  0024                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467  0024                     __end_of__initialization:
   468  0024  0183               	clrf	3
   469  0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	bssCOMMON
   472  007A                     __pbssCOMMON:
   473  007A                     _unidades:
   474  007A                     	ds	1
   475  007B                     _decenas:
   476  007B                     	ds	1
   477                           
   478                           	psect	bssBANK0
   479  0061                     __pbssBANK0:
   480  0061                     _RS:
   481  0061                     	ds	1
   482  0062                     _uni:
   483  0062                     	ds	1
   484  0063                     _dec:
   485  0063                     	ds	1
   486  0064                     _cen:
   487  0064                     	ds	1
   488  0065                     _residuo:
   489  0065                     	ds	1
   490  0066                     _centenas:
   491  0066                     	ds	1
   492  0067                     _valor:
   493  0067                     	ds	1
   494  0068                     _pr:
   495  0068                     	ds	1
   496  0069                     _cont:
   497  0069                     	ds	1
   498  006A                     _stat:
   499  006A                     	ds	1
   500  006B                     _temp:
   501  006B                     	ds	1
   502  006C                     _R2:
   503  006C                     	ds	1
   504  006D                     _R1:
   505  006D                     	ds	1
   506                           
   507                           	psect	dataBANK0
   508  006F                     __pdataBANK0:
   509  006F                     _BackLight_State:
   510  006F                     	ds	1
   511                           
   512                           	psect	cstackCOMMON
   513  0070                     __pcstackCOMMON:
   514  0070                     ?_setup:
   515  0070                     ?_LCD_Init:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_I2C_Master_Start:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_I2C_Master_Write:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_I2C_Read_Byte:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_I2C_Master_Stop:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_Text:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_division:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_IO_Expander_Write:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_LCD_CMD:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_isr:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ??_isr:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Master_Wait:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_LCD_Write_4Bit:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_LCD_Write_Char:	
   558                           ; 1 bytes @ 0x0
   559                           
   560                           
   561                           ; 1 bytes @ 0x0
   562  0070                     	ds	2
   563  0072                     ??_I2C_Master_Start:
   564  0072                     ??_I2C_Master_Write:	
   565                           ; 1 bytes @ 0x2
   566                           
   567  0072                     ??_I2C_Read_Byte:	
   568                           ; 1 bytes @ 0x2
   569                           
   570  0072                     ??_I2C_Master_Stop:	
   571                           ; 1 bytes @ 0x2
   572                           
   573  0072                     ?_I2C_Master_Init:	
   574                           ; 1 bytes @ 0x2
   575                           
   576  0072                     ??_I2C_Master_Wait:	
   577                           ; 1 bytes @ 0x2
   578                           
   579  0072                     ?___awdiv:	
   580                           ; 1 bytes @ 0x2
   581                           
   582  0072                     ?___awmod:	
   583                           ; 2 bytes @ 0x2
   584                           
   585  0072                     ?___lwdiv:	
   586                           ; 2 bytes @ 0x2
   587                           
   588  0072                     I2C_Master_Write@data:	
   589                           ; 2 bytes @ 0x2
   590                           
   591  0072                     ___awdiv@divisor:	
   592                           ; 1 bytes @ 0x2
   593                           
   594  0072                     ___awmod@divisor:	
   595                           ; 2 bytes @ 0x2
   596                           
   597  0072                     ___lwdiv@divisor:	
   598                           ; 2 bytes @ 0x2
   599                           
   600                           
   601                           ; 2 bytes @ 0x2
   602  0072                     	ds	1
   603  0073                     ??_IO_Expander_Write:
   604  0073                     IO_Expander_Write@Data:	
   605                           ; 1 bytes @ 0x3
   606                           
   607                           
   608                           ; 1 bytes @ 0x3
   609  0073                     	ds	1
   610  0074                     ??_LCD_Write_4Bit:
   611  0074                     ___awdiv@dividend:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     ___awmod@dividend:	
   615                           ; 2 bytes @ 0x4
   616                           
   617  0074                     ___lwdiv@dividend:	
   618                           ; 2 bytes @ 0x4
   619                           
   620                           
   621                           ; 2 bytes @ 0x4
   622  0074                     	ds	1
   623  0075                     LCD_Write_4Bit@Nibble:
   624                           
   625                           ; 1 bytes @ 0x5
   626  0075                     	ds	1
   627  0076                     ??_setup:
   628  0076                     ??_I2C_Master_Init:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0076                     ??_LCD_CMD:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0076                     ??_LCD_Write_Char:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     ??___awdiv:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     ??___awmod:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0076                     ??___lwdiv:	
   644                           ; 1 bytes @ 0x6
   645                           
   646                           
   647                           ; 1 bytes @ 0x6
   648  0076                     	ds	1
   649  0077                     LCD_CMD@CMD:
   650  0077                     LCD_Write_Char@Data:	
   651                           ; 1 bytes @ 0x7
   652                           
   653  0077                     ___awmod@counter:	
   654                           ; 1 bytes @ 0x7
   655                           
   656  0077                     ___lwdiv@quotient:	
   657                           ; 1 bytes @ 0x7
   658                           
   659                           
   660                           ; 2 bytes @ 0x7
   661  0077                     	ds	1
   662  0078                     ??_LCD_Init:
   663  0078                     ?_LCD_Set_Cursor:	
   664                           ; 1 bytes @ 0x8
   665                           
   666  0078                     ?_LCD_Write_String:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0078                     LCD_Set_Cursor@COL:	
   670                           ; 1 bytes @ 0x8
   671                           
   672  0078                     ___awmod@sign:	
   673                           ; 1 bytes @ 0x8
   674                           
   675  0078                     LCD_Write_String@Str:	
   676                           ; 1 bytes @ 0x8
   677                           
   678                           
   679                           ; 2 bytes @ 0x8
   680  0078                     	ds	1
   681  0079                     division@valor:
   682  0079                     LCD_Set_Cursor@ROW:	
   683                           ; 1 bytes @ 0x9
   684                           
   685  0079                     ___lwdiv@counter:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 1 bytes @ 0x9
   690  0079                     	ds	1
   691                           
   692                           	psect	cstackBANK0
   693  0020                     __pcstackBANK0:
   694  0020                     ??_LCD_Set_Cursor:
   695  0020                     ??_LCD_Write_String:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ?___lwmod:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0020                     LCD_Init@I2C_Add:	
   702                           ; 2 bytes @ 0x0
   703                           
   704  0020                     ___awdiv@counter:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ___lwmod@divisor:	
   708                           ; 1 bytes @ 0x0
   709                           
   710                           
   711                           ; 2 bytes @ 0x0
   712  0020                     	ds	1
   713  0021                     ___awdiv@sign:
   714                           
   715                           ; 1 bytes @ 0x1
   716  0021                     	ds	1
   717  0022                     ___awdiv@quotient:
   718  0022                     ___lwmod@dividend:	
   719                           ; 2 bytes @ 0x2
   720                           
   721                           
   722                           ; 2 bytes @ 0x2
   723  0022                     	ds	1
   724  0023                     LCD_Write_String@i:
   725                           
   726                           ; 2 bytes @ 0x3
   727  0023                     	ds	1
   728  0024                     ??_division:
   729  0024                     ??___lwmod:	
   730                           ; 1 bytes @ 0x4
   731                           
   732                           
   733                           ; 1 bytes @ 0x4
   734  0024                     	ds	1
   735  0025                     ___lwmod@counter:
   736                           
   737                           ; 1 bytes @ 0x5
   738  0025                     	ds	1
   739  0026                     ?_sprintf:
   740  0026                     sprintf@f:	
   741                           ; 2 bytes @ 0x6
   742                           
   743                           
   744                           ; 1 bytes @ 0x6
   745  0026                     	ds	1
   746  0027                     ??_Text:
   747                           
   748                           ; 1 bytes @ 0x7
   749  0027                     	ds	2
   750  0029                     ??_sprintf:
   751                           
   752                           ; 1 bytes @ 0x9
   753  0029                     	ds	3
   754  002C                     sprintf@ap:
   755                           
   756                           ; 1 bytes @ 0xC
   757  002C                     	ds	1
   758  002D                     sprintf@flag:
   759                           
   760                           ; 1 bytes @ 0xD
   761  002D                     	ds	1
   762  002E                     sprintf@prec:
   763                           
   764                           ; 1 bytes @ 0xE
   765  002E                     	ds	1
   766  002F                     sprintf@val:
   767                           
   768                           ; 2 bytes @ 0xF
   769  002F                     	ds	2
   770  0031                     sprintf@sp:
   771                           
   772                           ; 1 bytes @ 0x11
   773  0031                     	ds	1
   774  0032                     sprintf@c:
   775                           
   776                           ; 1 bytes @ 0x12
   777  0032                     	ds	1
   778  0033                     ??_main:
   779                           
   780                           ; 1 bytes @ 0x13
   781  0033                     	ds	3
   782  0036                     main@buffer:
   783                           
   784                           ; 20 bytes @ 0x16
   785  0036                     	ds	20
   786  004A                     main@buffer2:
   787                           
   788                           ; 20 bytes @ 0x2A
   789  004A                     	ds	20
   790  005E                     main@val2:
   791                           
   792                           ; 1 bytes @ 0x3E
   793  005E                     	ds	1
   794  005F                     main@val1:
   795                           
   796                           ; 1 bytes @ 0x3F
   797  005F                     	ds	1
   798  0060                     main@val:
   799                           
   800                           ; 1 bytes @ 0x40
   801  0060                     	ds	1
   802                           
   803                           	psect	maintext
   804  0028                     __pmaintext:	
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 69 in file "main_master.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  buffer2        20   42[BANK0 ] unsigned char [20]
   815 ;;  buffer         20   22[BANK0 ] unsigned char [20]
   816 ;;  buffer1        20    0        unsigned char [20]
   817 ;;  val             1   64[BANK0 ] unsigned char 
   818 ;;  val1            1   63[BANK0 ] unsigned char 
   819 ;;  val2            1   62[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : B00/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0      43       0       0       0
   831 ;;      Temps:          0       3       0       0       0
   832 ;;      Totals:         0      46       0       0       0
   833 ;;Total ram usage:       46 bytes
   834 ;; Hardware stack levels required when called:    7
   835 ;; This function calls:
   836 ;;		_I2C_Master_Start
   837 ;;		_I2C_Master_Stop
   838 ;;		_I2C_Master_Write
   839 ;;		_I2C_Read_Byte
   840 ;;		_LCD_Init
   841 ;;		_LCD_Set_Cursor
   842 ;;		_LCD_Write_String
   843 ;;		_Text
   844 ;;		_setup
   845 ;;		_sprintf
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _main
   853  0028                     _main:
   854  0028                     l2217:	
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   857                           
   858                           
   859                           ;main_master.c: 71:             LCD_Write_String("OFF");
   860  0028  120A  118A  248C  120A  118A  	fcall	_setup
   861                           
   862                           ;main_master.c: 72:         };main_master.c: 73: ;main_master.c: 74:         I2C_Master_
      +                          Start();;main_master.c: 75:         I2C_Master_Write(0x51);;main_master.c: 76:         R
      +                          1 = I2C_Read_Byte();;main_master.c: 77:         I2C_Master_Stop();;main_master.c: 78:   
      +                                _delay((unsigned long)((100)*(8000000/4000.0)));
   863  002D  304E               	movlw	78
   864  002E  120A  118A  22D1  120A  118A  	fcall	_LCD_Init
   865  0033                     l2219:
   866                           
   867                           ;main_master.c: 83:         R2 = I2C_Read_Byte();;main_master.c: 84:         I2C_Master_
      +                          Stop();
   868  0033  1283               	bcf	3,5	;RP0=0, select bank0
   869  0034  1303               	bcf	3,6	;RP1=0, select bank0
   870  0035  086C               	movf	_R2,w
   871  0036  00B3               	movwf	??_main
   872  0037  0833               	movf	??_main,w
   873  0038  00EB               	movwf	_temp
   874  0039                     l2221:
   875                           
   876                           ;main_master.c: 85:         _delay((unsigned long)((100)*(8000000/4000.0)));
   877  0039  300A               	movlw	10
   878  003A  00B3               	movwf	??_main
   879  003B  0833               	movf	??_main,w
   880  003C  00E9               	movwf	_cont
   881  003D                     l2223:
   882                           
   883                           ;main_master.c: 86: 
   884  003D  086D               	movf	_R1,w
   885  003E  3C0A               	sublw	10
   886  003F  00B3               	movwf	??_main
   887  0040  0833               	movf	??_main,w
   888  0041  00E0               	movwf	main@val
   889  0042                     l2225:
   890                           
   891                           ;main_master.c: 87:         Text();
   892  0042  0860               	movf	main@val,w
   893  0043  00B3               	movwf	??_main
   894  0044  0833               	movf	??_main,w
   895  0045  00E8               	movwf	_pr
   896  0046                     l2227:
   897                           
   898                           ;main_master.c: 88: 
   899  0046  086A               	movf	_stat,w
   900  0047  00B3               	movwf	??_main
   901  0048  0833               	movf	??_main,w
   902  0049  00DF               	movwf	main@val1
   903  004A                     l2229:
   904                           
   905                           ;main_master.c: 89:     }
   906  004A  086B               	movf	_temp,w
   907  004B  00B3               	movwf	??_main
   908  004C  0833               	movf	??_main,w
   909  004D  00DE               	movwf	main@val2
   910  004E                     l2231:
   911                           
   912                           ;main_master.c: 91: }
   913  004E  01F8               	clrf	LCD_Set_Cursor@COL
   914  004F  0AF8               	incf	LCD_Set_Cursor@COL,f
   915  0050  3001               	movlw	1
   916  0051  120A  118A  25D7  120A  118A  	fcall	_LCD_Set_Cursor
   917  0056                     l2233:
   918                           
   919                           ;main_master.c: 92: 
   920  0056  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   921  0057  00F8               	movwf	LCD_Write_String@Str
   922  0058  3080               	movlw	128
   923  0059  00F9               	movwf	LCD_Write_String@Str+1
   924  005A  120A  118A  24D9  120A  118A  	fcall	_LCD_Write_String
   925  005F                     l2235:
   926                           
   927                           ;main_master.c: 93: 
   928  005F  300B               	movlw	11
   929  0060  1283               	bcf	3,5	;RP0=0, select bank0
   930  0061  1303               	bcf	3,6	;RP1=0, select bank0
   931  0062  00B5               	movwf	??_main+2
   932  0063  3026               	movlw	38
   933  0064  00B4               	movwf	??_main+1
   934  0065  305D               	movlw	93
   935  0066  00B3               	movwf	??_main
   936  0067                     u1397:
   937  0067  0BB3               	decfsz	??_main,f
   938  0068  2867               	goto	u1397
   939  0069  0BB4               	decfsz	??_main+1,f
   940  006A  2867               	goto	u1397
   941  006B  0BB5               	decfsz	??_main+2,f
   942  006C  2867               	goto	u1397
   943  006D                     l2237:
   944                           
   945                           ;main_master.c: 94: 
   946  006D  3002               	movlw	2
   947  006E  1283               	bcf	3,5	;RP0=0, select bank0
   948  006F  1303               	bcf	3,6	;RP1=0, select bank0
   949  0070  00B3               	movwf	??_main
   950  0071  0833               	movf	??_main,w
   951  0072  00F8               	movwf	LCD_Set_Cursor@COL
   952  0073  3002               	movlw	2
   953  0074  120A  118A  25D7  120A  118A  	fcall	_LCD_Set_Cursor
   954  0079                     l2239:
   955                           
   956                           ;main_master.c: 95: void setup(void){
   957  0079  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   958  007A  1283               	bcf	3,5	;RP0=0, select bank0
   959  007B  1303               	bcf	3,6	;RP1=0, select bank0
   960  007C  00B3               	movwf	??_main
   961  007D  0833               	movf	??_main,w
   962  007E  00A6               	movwf	sprintf@f
   963  007F  0860               	movf	main@val,w
   964  0080  00B4               	movwf	??_main+1
   965  0081  01B5               	clrf	??_main+2
   966  0082  0834               	movf	??_main+1,w
   967  0083  00A7               	movwf	?_sprintf+1
   968  0084  0835               	movf	??_main+2,w
   969  0085  00A8               	movwf	?_sprintf+2
   970  0086  3036               	movlw	(low (main@buffer| 0))& (0+255)
   971  0087  120A  118A  2152  120A  118A  	fcall	_sprintf
   972  008C                     l2241:
   973                           
   974                           ;main_master.c: 96: 
   975  008C  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   976  008D  1283               	bcf	3,5	;RP0=0, select bank0
   977  008E  1303               	bcf	3,6	;RP1=0, select bank0
   978  008F  00B3               	movwf	??_main
   979  0090  0833               	movf	??_main,w
   980  0091  00A6               	movwf	sprintf@f
   981  0092  085E               	movf	main@val2,w
   982  0093  00B4               	movwf	??_main+1
   983  0094  01B5               	clrf	??_main+2
   984  0095  0834               	movf	??_main+1,w
   985  0096  00A7               	movwf	?_sprintf+1
   986  0097  0835               	movf	??_main+2,w
   987  0098  00A8               	movwf	?_sprintf+2
   988  0099  304A               	movlw	(low (main@buffer2| 0))& (0+255)
   989  009A  120A  118A  2152  120A  118A  	fcall	_sprintf
   990  009F                     l2243:
   991                           
   992                           ;main_master.c: 97:     OSCCONbits.IRCF0 = 0;
   993  009F  3002               	movlw	2
   994  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   995  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   996  00A2  00B3               	movwf	??_main
   997  00A3  0833               	movf	??_main,w
   998  00A4  00F8               	movwf	LCD_Set_Cursor@COL
   999  00A5  3002               	movlw	2
  1000  00A6  120A  118A  25D7  120A  118A  	fcall	_LCD_Set_Cursor
  1001  00AB                     l2245:
  1002                           
  1003                           ;main_master.c: 98:     OSCCONbits.IRCF1 = 1;
  1004  00AB  3036               	movlw	(low (main@buffer| 0))& (0+255)
  1005  00AC  00F8               	movwf	LCD_Write_String@Str
  1006  00AD  3000               	movlw	0
  1007  00AE  00F9               	movwf	LCD_Write_String@Str+1
  1008  00AF  120A  118A  24D9  120A  118A  	fcall	_LCD_Write_String
  1009  00B4                     l2247:
  1010                           
  1011                           ;main_master.c: 99:     OSCCONbits.IRCF2 = 1;
  1012  00B4  300D               	movlw	13
  1013  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1014  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1015  00B7  00B3               	movwf	??_main
  1016  00B8  0833               	movf	??_main,w
  1017  00B9  00F8               	movwf	LCD_Set_Cursor@COL
  1018  00BA  3002               	movlw	2
  1019  00BB  120A  118A  25D7  120A  118A  	fcall	_LCD_Set_Cursor
  1020  00C0                     l2249:
  1021                           
  1022                           ;main_master.c: 100:     OSCCONbits.SCS = 1;
  1023  00C0  304A               	movlw	(low (main@buffer2| 0))& (0+255)
  1024  00C1  00F8               	movwf	LCD_Write_String@Str
  1025  00C2  3000               	movlw	0
  1026  00C3  00F9               	movwf	LCD_Write_String@Str+1
  1027  00C4  120A  118A  24D9  120A  118A  	fcall	_LCD_Write_String
  1028  00C9                     l2251:
  1029                           
  1030                           ;main_master.c: 102: 
  1031  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1032  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1033  00CB  035F               	decf	main@val1,w
  1034  00CC  1D03               	btfss	3,2
  1035  00CD  28CF               	goto	u1381
  1036  00CE  28D0               	goto	u1380
  1037  00CF                     u1381:
  1038  00CF  28E4               	goto	l2257
  1039  00D0                     u1380:
  1040  00D0                     l2253:
  1041                           
  1042                           ;main_master.c: 103:     ANSEL = 0;
  1043  00D0  3007               	movlw	7
  1044  00D1  00B3               	movwf	??_main
  1045  00D2  0833               	movf	??_main,w
  1046  00D3  00F8               	movwf	LCD_Set_Cursor@COL
  1047  00D4  3002               	movlw	2
  1048  00D5  120A  118A  25D7  120A  118A  	fcall	_LCD_Set_Cursor
  1049  00DA                     l2255:
  1050                           
  1051                           ;main_master.c: 104:     ANSELH = 0;
  1052  00DA  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1053  00DB  00F8               	movwf	LCD_Write_String@Str
  1054  00DC  3080               	movlw	128
  1055  00DD  00F9               	movwf	LCD_Write_String@Str+1
  1056  00DE  120A  118A  24D9  120A  118A  	fcall	_LCD_Write_String
  1057                           
  1058                           ;main_master.c: 105: 
  1059  00E3  28F7               	goto	l2261
  1060  00E4                     l2257:
  1061                           
  1062                           ;main_master.c: 107:     TRISBbits.TRISB0 = 1;
  1063  00E4  3007               	movlw	7
  1064  00E5  00B3               	movwf	??_main
  1065  00E6  0833               	movf	??_main,w
  1066  00E7  00F8               	movwf	LCD_Set_Cursor@COL
  1067  00E8  3002               	movlw	2
  1068  00E9  120A  118A  25D7  120A  118A  	fcall	_LCD_Set_Cursor
  1069  00EE                     l2259:
  1070                           
  1071                           ;main_master.c: 108:     TRISBbits.TRISB1 = 1;
  1072  00EE  3025               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1073  00EF  00F8               	movwf	LCD_Write_String@Str
  1074  00F0  3080               	movlw	128
  1075  00F1  00F9               	movwf	LCD_Write_String@Str+1
  1076  00F2  120A  118A  24D9  120A  118A  	fcall	_LCD_Write_String
  1077  00F7                     l2261:
  1078                           
  1079                           ;main_master.c: 111:     TRISA = 0x00;
  1080  00F7  120A  118A  26E5  120A  118A  	fcall	_I2C_Master_Start
  1081  00FC                     l2263:
  1082                           
  1083                           ;main_master.c: 112: 
  1084  00FC  3051               	movlw	81
  1085  00FD  120A  118A  26B2  120A  118A  	fcall	_I2C_Master_Write
  1086  0102                     l2265:
  1087                           
  1088                           ;main_master.c: 113: 
  1089  0102  120A  118A  269B  120A  118A  	fcall	_I2C_Read_Byte
  1090  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0109  00B3               	movwf	??_main
  1093  010A  0833               	movf	??_main,w
  1094  010B  00ED               	movwf	_R1
  1095  010C                     l2267:
  1096                           
  1097                           ;main_master.c: 114:     PORTA = 0x00;
  1098  010C  120A  118A  26DC  120A  118A  	fcall	_I2C_Master_Stop
  1099  0111                     l2269:
  1100                           
  1101                           ;main_master.c: 115:     PORTB = 0x00;
  1102  0111  3002               	movlw	2
  1103  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0114  00B5               	movwf	??_main+2
  1106  0115  3004               	movlw	4
  1107  0116  00B4               	movwf	??_main+1
  1108  0117  30B9               	movlw	185
  1109  0118  00B3               	movwf	??_main
  1110  0119                     u1407:
  1111  0119  0BB3               	decfsz	??_main,f
  1112  011A  2919               	goto	u1407
  1113  011B  0BB4               	decfsz	??_main+1,f
  1114  011C  2919               	goto	u1407
  1115  011D  0BB5               	decfsz	??_main+2,f
  1116  011E  2919               	goto	u1407
  1117  011F  2920               	nop2
  1118  0120                     l2271:
  1119                           
  1120                           ;main_master.c: 118:     PORTE = 0x00;
  1121  0120  120A  118A  26E5  120A  118A  	fcall	_I2C_Master_Start
  1122  0125                     l2273:
  1123                           
  1124                           ;main_master.c: 119: 
  1125  0125  3061               	movlw	97
  1126  0126  120A  118A  26B2  120A  118A  	fcall	_I2C_Master_Write
  1127  012B                     l2275:
  1128                           
  1129                           ;main_master.c: 120: 
  1130  012B  120A  118A  269B  120A  118A  	fcall	_I2C_Read_Byte
  1131  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0132  00B3               	movwf	??_main
  1134  0133  0833               	movf	??_main,w
  1135  0134  00EC               	movwf	_R2
  1136  0135                     l2277:
  1137                           
  1138                           ;main_master.c: 121:     OPTION_REGbits.nRBPU = 0;
  1139  0135  120A  118A  26DC  120A  118A  	fcall	_I2C_Master_Stop
  1140  013A                     l2279:
  1141                           
  1142                           ;main_master.c: 122:     WPUB = 0b00000011;
  1143  013A  3002               	movlw	2
  1144  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1145  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1146  013D  00B5               	movwf	??_main+2
  1147  013E  3004               	movlw	4
  1148  013F  00B4               	movwf	??_main+1
  1149  0140  30B9               	movlw	185
  1150  0141  00B3               	movwf	??_main
  1151  0142                     u1417:
  1152  0142  0BB3               	decfsz	??_main,f
  1153  0143  2942               	goto	u1417
  1154  0144  0BB4               	decfsz	??_main+1,f
  1155  0145  2942               	goto	u1417
  1156  0146  0BB5               	decfsz	??_main+2,f
  1157  0147  2942               	goto	u1417
  1158  0148  2949               	nop2
  1159  0149                     l2281:
  1160                           
  1161                           ;main_master.c: 124:     IOCBbits.IOCB1 = 1;
  1162  0149  120A  118A  223C  120A  118A  	fcall	_Text
  1163  014E  2833               	goto	l2219
  1164  014F  120A  118A  280C   	ljmp	start
  1165  0152                     __end_of_main:
  1166                           
  1167                           	psect	text1
  1168  0152                     __ptext1:	
  1169 ;; *************** function _sprintf *****************
  1170 ;; Defined at:
  1171 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  sp              1    wreg     PTR unsigned char 
  1174 ;;		 -> main@buffer2(20), main@buffer(20), 
  1175 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1176 ;;		 -> STR_3(4), STR_2(4), 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1179 ;;		 -> main@buffer2(20), main@buffer(20), 
  1180 ;;  tmpval          4    0        struct .
  1181 ;;  val             2   15[BANK0 ] unsigned int 
  1182 ;;  cp              2    0        PTR const unsigned char 
  1183 ;;  len             2    0        unsigned int 
  1184 ;;  c               1   18[BANK0 ] unsigned char 
  1185 ;;  prec            1   14[BANK0 ] char 
  1186 ;;  flag            1   13[BANK0 ] unsigned char 
  1187 ;;  ap              1   12[BANK0 ] PTR void [1]
  1188 ;;		 -> ?_sprintf(2), 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    6[BANK0 ] int 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       3       0       0       0
  1199 ;;      Locals:         0       7       0       0       0
  1200 ;;      Temps:          0       3       0       0       0
  1201 ;;      Totals:         0      13       0       0       0
  1202 ;;Total ram usage:       13 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		___lwdiv
  1207 ;;		___lwmod
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _sprintf
  1215  0152                     _sprintf:
  1216                           
  1217                           ;incstack = 0
  1218                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1219                           ;sprintf@sp stored from wreg
  1220  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0154  00B1               	movwf	sprintf@sp
  1223  0155                     l2123:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1226  0155  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1227  0156  00A9               	movwf	??_sprintf
  1228  0157  0829               	movf	??_sprintf,w
  1229  0158  00AC               	movwf	sprintf@ap
  1230                           
  1231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1232  0159  2A25               	goto	l2175
  1233  015A                     l2125:
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1236  015A  3025               	movlw	37
  1237  015B  0632               	xorwf	sprintf@c,w
  1238  015C  1903               	btfsc	3,2
  1239  015D  295F               	goto	u1301
  1240  015E  2960               	goto	u1300
  1241  015F                     u1301:
  1242  015F  296C               	goto	l2131
  1243  0160                     u1300:
  1244  0160                     l2127:
  1245                           
  1246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1247  0160  0832               	movf	sprintf@c,w
  1248  0161  00A9               	movwf	??_sprintf
  1249  0162  0831               	movf	sprintf@sp,w
  1250  0163  0084               	movwf	4
  1251  0164  0829               	movf	??_sprintf,w
  1252  0165  1383               	bcf	3,7	;select IRP bank0
  1253  0166  0080               	movwf	0
  1254  0167                     l2129:
  1255  0167  3001               	movlw	1
  1256  0168  00A9               	movwf	??_sprintf
  1257  0169  0829               	movf	??_sprintf,w
  1258  016A  07B1               	addwf	sprintf@sp,f
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1261  016B  2A25               	goto	l2175
  1262  016C                     l2131:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1265  016C  01AD               	clrf	sprintf@flag
  1266  016D                     l2135:	
  1267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1268                           
  1269  016D  3001               	movlw	1
  1270  016E  07A6               	addwf	sprintf@f,f
  1271  016F  30FF               	movlw	-1
  1272  0170  0726               	addwf	sprintf@f,w
  1273  0171  0084               	movwf	4
  1274  0172  120A  118A  25A9  120A  118A  	fcall	stringdir
  1275  0177  00B2               	movwf	sprintf@c
  1276  0178  00A9               	movwf	??_sprintf
  1277  0179  01AA               	clrf	??_sprintf+1
  1278                           
  1279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1280                           ; Switch size 1, requested type "simple"
  1281                           ; Number of cases is 1, Range of values is 0 to 0
  1282                           ; switch strategies available:
  1283                           ; Name         Instructions Cycles
  1284                           ; simple_byte            4     3 (average)
  1285                           ; direct_byte           11     8 (fixed)
  1286                           ; jumptable            260     6 (fixed)
  1287                           ;	Chosen strategy is simple_byte
  1288  017A  082A               	movf	??_sprintf+1,w
  1289  017B  3A00               	xorlw	0	; case 0
  1290  017C  1903               	skipnz
  1291  017D  297F               	goto	l2359
  1292  017E  2A25               	goto	l2175
  1293  017F                     l2359:
  1294                           
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 3, Range of values is 0 to 105
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte           10     6 (average)
  1300                           ; jumptable            260     6 (fixed)
  1301                           ;	Chosen strategy is simple_byte
  1302  017F  0829               	movf	??_sprintf,w
  1303  0180  3A00               	xorlw	0	; case 0
  1304  0181  1903               	skipnz
  1305  0182  2A37               	goto	l2177
  1306  0183  3A64               	xorlw	100	; case 100
  1307  0184  1903               	skipnz
  1308  0185  298A               	goto	l2137
  1309  0186  3A0D               	xorlw	13	; case 105
  1310  0187  1903               	skipnz
  1311  0188  298A               	goto	l2137
  1312  0189  2A25               	goto	l2175
  1313  018A                     l2137:
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1316  018A  082C               	movf	sprintf@ap,w
  1317  018B  0084               	movwf	4
  1318  018C  1383               	bcf	3,7	;select IRP bank0
  1319  018D  0800               	movf	0,w
  1320  018E  00AF               	movwf	sprintf@val
  1321  018F  0A84               	incf	4,f
  1322  0190  0800               	movf	0,w
  1323  0191  00B0               	movwf	sprintf@val+1
  1324  0192                     l2139:
  1325  0192  3002               	movlw	2
  1326  0193  00A9               	movwf	??_sprintf
  1327  0194  0829               	movf	??_sprintf,w
  1328  0195  07AC               	addwf	sprintf@ap,f
  1329  0196                     l2141:
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1332  0196  1FB0               	btfss	sprintf@val+1,7
  1333  0197  2999               	goto	u1311
  1334  0198  299A               	goto	u1310
  1335  0199                     u1311:
  1336  0199  29A3               	goto	l2147
  1337  019A                     u1310:
  1338  019A                     l2143:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1341  019A  3003               	movlw	3
  1342  019B  00A9               	movwf	??_sprintf
  1343  019C  0829               	movf	??_sprintf,w
  1344  019D  04AD               	iorwf	sprintf@flag,f
  1345  019E                     l2145:
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1348  019E  09AF               	comf	sprintf@val,f
  1349  019F  09B0               	comf	sprintf@val+1,f
  1350  01A0  0AAF               	incf	sprintf@val,f
  1351  01A1  1903               	skipnz
  1352  01A2  0AB0               	incf	sprintf@val+1,f
  1353  01A3                     l2147:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1356  01A3  01B2               	clrf	sprintf@c
  1357  01A4  0AB2               	incf	sprintf@c,f
  1358  01A5                     l2153:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1361  01A5  0832               	movf	sprintf@c,w
  1362  01A6  00A9               	movwf	??_sprintf
  1363  01A7  0729               	addwf	??_sprintf,w
  1364  01A8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1365  01A9  0084               	movwf	4
  1366  01AA  120A  118A  25A9  120A  118A  	fcall	stringdir
  1367  01AF  00AA               	movwf	??_sprintf+1
  1368  01B0  120A  118A  25A9  120A  118A  	fcall	stringdir
  1369  01B5  00AB               	movwf	??_sprintf+2
  1370  01B6  082B               	movf	??_sprintf+2,w
  1371  01B7  0230               	subwf	sprintf@val+1,w
  1372  01B8  1D03               	skipz
  1373  01B9  29BC               	goto	u1325
  1374  01BA  082A               	movf	??_sprintf+1,w
  1375  01BB  022F               	subwf	sprintf@val,w
  1376  01BC                     u1325:
  1377  01BC  1803               	skipnc
  1378  01BD  29BF               	goto	u1321
  1379  01BE  29C0               	goto	u1320
  1380  01BF                     u1321:
  1381  01BF  29C1               	goto	l2157
  1382  01C0                     u1320:
  1383  01C0  29CB               	goto	l2159
  1384  01C1                     l2157:
  1385  01C1  3001               	movlw	1
  1386  01C2  00A9               	movwf	??_sprintf
  1387  01C3  0829               	movf	??_sprintf,w
  1388  01C4  07B2               	addwf	sprintf@c,f
  1389  01C5  3005               	movlw	5
  1390  01C6  0632               	xorwf	sprintf@c,w
  1391  01C7  1D03               	btfss	3,2
  1392  01C8  29CA               	goto	u1331
  1393  01C9  29CB               	goto	u1330
  1394  01CA                     u1331:
  1395  01CA  29A5               	goto	l2153
  1396  01CB                     u1330:
  1397  01CB                     l2159:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1400  01CB  082D               	movf	sprintf@flag,w
  1401  01CC  3903               	andlw	3
  1402  01CD  1903               	btfsc	3,2
  1403  01CE  29D0               	goto	u1341
  1404  01CF  29D1               	goto	u1340
  1405  01D0                     u1341:
  1406  01D0  29DC               	goto	l2165
  1407  01D1                     u1340:
  1408  01D1                     l2161:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1411  01D1  302D               	movlw	45
  1412  01D2  00A9               	movwf	??_sprintf
  1413  01D3  0831               	movf	sprintf@sp,w
  1414  01D4  0084               	movwf	4
  1415  01D5  0829               	movf	??_sprintf,w
  1416  01D6  1383               	bcf	3,7	;select IRP bank0
  1417  01D7  0080               	movwf	0
  1418  01D8                     l2163:
  1419  01D8  3001               	movlw	1
  1420  01D9  00A9               	movwf	??_sprintf
  1421  01DA  0829               	movf	??_sprintf,w
  1422  01DB  07B1               	addwf	sprintf@sp,f
  1423  01DC                     l2165:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1426  01DC  0832               	movf	sprintf@c,w
  1427  01DD  00A9               	movwf	??_sprintf
  1428  01DE  0829               	movf	??_sprintf,w
  1429  01DF  00AE               	movwf	sprintf@prec
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1432  01E0  2A1C               	goto	l2173
  1433  01E1                     l2167:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1436  01E1  300A               	movlw	10
  1437  01E2  00A0               	movwf	___lwmod@divisor
  1438  01E3  3000               	movlw	0
  1439  01E4  00A1               	movwf	___lwmod@divisor+1
  1440  01E5  082E               	movf	sprintf@prec,w
  1441  01E6  00A9               	movwf	??_sprintf
  1442  01E7  0729               	addwf	??_sprintf,w
  1443  01E8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1444  01E9  0084               	movwf	4
  1445  01EA  120A  118A  25A9  120A  118A  	fcall	stringdir
  1446  01EF  00F2               	movwf	___lwdiv@divisor
  1447  01F0  120A  118A  25A9  120A  118A  	fcall	stringdir
  1448  01F5  00F3               	movwf	___lwdiv@divisor+1
  1449  01F6  0830               	movf	sprintf@val+1,w
  1450  01F7  00F5               	movwf	___lwdiv@dividend+1
  1451  01F8  082F               	movf	sprintf@val,w
  1452  01F9  00F4               	movwf	___lwdiv@dividend
  1453  01FA  120A  118A  251F  120A  118A  	fcall	___lwdiv
  1454  01FF  0873               	movf	?___lwdiv+1,w
  1455  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0202  00A3               	movwf	___lwmod@dividend+1
  1458  0203  0872               	movf	?___lwdiv,w
  1459  0204  00A2               	movwf	___lwmod@dividend
  1460  0205  120A  118A  2563  120A  118A  	fcall	___lwmod
  1461  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1462  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1463  020C  0820               	movf	?___lwmod,w
  1464  020D  3E30               	addlw	48
  1465  020E  00AA               	movwf	??_sprintf+1
  1466  020F  082A               	movf	??_sprintf+1,w
  1467  0210  00B2               	movwf	sprintf@c
  1468  0211                     l2169:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1471  0211  0832               	movf	sprintf@c,w
  1472  0212  00A9               	movwf	??_sprintf
  1473  0213  0831               	movf	sprintf@sp,w
  1474  0214  0084               	movwf	4
  1475  0215  0829               	movf	??_sprintf,w
  1476  0216  1383               	bcf	3,7	;select IRP bank0
  1477  0217  0080               	movwf	0
  1478  0218                     l2171:
  1479  0218  3001               	movlw	1
  1480  0219  00A9               	movwf	??_sprintf
  1481  021A  0829               	movf	??_sprintf,w
  1482  021B  07B1               	addwf	sprintf@sp,f
  1483  021C                     l2173:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1486  021C  30FF               	movlw	255
  1487  021D  00A9               	movwf	??_sprintf
  1488  021E  0829               	movf	??_sprintf,w
  1489  021F  07AE               	addwf	sprintf@prec,f
  1490  0220  0A2E               	incf	sprintf@prec,w
  1491  0221  1D03               	btfss	3,2
  1492  0222  2A24               	goto	u1351
  1493  0223  2A25               	goto	u1350
  1494  0224                     u1351:
  1495  0224  29E1               	goto	l2167
  1496  0225                     u1350:
  1497  0225                     l2175:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1500  0225  3001               	movlw	1
  1501  0226  07A6               	addwf	sprintf@f,f
  1502  0227  30FF               	movlw	-1
  1503  0228  0726               	addwf	sprintf@f,w
  1504  0229  0084               	movwf	4
  1505  022A  120A  118A  25A9  120A  118A  	fcall	stringdir
  1506  022F  00A9               	movwf	??_sprintf
  1507  0230  0829               	movf	??_sprintf,w
  1508  0231  00B2               	movwf	sprintf@c
  1509  0232  0832               	movf	sprintf@c,w
  1510  0233  1D03               	btfss	3,2
  1511  0234  2A36               	goto	u1361
  1512  0235  2A37               	goto	u1360
  1513  0236                     u1361:
  1514  0236  295A               	goto	l2125
  1515  0237                     u1360:
  1516  0237                     l2177:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1519  0237  0831               	movf	sprintf@sp,w
  1520  0238  0084               	movwf	4
  1521  0239  1383               	bcf	3,7	;select IRP bank0
  1522  023A  0180               	clrf	0
  1523  023B                     l377:
  1524  023B  0008               	return
  1525  023C                     __end_of_sprintf:
  1526                           
  1527                           	psect	text2
  1528  0563                     __ptext2:	
  1529 ;; *************** function ___lwmod *****************
  1530 ;; Defined at:
  1531 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  divisor         2    0[BANK0 ] unsigned int 
  1534 ;;  dividend        2    2[BANK0 ] unsigned int 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  counter         1    5[BANK0 ] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2    0[BANK0 ] unsigned int 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       4       0       0       0
  1547 ;;      Locals:         0       1       0       0       0
  1548 ;;      Temps:          0       1       0       0       0
  1549 ;;      Totals:         0       6       0       0       0
  1550 ;;Total ram usage:        6 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_sprintf
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function ___lwmod
  1562  0563                     ___lwmod:
  1563  0563                     l2051:	
  1564                           ;incstack = 0
  1565                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1566                           
  1567  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0565  0820               	movf	___lwmod@divisor,w
  1570  0566  0421               	iorwf	___lwmod@divisor+1,w
  1571  0567  1903               	btfsc	3,2
  1572  0568  2D6A               	goto	u1211
  1573  0569  2D6B               	goto	u1210
  1574  056A                     u1211:
  1575  056A  2D9A               	goto	l2069
  1576  056B                     u1210:
  1577  056B                     l2053:
  1578  056B  01A5               	clrf	___lwmod@counter
  1579  056C  0AA5               	incf	___lwmod@counter,f
  1580  056D  2D79               	goto	l2059
  1581  056E                     l2055:
  1582  056E  3001               	movlw	1
  1583  056F                     u1225:
  1584  056F  1003               	clrc
  1585  0570  0DA0               	rlf	___lwmod@divisor,f
  1586  0571  0DA1               	rlf	___lwmod@divisor+1,f
  1587  0572  3EFF               	addlw	-1
  1588  0573  1D03               	skipz
  1589  0574  2D6F               	goto	u1225
  1590  0575                     l2057:
  1591  0575  3001               	movlw	1
  1592  0576  00A4               	movwf	??___lwmod
  1593  0577  0824               	movf	??___lwmod,w
  1594  0578  07A5               	addwf	___lwmod@counter,f
  1595  0579                     l2059:
  1596  0579  1FA1               	btfss	___lwmod@divisor+1,7
  1597  057A  2D7C               	goto	u1231
  1598  057B  2D7D               	goto	u1230
  1599  057C                     u1231:
  1600  057C  2D6E               	goto	l2055
  1601  057D                     u1230:
  1602  057D                     l2061:
  1603  057D  0821               	movf	___lwmod@divisor+1,w
  1604  057E  0223               	subwf	___lwmod@dividend+1,w
  1605  057F  1D03               	skipz
  1606  0580  2D83               	goto	u1245
  1607  0581  0820               	movf	___lwmod@divisor,w
  1608  0582  0222               	subwf	___lwmod@dividend,w
  1609  0583                     u1245:
  1610  0583  1C03               	skipc
  1611  0584  2D86               	goto	u1241
  1612  0585  2D87               	goto	u1240
  1613  0586                     u1241:
  1614  0586  2D8D               	goto	l2065
  1615  0587                     u1240:
  1616  0587                     l2063:
  1617  0587  0820               	movf	___lwmod@divisor,w
  1618  0588  02A2               	subwf	___lwmod@dividend,f
  1619  0589  0821               	movf	___lwmod@divisor+1,w
  1620  058A  1C03               	skipc
  1621  058B  03A3               	decf	___lwmod@dividend+1,f
  1622  058C  02A3               	subwf	___lwmod@dividend+1,f
  1623  058D                     l2065:
  1624  058D  3001               	movlw	1
  1625  058E                     u1255:
  1626  058E  1003               	clrc
  1627  058F  0CA1               	rrf	___lwmod@divisor+1,f
  1628  0590  0CA0               	rrf	___lwmod@divisor,f
  1629  0591  3EFF               	addlw	-1
  1630  0592  1D03               	skipz
  1631  0593  2D8E               	goto	u1255
  1632  0594                     l2067:
  1633  0594  3001               	movlw	1
  1634  0595  02A5               	subwf	___lwmod@counter,f
  1635  0596  1D03               	btfss	3,2
  1636  0597  2D99               	goto	u1261
  1637  0598  2D9A               	goto	u1260
  1638  0599                     u1261:
  1639  0599  2D7D               	goto	l2061
  1640  059A                     u1260:
  1641  059A                     l2069:
  1642  059A  0823               	movf	___lwmod@dividend+1,w
  1643  059B  00A1               	movwf	?___lwmod+1
  1644  059C  0822               	movf	___lwmod@dividend,w
  1645  059D  00A0               	movwf	?___lwmod
  1646  059E                     l663:
  1647  059E  0008               	return
  1648  059F                     __end_of___lwmod:
  1649                           
  1650                           	psect	text3
  1651  051F                     __ptext3:	
  1652 ;; *************** function ___lwdiv *****************
  1653 ;; Defined at:
  1654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  divisor         2    2[COMMON] unsigned int 
  1657 ;;  dividend        2    4[COMMON] unsigned int 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  quotient        2    7[COMMON] unsigned int 
  1660 ;;  counter         1    9[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2    2[COMMON] unsigned int 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         4       0       0       0       0
  1671 ;;      Locals:         3       0       0       0       0
  1672 ;;      Temps:          1       0       0       0       0
  1673 ;;      Totals:         8       0       0       0       0
  1674 ;;Total ram usage:        8 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_sprintf
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function ___lwdiv
  1686  051F                     ___lwdiv:
  1687  051F                     l1563:	
  1688                           ;incstack = 0
  1689                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1690                           
  1691  051F  01F7               	clrf	___lwdiv@quotient
  1692  0520  01F8               	clrf	___lwdiv@quotient+1
  1693  0521                     l1565:
  1694  0521  0872               	movf	___lwdiv@divisor,w
  1695  0522  0473               	iorwf	___lwdiv@divisor+1,w
  1696  0523  1903               	btfsc	3,2
  1697  0524  2D26               	goto	u781
  1698  0525  2D27               	goto	u780
  1699  0526                     u781:
  1700  0526  2D5E               	goto	l1585
  1701  0527                     u780:
  1702  0527                     l1567:
  1703  0527  01F9               	clrf	___lwdiv@counter
  1704  0528  0AF9               	incf	___lwdiv@counter,f
  1705  0529  2D35               	goto	l1573
  1706  052A                     l1569:
  1707  052A  3001               	movlw	1
  1708  052B                     u795:
  1709  052B  1003               	clrc
  1710  052C  0DF2               	rlf	___lwdiv@divisor,f
  1711  052D  0DF3               	rlf	___lwdiv@divisor+1,f
  1712  052E  3EFF               	addlw	-1
  1713  052F  1D03               	skipz
  1714  0530  2D2B               	goto	u795
  1715  0531                     l1571:
  1716  0531  3001               	movlw	1
  1717  0532  00F6               	movwf	??___lwdiv
  1718  0533  0876               	movf	??___lwdiv,w
  1719  0534  07F9               	addwf	___lwdiv@counter,f
  1720  0535                     l1573:
  1721  0535  1FF3               	btfss	___lwdiv@divisor+1,7
  1722  0536  2D38               	goto	u801
  1723  0537  2D39               	goto	u800
  1724  0538                     u801:
  1725  0538  2D2A               	goto	l1569
  1726  0539                     u800:
  1727  0539                     l1575:
  1728  0539  3001               	movlw	1
  1729  053A                     u815:
  1730  053A  1003               	clrc
  1731  053B  0DF7               	rlf	___lwdiv@quotient,f
  1732  053C  0DF8               	rlf	___lwdiv@quotient+1,f
  1733  053D  3EFF               	addlw	-1
  1734  053E  1D03               	skipz
  1735  053F  2D3A               	goto	u815
  1736  0540  0873               	movf	___lwdiv@divisor+1,w
  1737  0541  0275               	subwf	___lwdiv@dividend+1,w
  1738  0542  1D03               	skipz
  1739  0543  2D46               	goto	u825
  1740  0544  0872               	movf	___lwdiv@divisor,w
  1741  0545  0274               	subwf	___lwdiv@dividend,w
  1742  0546                     u825:
  1743  0546  1C03               	skipc
  1744  0547  2D49               	goto	u821
  1745  0548  2D4A               	goto	u820
  1746  0549                     u821:
  1747  0549  2D51               	goto	l1581
  1748  054A                     u820:
  1749  054A                     l1577:
  1750  054A  0872               	movf	___lwdiv@divisor,w
  1751  054B  02F4               	subwf	___lwdiv@dividend,f
  1752  054C  0873               	movf	___lwdiv@divisor+1,w
  1753  054D  1C03               	skipc
  1754  054E  03F5               	decf	___lwdiv@dividend+1,f
  1755  054F  02F5               	subwf	___lwdiv@dividend+1,f
  1756  0550                     l1579:
  1757  0550  1477               	bsf	___lwdiv@quotient,0
  1758  0551                     l1581:
  1759  0551  3001               	movlw	1
  1760  0552                     u835:
  1761  0552  1003               	clrc
  1762  0553  0CF3               	rrf	___lwdiv@divisor+1,f
  1763  0554  0CF2               	rrf	___lwdiv@divisor,f
  1764  0555  3EFF               	addlw	-1
  1765  0556  1D03               	skipz
  1766  0557  2D52               	goto	u835
  1767  0558                     l1583:
  1768  0558  3001               	movlw	1
  1769  0559  02F9               	subwf	___lwdiv@counter,f
  1770  055A  1D03               	btfss	3,2
  1771  055B  2D5D               	goto	u841
  1772  055C  2D5E               	goto	u840
  1773  055D                     u841:
  1774  055D  2D39               	goto	l1575
  1775  055E                     u840:
  1776  055E                     l1585:
  1777  055E  0878               	movf	___lwdiv@quotient+1,w
  1778  055F  00F3               	movwf	?___lwdiv+1
  1779  0560  0877               	movf	___lwdiv@quotient,w
  1780  0561  00F2               	movwf	?___lwdiv
  1781  0562                     l653:
  1782  0562  0008               	return
  1783  0563                     __end_of___lwdiv:
  1784                           
  1785                           	psect	text4
  1786  048C                     __ptext4:	
  1787 ;; *************** function _setup *****************
  1788 ;; Defined at:
  1789 ;;		line 132 in file "main_master.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		_I2C_Master_Init
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _setup
  1819  048C                     _setup:
  1820  048C                     l1611:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1823                           
  1824                           
  1825                           ;main_master.c: 134:     RCSTAbits.SPEN = 1;
  1826  048C  1683               	bsf	3,5	;RP0=1, select bank1
  1827  048D  1303               	bcf	3,6	;RP1=0, select bank1
  1828  048E  120F               	bcf	15,4	;volatile
  1829                           
  1830                           ;main_master.c: 135:     RCSTAbits.RX9 = 0;
  1831  048F  168F               	bsf	15,5	;volatile
  1832                           
  1833                           ;main_master.c: 136:     RCSTAbits.CREN = 1;
  1834  0490  170F               	bsf	15,6	;volatile
  1835                           
  1836                           ;main_master.c: 137:     TXSTAbits.TX9 = 0;
  1837  0491  140F               	bsf	15,0	;volatile
  1838  0492                     l1613:
  1839                           
  1840                           ;main_master.c: 140: 
  1841  0492  1683               	bsf	3,5	;RP0=1, select bank3
  1842  0493  1703               	bsf	3,6	;RP1=1, select bank3
  1843  0494  0188               	clrf	8	;volatile
  1844                           
  1845                           ;main_master.c: 141:     PIR1bits.RCIF = 0;
  1846  0495  0189               	clrf	9	;volatile
  1847  0496                     l1615:
  1848                           
  1849                           ;main_master.c: 144: 
  1850  0496  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0497  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0498  1406               	bsf	6,0	;volatile
  1853  0499                     l1617:
  1854                           
  1855                           ;main_master.c: 145:     INTCONbits.GIE = 1;
  1856  0499  1486               	bsf	6,1	;volatile
  1857  049A                     l1619:
  1858                           
  1859                           ;main_master.c: 146:     INTCONbits.PEIE = 1;
  1860  049A  1007               	bcf	7,0	;volatile
  1861                           
  1862                           ;main_master.c: 147:     PIE1bits.RCIE = 0;
  1863  049B  0188               	clrf	8	;volatile
  1864                           
  1865                           ;main_master.c: 148:     PIE1bits.TXIE = 0;
  1866  049C  0185               	clrf	5	;volatile
  1867                           
  1868                           ;main_master.c: 151: 
  1869  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1870  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1871  049F  0185               	clrf	5	;volatile
  1872                           
  1873                           ;main_master.c: 152: 
  1874  04A0  0186               	clrf	6	;volatile
  1875                           
  1876                           ;main_master.c: 153:     I2C_Master_Init(100000);
  1877  04A1  0187               	clrf	7	;volatile
  1878                           
  1879                           ;main_master.c: 154: }
  1880  04A2  0188               	clrf	8	;volatile
  1881                           
  1882                           ;main_master.c: 155: 
  1883  04A3  0189               	clrf	9	;volatile
  1884  04A4                     l1621:
  1885                           
  1886                           ;main_master.c: 158:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1887  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  1888  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  1889  04A6  1381               	bcf	1,7	;volatile
  1890  04A7                     l1623:
  1891                           
  1892                           ;main_master.c: 159:     division(pr);
  1893  04A7  3003               	movlw	3
  1894  04A8  0095               	movwf	21	;volatile
  1895  04A9                     l1625:
  1896                           
  1897                           ;main_master.c: 160: 
  1898  04A9  1416               	bsf	22,0	;volatile
  1899  04AA                     l1627:
  1900                           
  1901                           ;main_master.c: 161:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1902  04AA  1496               	bsf	22,1	;volatile
  1903  04AB                     l1629:
  1904                           
  1905                           ;main_master.c: 164:     TXREG = unidades;
  1906  04AB  1218               	bcf	24,4	;volatile
  1907  04AC                     l1631:
  1908                           
  1909                           ;main_master.c: 165:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1910  04AC  1518               	bsf	24,2	;volatile
  1911  04AD                     l1633:
  1912                           
  1913                           ;main_master.c: 166: 
  1914  04AD  1683               	bsf	3,5	;RP0=1, select bank3
  1915  04AE  1703               	bsf	3,6	;RP1=1, select bank3
  1916  04AF  1187               	bcf	7,3	;volatile
  1917  04B0                     l1635:
  1918                           
  1919                           ;main_master.c: 168: 
  1920  04B0  3019               	movlw	25
  1921  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  1922  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  1923  04B3  0099               	movwf	25	;volatile
  1924  04B4                     l1637:
  1925                           
  1926                           ;main_master.c: 169:     division(stat);
  1927  04B4  3001               	movlw	1
  1928  04B5  009A               	movwf	26	;volatile
  1929  04B6                     l1639:
  1930                           
  1931                           ;main_master.c: 171:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1932  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1933  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1934  04B8  1798               	bsf	24,7	;volatile
  1935  04B9                     l1641:
  1936                           
  1937                           ;main_master.c: 172:     TXREG = unidades;
  1938  04B9  1318               	bcf	24,6	;volatile
  1939  04BA                     l1643:
  1940                           
  1941                           ;main_master.c: 173:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1942  04BA  1618               	bsf	24,4	;volatile
  1943  04BB                     l1645:
  1944                           
  1945                           ;main_master.c: 174: 
  1946  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  1947  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  1948  04BD  1318               	bcf	24,6	;volatile
  1949  04BE                     l1647:
  1950                           
  1951                           ;main_master.c: 176: 
  1952  04BE  1698               	bsf	24,5	;volatile
  1953  04BF                     l1649:
  1954                           
  1955                           ;main_master.c: 178: 
  1956  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1957  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1958  04C1  128C               	bcf	12,5	;volatile
  1959  04C2                     l1651:
  1960                           
  1961                           ;main_master.c: 179:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1962  04C2  120C               	bcf	12,4	;volatile
  1963  04C3                     l1653:
  1964                           
  1965                           ;main_master.c: 182:     TXREG = decenas;
  1966  04C3  178B               	bsf	11,7	;volatile
  1967  04C4                     l1655:
  1968                           
  1969                           ;main_master.c: 183:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1970  04C4  170B               	bsf	11,6	;volatile
  1971  04C5                     l1657:
  1972                           
  1973                           ;main_master.c: 184:     TXREG = unidades;
  1974  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  1975  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  1976  04C7  128C               	bcf	12,5	;volatile
  1977  04C8                     l1659:
  1978                           
  1979                           ;main_master.c: 185:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1980  04C8  120C               	bcf	12,4	;volatile
  1981  04C9                     l1661:
  1982                           
  1983                           ;main_master.c: 186: 
  1984  04C9  140B               	bsf	11,0	;volatile
  1985  04CA                     l1663:
  1986                           
  1987                           ;main_master.c: 187: }
  1988  04CA  158B               	bsf	11,3	;volatile
  1989  04CB                     l1665:
  1990                           
  1991                           ;main_master.c: 190: char division (char valor){
  1992  04CB  3000               	movlw	0
  1993  04CC  00F5               	movwf	?_I2C_Master_Init+3
  1994  04CD  3001               	movlw	1
  1995  04CE  00F4               	movwf	?_I2C_Master_Init+2
  1996  04CF  3086               	movlw	134
  1997  04D0  00F3               	movwf	?_I2C_Master_Init+1
  1998  04D1  30A0               	movlw	160
  1999  04D2  00F2               	movwf	?_I2C_Master_Init
  2000  04D3  120A  118A  26C2  120A  118A  	fcall	_I2C_Master_Init
  2001  04D8                     l132:
  2002  04D8  0008               	return
  2003  04D9                     __end_of_setup:
  2004                           
  2005                           	psect	text5
  2006  06C2                     __ptext5:	
  2007 ;; *************** function _I2C_Master_Init *****************
  2008 ;; Defined at:
  2009 ;;		line 16 in file "I2C_LCD.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         4       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0
  2026 ;;      Totals:         4       0       0       0       0
  2027 ;;Total ram usage:        4 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_setup
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _I2C_Master_Init
  2039  06C2                     _I2C_Master_Init:
  2040  06C2                     l1535:	
  2041                           ;incstack = 0
  2042                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2043                           
  2044                           
  2045                           ;I2C_LCD.c: 18:   SSPCON = 0x28;
  2046  06C2  3028               	movlw	40
  2047  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2048  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2049  06C5  0094               	movwf	20	;volatile
  2050  06C6                     l1537:
  2051                           
  2052                           ;I2C_LCD.c: 19:   SSPCON2 = 0x00;
  2053  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  2054  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  2055  06C8  0191               	clrf	17	;volatile
  2056  06C9                     l1539:
  2057                           
  2058                           ;I2C_LCD.c: 20:   SSPSTAT = 0x00;
  2059  06C9  0194               	clrf	20	;volatile
  2060                           
  2061                           ;I2C_LCD.c: 21:   SSPADD = ((8000000/4)/9600) - 1;
  2062  06CA  30CF               	movlw	207
  2063  06CB  0093               	movwf	19	;volatile
  2064  06CC                     l1541:
  2065                           
  2066                           ;I2C_LCD.c: 22:   TRISC3 = 1;
  2067  06CC  1587               	bsf	7,3	;volatile
  2068  06CD                     l1543:
  2069                           
  2070                           ;I2C_LCD.c: 23:   TRISC4 = 1;
  2071  06CD  1607               	bsf	7,4	;volatile
  2072  06CE                     l189:
  2073  06CE  0008               	return
  2074  06CF                     __end_of_I2C_Master_Init:
  2075                           
  2076                           	psect	text6
  2077  023C                     __ptext6:	
  2078 ;; *************** function _Text *****************
  2079 ;; Defined at:
  2080 ;;		line 194 in file "main_master.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0
  2096 ;;      Temps:          0       2       0       0       0
  2097 ;;      Totals:         0       2       0       0       0
  2098 ;;Total ram usage:        2 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    3
  2101 ;; This function calls:
  2102 ;;		_division
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function _Text
  2110  023C                     _Text:
  2111  023C                     l2195:	
  2112                           ;incstack = 0
  2113                           ; Regs used in _Text: [wreg+status,2+status,0+pclath+cstack]
  2114                           
  2115                           
  2116                           ;main_master.c: 195: 
  2117  023C  3082               	movlw	130
  2118  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2119  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2120  023F  00A8               	movwf	??_Text+1
  2121  0240  30DD               	movlw	221
  2122  0241  00A7               	movwf	??_Text
  2123  0242                     u1427:
  2124  0242  0BA7               	decfsz	??_Text,f
  2125  0243  2A42               	goto	u1427
  2126  0244  0BA8               	decfsz	??_Text+1,f
  2127  0245  2A42               	goto	u1427
  2128  0246                     l2197:
  2129                           
  2130                           ;main_master.c: 196:     centenas = centenas + 48;
  2131  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0248  0868               	movf	_pr,w
  2134  0249  120A  118A  235F  120A  118A  	fcall	_division
  2135  024E                     l2199:
  2136                           
  2137                           ;main_master.c: 198:     unidades = unidades + 48;
  2138  024E  3082               	movlw	130
  2139  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0251  00A8               	movwf	??_Text+1
  2142  0252  30DD               	movlw	221
  2143  0253  00A7               	movwf	??_Text
  2144  0254                     u1437:
  2145  0254  0BA7               	decfsz	??_Text,f
  2146  0255  2A54               	goto	u1437
  2147  0256  0BA8               	decfsz	??_Text+1,f
  2148  0257  2A54               	goto	u1437
  2149  0258                     l2201:
  2150                           
  2151                           ;main_master.c: 199: }
  2152  0258  087B               	movf	_decenas,w
  2153  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2154  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2155  025B  0099               	movwf	25	;volatile
  2156  025C                     l2203:
  2157                           
  2158                           ;main_master.c: 200: 
  2159  025C  3082               	movlw	130
  2160  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2161  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2162  025F  00A8               	movwf	??_Text+1
  2163  0260  30DD               	movlw	221
  2164  0261  00A7               	movwf	??_Text
  2165  0262                     u1447:
  2166  0262  0BA7               	decfsz	??_Text,f
  2167  0263  2A62               	goto	u1447
  2168  0264  0BA8               	decfsz	??_Text+1,f
  2169  0265  2A62               	goto	u1447
  2170  0266                     l2205:
  2171                           
  2172                           ;main_master.c: 201: 
  2173  0266  087A               	movf	_unidades,w
  2174  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0269  0099               	movwf	25	;volatile
  2177  026A                     l2207:
  2178                           
  2179                           ;main_master.c: 202: void putch(char data){
  2180  026A  3082               	movlw	130
  2181  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2182  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2183  026D  00A8               	movwf	??_Text+1
  2184  026E  30DD               	movlw	221
  2185  026F  00A7               	movwf	??_Text
  2186  0270                     u1457:
  2187  0270  0BA7               	decfsz	??_Text,f
  2188  0271  2A70               	goto	u1457
  2189  0272  0BA8               	decfsz	??_Text+1,f
  2190  0273  2A70               	goto	u1457
  2191                           
  2192                           ;main_master.c: 206: }
  2193  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0276  086A               	movf	_stat,w
  2196  0277  120A  118A  235F  120A  118A  	fcall	_division
  2197  027C                     l2209:
  2198  027C  3082               	movlw	130
  2199  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2200  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2201  027F  00A8               	movwf	??_Text+1
  2202  0280  30DD               	movlw	221
  2203  0281  00A7               	movwf	??_Text
  2204  0282                     u1467:
  2205  0282  0BA7               	decfsz	??_Text,f
  2206  0283  2A82               	goto	u1467
  2207  0284  0BA8               	decfsz	??_Text+1,f
  2208  0285  2A82               	goto	u1467
  2209  0286                     l2211:
  2210  0286  087A               	movf	_unidades,w
  2211  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0289  0099               	movwf	25	;volatile
  2214  028A                     l2213:
  2215  028A  3082               	movlw	130
  2216  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2217  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2218  028D  00A8               	movwf	??_Text+1
  2219  028E  30DD               	movlw	221
  2220  028F  00A7               	movwf	??_Text
  2221  0290                     u1477:
  2222  0290  0BA7               	decfsz	??_Text,f
  2223  0291  2A90               	goto	u1477
  2224  0292  0BA8               	decfsz	??_Text+1,f
  2225  0293  2A90               	goto	u1477
  2226  0294                     l2215:
  2227  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0296  086B               	movf	_temp,w
  2230  0297  120A  118A  235F  120A  118A  	fcall	_division
  2231  029C  3082               	movlw	130
  2232  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2233  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2234  029F  00A8               	movwf	??_Text+1
  2235  02A0  30DD               	movlw	221
  2236  02A1  00A7               	movwf	??_Text
  2237  02A2                     u1487:
  2238  02A2  0BA7               	decfsz	??_Text,f
  2239  02A3  2AA2               	goto	u1487
  2240  02A4  0BA8               	decfsz	??_Text+1,f
  2241  02A5  2AA2               	goto	u1487
  2242  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2243  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2244  02A8  0866               	movf	_centenas,w
  2245  02A9  0099               	movwf	25	;volatile
  2246  02AA  3082               	movlw	130
  2247  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2248  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2249  02AD  00A8               	movwf	??_Text+1
  2250  02AE  30DD               	movlw	221
  2251  02AF  00A7               	movwf	??_Text
  2252  02B0                     u1497:
  2253  02B0  0BA7               	decfsz	??_Text,f
  2254  02B1  2AB0               	goto	u1497
  2255  02B2  0BA8               	decfsz	??_Text+1,f
  2256  02B3  2AB0               	goto	u1497
  2257  02B4  087B               	movf	_decenas,w
  2258  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2259  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2260  02B7  0099               	movwf	25	;volatile
  2261  02B8  3082               	movlw	130
  2262  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2263  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2264  02BB  00A8               	movwf	??_Text+1
  2265  02BC  30DD               	movlw	221
  2266  02BD  00A7               	movwf	??_Text
  2267  02BE                     u1507:
  2268  02BE  0BA7               	decfsz	??_Text,f
  2269  02BF  2ABE               	goto	u1507
  2270  02C0  0BA8               	decfsz	??_Text+1,f
  2271  02C1  2ABE               	goto	u1507
  2272  02C2  087A               	movf	_unidades,w
  2273  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2274  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2275  02C5  0099               	movwf	25	;volatile
  2276  02C6  3082               	movlw	130
  2277  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2278  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2279  02C9  00A8               	movwf	??_Text+1
  2280  02CA  30DD               	movlw	221
  2281  02CB  00A7               	movwf	??_Text
  2282  02CC                     u1517:
  2283  02CC  0BA7               	decfsz	??_Text,f
  2284  02CD  2ACC               	goto	u1517
  2285  02CE  0BA8               	decfsz	??_Text+1,f
  2286  02CF  2ACC               	goto	u1517
  2287  02D0                     l135:
  2288  02D0  0008               	return
  2289  02D1                     __end_of_Text:
  2290                           
  2291                           	psect	text7
  2292  035F                     __ptext7:	
  2293 ;; *************** function _division *****************
  2294 ;; Defined at:
  2295 ;;		line 227 in file "main_master.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  valor           1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  valor           1    9[COMMON] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      unsigned char 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         1       0       0       0       0
  2311 ;;      Temps:          0       3       0       0       0
  2312 ;;      Totals:         1       3       0       0       0
  2313 ;;Total ram usage:        4 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    2
  2316 ;; This function calls:
  2317 ;;		___awdiv
  2318 ;;		___awmod
  2319 ;; This function is called by:
  2320 ;;		_Text
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _division
  2326  035F                     _division:
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2330                           ;division@valor stored from wreg
  2331  035F  00F9               	movwf	division@valor
  2332  0360                     l2033:
  2333  0360  3064               	movlw	100
  2334  0361  00F2               	movwf	___awdiv@divisor
  2335  0362  3000               	movlw	0
  2336  0363  00F3               	movwf	___awdiv@divisor+1
  2337  0364  0879               	movf	division@valor,w
  2338  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0367  00A4               	movwf	??_division
  2341  0368  01A5               	clrf	??_division+1
  2342  0369  0824               	movf	??_division,w
  2343  036A  00F4               	movwf	___awdiv@dividend
  2344  036B  0825               	movf	??_division+1,w
  2345  036C  00F5               	movwf	___awdiv@dividend+1
  2346  036D  120A  118A  23CA  120A  118A  	fcall	___awdiv
  2347  0372  0872               	movf	?___awdiv,w
  2348  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0375  00A6               	movwf	??_division+2
  2351  0376  0826               	movf	??_division+2,w
  2352  0377  00E6               	movwf	_centenas
  2353  0378  3064               	movlw	100
  2354  0379  00F2               	movwf	___awmod@divisor
  2355  037A  3000               	movlw	0
  2356  037B  00F3               	movwf	___awmod@divisor+1
  2357  037C  0879               	movf	division@valor,w
  2358  037D  00A4               	movwf	??_division
  2359  037E  01A5               	clrf	??_division+1
  2360  037F  0824               	movf	??_division,w
  2361  0380  00F4               	movwf	___awmod@dividend
  2362  0381  0825               	movf	??_division+1,w
  2363  0382  00F5               	movwf	___awmod@dividend+1
  2364  0383  120A  118A  2433  120A  118A  	fcall	___awmod
  2365  0388  0872               	movf	?___awmod,w
  2366  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2367  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2368  038B  00A6               	movwf	??_division+2
  2369  038C  0826               	movf	??_division+2,w
  2370  038D  00E5               	movwf	_residuo
  2371  038E  300A               	movlw	10
  2372  038F  00F2               	movwf	___awdiv@divisor
  2373  0390  3000               	movlw	0
  2374  0391  00F3               	movwf	___awdiv@divisor+1
  2375  0392  0865               	movf	_residuo,w
  2376  0393  00A4               	movwf	??_division
  2377  0394  01A5               	clrf	??_division+1
  2378  0395  0824               	movf	??_division,w
  2379  0396  00F4               	movwf	___awdiv@dividend
  2380  0397  0825               	movf	??_division+1,w
  2381  0398  00F5               	movwf	___awdiv@dividend+1
  2382  0399  120A  118A  23CA  120A  118A  	fcall	___awdiv
  2383  039E  0872               	movf	?___awdiv,w
  2384  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2385  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2386  03A1  00A6               	movwf	??_division+2
  2387  03A2  0826               	movf	??_division+2,w
  2388  03A3  00FB               	movwf	_decenas
  2389  03A4  300A               	movlw	10
  2390  03A5  00F2               	movwf	___awmod@divisor
  2391  03A6  3000               	movlw	0
  2392  03A7  00F3               	movwf	___awmod@divisor+1
  2393  03A8  0865               	movf	_residuo,w
  2394  03A9  00A4               	movwf	??_division
  2395  03AA  01A5               	clrf	??_division+1
  2396  03AB  0824               	movf	??_division,w
  2397  03AC  00F4               	movwf	___awmod@dividend
  2398  03AD  0825               	movf	??_division+1,w
  2399  03AE  00F5               	movwf	___awmod@dividend+1
  2400  03AF  120A  118A  2433  120A  118A  	fcall	___awmod
  2401  03B4  0872               	movf	?___awmod,w
  2402  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2403  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2404  03B7  00A6               	movwf	??_division+2
  2405  03B8  0826               	movf	??_division+2,w
  2406  03B9  00FA               	movwf	_unidades
  2407  03BA                     l2035:
  2408  03BA  0866               	movf	_centenas,w
  2409  03BB  3E30               	addlw	48
  2410  03BC  00A4               	movwf	??_division
  2411  03BD  0824               	movf	??_division,w
  2412  03BE  00E6               	movwf	_centenas
  2413  03BF                     l2037:
  2414  03BF  087B               	movf	_decenas,w
  2415  03C0  3E30               	addlw	48
  2416  03C1  00A4               	movwf	??_division
  2417  03C2  0824               	movf	??_division,w
  2418  03C3  00FB               	movwf	_decenas
  2419  03C4                     l2039:
  2420  03C4  087A               	movf	_unidades,w
  2421  03C5  3E30               	addlw	48
  2422  03C6  00A4               	movwf	??_division
  2423  03C7  0824               	movf	??_division,w
  2424  03C8  00FA               	movwf	_unidades
  2425  03C9                     l138:
  2426  03C9  0008               	return
  2427  03CA                     __end_of_division:
  2428                           
  2429                           	psect	text8
  2430  0433                     __ptext8:	
  2431 ;; *************** function ___awmod *****************
  2432 ;; Defined at:
  2433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  divisor         2    2[COMMON] int 
  2436 ;;  dividend        2    4[COMMON] int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  sign            1    8[COMMON] unsigned char 
  2439 ;;  counter         1    7[COMMON] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    2[COMMON] int 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         4       0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0
  2451 ;;      Temps:          1       0       0       0       0
  2452 ;;      Totals:         7       0       0       0       0
  2453 ;;Total ram usage:        7 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_division
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function ___awmod
  2465  0433                     ___awmod:
  2466  0433                     l1497:	
  2467                           ;incstack = 0
  2468                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2469                           
  2470  0433  01F8               	clrf	___awmod@sign
  2471  0434                     l1499:
  2472  0434  1FF5               	btfss	___awmod@dividend+1,7
  2473  0435  2C37               	goto	u671
  2474  0436  2C38               	goto	u670
  2475  0437                     u671:
  2476  0437  2C3F               	goto	l1505
  2477  0438                     u670:
  2478  0438                     l1501:
  2479  0438  09F4               	comf	___awmod@dividend,f
  2480  0439  09F5               	comf	___awmod@dividend+1,f
  2481  043A  0AF4               	incf	___awmod@dividend,f
  2482  043B  1903               	skipnz
  2483  043C  0AF5               	incf	___awmod@dividend+1,f
  2484  043D                     l1503:
  2485  043D  01F8               	clrf	___awmod@sign
  2486  043E  0AF8               	incf	___awmod@sign,f
  2487  043F                     l1505:
  2488  043F  1FF3               	btfss	___awmod@divisor+1,7
  2489  0440  2C42               	goto	u681
  2490  0441  2C43               	goto	u680
  2491  0442                     u681:
  2492  0442  2C48               	goto	l1509
  2493  0443                     u680:
  2494  0443                     l1507:
  2495  0443  09F2               	comf	___awmod@divisor,f
  2496  0444  09F3               	comf	___awmod@divisor+1,f
  2497  0445  0AF2               	incf	___awmod@divisor,f
  2498  0446  1903               	skipnz
  2499  0447  0AF3               	incf	___awmod@divisor+1,f
  2500  0448                     l1509:
  2501  0448  0872               	movf	___awmod@divisor,w
  2502  0449  0473               	iorwf	___awmod@divisor+1,w
  2503  044A  1903               	btfsc	3,2
  2504  044B  2C4D               	goto	u691
  2505  044C  2C4E               	goto	u690
  2506  044D                     u691:
  2507  044D  2C7D               	goto	l1527
  2508  044E                     u690:
  2509  044E                     l1511:
  2510  044E  01F7               	clrf	___awmod@counter
  2511  044F  0AF7               	incf	___awmod@counter,f
  2512  0450  2C5C               	goto	l1517
  2513  0451                     l1513:
  2514  0451  3001               	movlw	1
  2515  0452                     u705:
  2516  0452  1003               	clrc
  2517  0453  0DF2               	rlf	___awmod@divisor,f
  2518  0454  0DF3               	rlf	___awmod@divisor+1,f
  2519  0455  3EFF               	addlw	-1
  2520  0456  1D03               	skipz
  2521  0457  2C52               	goto	u705
  2522  0458                     l1515:
  2523  0458  3001               	movlw	1
  2524  0459  00F6               	movwf	??___awmod
  2525  045A  0876               	movf	??___awmod,w
  2526  045B  07F7               	addwf	___awmod@counter,f
  2527  045C                     l1517:
  2528  045C  1FF3               	btfss	___awmod@divisor+1,7
  2529  045D  2C5F               	goto	u711
  2530  045E  2C60               	goto	u710
  2531  045F                     u711:
  2532  045F  2C51               	goto	l1513
  2533  0460                     u710:
  2534  0460                     l1519:
  2535  0460  0873               	movf	___awmod@divisor+1,w
  2536  0461  0275               	subwf	___awmod@dividend+1,w
  2537  0462  1D03               	skipz
  2538  0463  2C66               	goto	u725
  2539  0464  0872               	movf	___awmod@divisor,w
  2540  0465  0274               	subwf	___awmod@dividend,w
  2541  0466                     u725:
  2542  0466  1C03               	skipc
  2543  0467  2C69               	goto	u721
  2544  0468  2C6A               	goto	u720
  2545  0469                     u721:
  2546  0469  2C70               	goto	l1523
  2547  046A                     u720:
  2548  046A                     l1521:
  2549  046A  0872               	movf	___awmod@divisor,w
  2550  046B  02F4               	subwf	___awmod@dividend,f
  2551  046C  0873               	movf	___awmod@divisor+1,w
  2552  046D  1C03               	skipc
  2553  046E  03F5               	decf	___awmod@dividend+1,f
  2554  046F  02F5               	subwf	___awmod@dividend+1,f
  2555  0470                     l1523:
  2556  0470  3001               	movlw	1
  2557  0471                     u735:
  2558  0471  1003               	clrc
  2559  0472  0CF3               	rrf	___awmod@divisor+1,f
  2560  0473  0CF2               	rrf	___awmod@divisor,f
  2561  0474  3EFF               	addlw	-1
  2562  0475  1D03               	skipz
  2563  0476  2C71               	goto	u735
  2564  0477                     l1525:
  2565  0477  3001               	movlw	1
  2566  0478  02F7               	subwf	___awmod@counter,f
  2567  0479  1D03               	btfss	3,2
  2568  047A  2C7C               	goto	u741
  2569  047B  2C7D               	goto	u740
  2570  047C                     u741:
  2571  047C  2C60               	goto	l1519
  2572  047D                     u740:
  2573  047D                     l1527:
  2574  047D  0878               	movf	___awmod@sign,w
  2575  047E  1903               	btfsc	3,2
  2576  047F  2C81               	goto	u751
  2577  0480  2C82               	goto	u750
  2578  0481                     u751:
  2579  0481  2C87               	goto	l1531
  2580  0482                     u750:
  2581  0482                     l1529:
  2582  0482  09F4               	comf	___awmod@dividend,f
  2583  0483  09F5               	comf	___awmod@dividend+1,f
  2584  0484  0AF4               	incf	___awmod@dividend,f
  2585  0485  1903               	skipnz
  2586  0486  0AF5               	incf	___awmod@dividend+1,f
  2587  0487                     l1531:
  2588  0487  0875               	movf	___awmod@dividend+1,w
  2589  0488  00F3               	movwf	?___awmod+1
  2590  0489  0874               	movf	___awmod@dividend,w
  2591  048A  00F2               	movwf	?___awmod
  2592  048B                     l547:
  2593  048B  0008               	return
  2594  048C                     __end_of___awmod:
  2595                           
  2596                           	psect	text9
  2597  03CA                     __ptext9:	
  2598 ;; *************** function ___awdiv *****************
  2599 ;; Defined at:
  2600 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  divisor         2    2[COMMON] int 
  2603 ;;  dividend        2    4[COMMON] int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  quotient        2    2[BANK0 ] int 
  2606 ;;  sign            1    1[BANK0 ] unsigned char 
  2607 ;;  counter         1    0[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2    2[COMMON] int 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         4       0       0       0       0
  2618 ;;      Locals:         0       4       0       0       0
  2619 ;;      Temps:          1       0       0       0       0
  2620 ;;      Totals:         5       4       0       0       0
  2621 ;;Total ram usage:        9 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_division
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function ___awdiv
  2633  03CA                     ___awdiv:
  2634  03CA                     l1989:	
  2635                           ;incstack = 0
  2636                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2637                           
  2638  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2639  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2640  03CC  01A1               	clrf	___awdiv@sign
  2641  03CD                     l1991:
  2642  03CD  1FF3               	btfss	___awdiv@divisor+1,7
  2643  03CE  2BD0               	goto	u1091
  2644  03CF  2BD1               	goto	u1090
  2645  03D0                     u1091:
  2646  03D0  2BD8               	goto	l1997
  2647  03D1                     u1090:
  2648  03D1                     l1993:
  2649  03D1  09F2               	comf	___awdiv@divisor,f
  2650  03D2  09F3               	comf	___awdiv@divisor+1,f
  2651  03D3  0AF2               	incf	___awdiv@divisor,f
  2652  03D4  1903               	skipnz
  2653  03D5  0AF3               	incf	___awdiv@divisor+1,f
  2654  03D6                     l1995:
  2655  03D6  01A1               	clrf	___awdiv@sign
  2656  03D7  0AA1               	incf	___awdiv@sign,f
  2657  03D8                     l1997:
  2658  03D8  1FF5               	btfss	___awdiv@dividend+1,7
  2659  03D9  2BDB               	goto	u1101
  2660  03DA  2BDC               	goto	u1100
  2661  03DB                     u1101:
  2662  03DB  2BE5               	goto	l2003
  2663  03DC                     u1100:
  2664  03DC                     l1999:
  2665  03DC  09F4               	comf	___awdiv@dividend,f
  2666  03DD  09F5               	comf	___awdiv@dividend+1,f
  2667  03DE  0AF4               	incf	___awdiv@dividend,f
  2668  03DF  1903               	skipnz
  2669  03E0  0AF5               	incf	___awdiv@dividend+1,f
  2670  03E1                     l2001:
  2671  03E1  3001               	movlw	1
  2672  03E2  00F6               	movwf	??___awdiv
  2673  03E3  0876               	movf	??___awdiv,w
  2674  03E4  06A1               	xorwf	___awdiv@sign,f
  2675  03E5                     l2003:
  2676  03E5  01A2               	clrf	___awdiv@quotient
  2677  03E6  01A3               	clrf	___awdiv@quotient+1
  2678  03E7                     l2005:
  2679  03E7  0872               	movf	___awdiv@divisor,w
  2680  03E8  0473               	iorwf	___awdiv@divisor+1,w
  2681  03E9  1903               	btfsc	3,2
  2682  03EA  2BEC               	goto	u1111
  2683  03EB  2BED               	goto	u1110
  2684  03EC                     u1111:
  2685  03EC  2C24               	goto	l2025
  2686  03ED                     u1110:
  2687  03ED                     l2007:
  2688  03ED  01A0               	clrf	___awdiv@counter
  2689  03EE  0AA0               	incf	___awdiv@counter,f
  2690  03EF  2BFB               	goto	l2013
  2691  03F0                     l2009:
  2692  03F0  3001               	movlw	1
  2693  03F1                     u1125:
  2694  03F1  1003               	clrc
  2695  03F2  0DF2               	rlf	___awdiv@divisor,f
  2696  03F3  0DF3               	rlf	___awdiv@divisor+1,f
  2697  03F4  3EFF               	addlw	-1
  2698  03F5  1D03               	skipz
  2699  03F6  2BF1               	goto	u1125
  2700  03F7                     l2011:
  2701  03F7  3001               	movlw	1
  2702  03F8  00F6               	movwf	??___awdiv
  2703  03F9  0876               	movf	??___awdiv,w
  2704  03FA  07A0               	addwf	___awdiv@counter,f
  2705  03FB                     l2013:
  2706  03FB  1FF3               	btfss	___awdiv@divisor+1,7
  2707  03FC  2BFE               	goto	u1131
  2708  03FD  2BFF               	goto	u1130
  2709  03FE                     u1131:
  2710  03FE  2BF0               	goto	l2009
  2711  03FF                     u1130:
  2712  03FF                     l2015:
  2713  03FF  3001               	movlw	1
  2714  0400                     u1145:
  2715  0400  1003               	clrc
  2716  0401  0DA2               	rlf	___awdiv@quotient,f
  2717  0402  0DA3               	rlf	___awdiv@quotient+1,f
  2718  0403  3EFF               	addlw	-1
  2719  0404  1D03               	skipz
  2720  0405  2C00               	goto	u1145
  2721  0406  0873               	movf	___awdiv@divisor+1,w
  2722  0407  0275               	subwf	___awdiv@dividend+1,w
  2723  0408  1D03               	skipz
  2724  0409  2C0C               	goto	u1155
  2725  040A  0872               	movf	___awdiv@divisor,w
  2726  040B  0274               	subwf	___awdiv@dividend,w
  2727  040C                     u1155:
  2728  040C  1C03               	skipc
  2729  040D  2C0F               	goto	u1151
  2730  040E  2C10               	goto	u1150
  2731  040F                     u1151:
  2732  040F  2C17               	goto	l2021
  2733  0410                     u1150:
  2734  0410                     l2017:
  2735  0410  0872               	movf	___awdiv@divisor,w
  2736  0411  02F4               	subwf	___awdiv@dividend,f
  2737  0412  0873               	movf	___awdiv@divisor+1,w
  2738  0413  1C03               	skipc
  2739  0414  03F5               	decf	___awdiv@dividend+1,f
  2740  0415  02F5               	subwf	___awdiv@dividend+1,f
  2741  0416                     l2019:
  2742  0416  1422               	bsf	___awdiv@quotient,0
  2743  0417                     l2021:
  2744  0417  3001               	movlw	1
  2745  0418                     u1165:
  2746  0418  1003               	clrc
  2747  0419  0CF3               	rrf	___awdiv@divisor+1,f
  2748  041A  0CF2               	rrf	___awdiv@divisor,f
  2749  041B  3EFF               	addlw	-1
  2750  041C  1D03               	skipz
  2751  041D  2C18               	goto	u1165
  2752  041E                     l2023:
  2753  041E  3001               	movlw	1
  2754  041F  02A0               	subwf	___awdiv@counter,f
  2755  0420  1D03               	btfss	3,2
  2756  0421  2C23               	goto	u1171
  2757  0422  2C24               	goto	u1170
  2758  0423                     u1171:
  2759  0423  2BFF               	goto	l2015
  2760  0424                     u1170:
  2761  0424                     l2025:
  2762  0424  0821               	movf	___awdiv@sign,w
  2763  0425  1903               	btfsc	3,2
  2764  0426  2C28               	goto	u1181
  2765  0427  2C29               	goto	u1180
  2766  0428                     u1181:
  2767  0428  2C2E               	goto	l2029
  2768  0429                     u1180:
  2769  0429                     l2027:
  2770  0429  09A2               	comf	___awdiv@quotient,f
  2771  042A  09A3               	comf	___awdiv@quotient+1,f
  2772  042B  0AA2               	incf	___awdiv@quotient,f
  2773  042C  1903               	skipnz
  2774  042D  0AA3               	incf	___awdiv@quotient+1,f
  2775  042E                     l2029:
  2776  042E  0823               	movf	___awdiv@quotient+1,w
  2777  042F  00F3               	movwf	?___awdiv+1
  2778  0430  0822               	movf	___awdiv@quotient,w
  2779  0431  00F2               	movwf	?___awdiv
  2780  0432                     l534:
  2781  0432  0008               	return
  2782  0433                     __end_of___awdiv:
  2783                           
  2784                           	psect	text10
  2785  04D9                     __ptext10:	
  2786 ;; *************** function _LCD_Write_String *****************
  2787 ;; Defined at:
  2788 ;;		line 141 in file "I2C_LCD.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  Str             2    8[COMMON] PTR unsigned char 
  2791 ;;		 -> STR_5(4), STR_4(5), main@buffer2(20), main@buffer(20), 
  2792 ;;		 -> STR_1(17), 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  i               2    3[BANK0 ] int 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2804 ;;      Params:         2       0       0       0       0
  2805 ;;      Locals:         0       2       0       0       0
  2806 ;;      Temps:          0       3       0       0       0
  2807 ;;      Totals:         2       5       0       0       0
  2808 ;;Total ram usage:        7 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    6
  2811 ;; This function calls:
  2812 ;;		_LCD_Write_Char
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _LCD_Write_String
  2820  04D9                     _LCD_Write_String:
  2821  04D9                     l2115:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2824                           
  2825                           
  2826                           ;I2C_LCD.c: 141: void LCD_Write_String(char* Str);I2C_LCD.c: 142: {;I2C_LCD.c: 143:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  2827  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2828  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2829  04DB  01A3               	clrf	LCD_Write_String@i
  2830  04DC  01A4               	clrf	LCD_Write_String@i+1
  2831  04DD  2D02               	goto	l2121
  2832  04DE                     l2117:
  2833                           
  2834                           ;I2C_LCD.c: 144:        LCD_Write_Char(Str[i]);
  2835  04DE  0823               	movf	LCD_Write_String@i,w
  2836  04DF  0778               	addwf	LCD_Write_String@Str,w
  2837  04E0  00A1               	movwf	??_LCD_Write_String+1
  2838  04E1  0879               	movf	LCD_Write_String@Str+1,w
  2839  04E2  00A0               	movwf	??_LCD_Write_String
  2840  04E3  1803               	skipnc
  2841  04E4  0AA0               	incf	??_LCD_Write_String,f
  2842  04E5  1FA3               	btfss	LCD_Write_String@i,7
  2843  04E6  2CE8               	goto	u1270
  2844  04E7  03A0               	decf	??_LCD_Write_String,f
  2845  04E8                     u1270:
  2846  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2847  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2848  04EA  0820               	movf	??_LCD_Write_String,w
  2849  04EB  00A2               	movwf	??_LCD_Write_String+2
  2850  04EC  0822               	movf	??_LCD_Write_String+2,w
  2851  04ED  00FF               	movwf	btemp+1
  2852  04EE  0821               	movf	??_LCD_Write_String+1,w
  2853  04EF  0084               	movwf	4
  2854  04F0  120A  118A  259F  120A  118A  	fcall	stringtab
  2855  04F5  120A  118A  260F  120A  118A  	fcall	_LCD_Write_Char
  2856  04FA                     l2119:
  2857  04FA  3001               	movlw	1
  2858  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2859  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2860  04FD  07A3               	addwf	LCD_Write_String@i,f
  2861  04FE  1803               	skipnc
  2862  04FF  0AA4               	incf	LCD_Write_String@i+1,f
  2863  0500  3000               	movlw	0
  2864  0501  07A4               	addwf	LCD_Write_String@i+1,f
  2865  0502                     l2121:
  2866  0502  0823               	movf	LCD_Write_String@i,w
  2867  0503  0778               	addwf	LCD_Write_String@Str,w
  2868  0504  00A1               	movwf	??_LCD_Write_String+1
  2869  0505  0879               	movf	LCD_Write_String@Str+1,w
  2870  0506  00A0               	movwf	??_LCD_Write_String
  2871  0507  1803               	skipnc
  2872  0508  0AA0               	incf	??_LCD_Write_String,f
  2873  0509  1FA3               	btfss	LCD_Write_String@i,7
  2874  050A  2D0C               	goto	u1280
  2875  050B  03A0               	decf	??_LCD_Write_String,f
  2876  050C                     u1280:
  2877  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2878  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2879  050E  0820               	movf	??_LCD_Write_String,w
  2880  050F  00A2               	movwf	??_LCD_Write_String+2
  2881  0510  0822               	movf	??_LCD_Write_String+2,w
  2882  0511  00FF               	movwf	btemp+1
  2883  0512  0821               	movf	??_LCD_Write_String+1,w
  2884  0513  0084               	movwf	4
  2885  0514  120A  118A  259F  120A  118A  	fcall	stringtab
  2886  0519  3A00               	xorlw	0
  2887  051A  1D03               	skipz
  2888  051B  2D1D               	goto	u1291
  2889  051C  2D1E               	goto	u1290
  2890  051D                     u1291:
  2891  051D  2CDE               	goto	l2117
  2892  051E                     u1290:
  2893  051E                     l243:
  2894  051E  0008               	return
  2895  051F                     __end_of_LCD_Write_String:
  2896                           
  2897                           	psect	text11
  2898  060F                     __ptext11:	
  2899 ;; *************** function _LCD_Write_Char *****************
  2900 ;; Defined at:
  2901 ;;		line 134 in file "I2C_LCD.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  Data            1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  Data            1    7[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         1       0       0       0       0
  2917 ;;      Temps:          1       0       0       0       0
  2918 ;;      Totals:         2       0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    5
  2922 ;; This function calls:
  2923 ;;		_LCD_Write_4Bit
  2924 ;; This function is called by:
  2925 ;;		_LCD_Write_String
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _LCD_Write_Char
  2931  060F                     _LCD_Write_Char:
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2935                           ;LCD_Write_Char@Data stored from wreg
  2936  060F  00F7               	movwf	LCD_Write_Char@Data
  2937  0610                     l2047:
  2938                           
  2939                           ;I2C_LCD.c: 134: void LCD_Write_Char(char Data);I2C_LCD.c: 135: {;I2C_LCD.c: 136:   RS =
      +                           1;
  2940  0610  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0611  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0612  01E1               	clrf	_RS
  2943  0613  0AE1               	incf	_RS,f
  2944  0614                     l2049:
  2945                           
  2946                           ;I2C_LCD.c: 137:   LCD_Write_4Bit(Data & 0xF0);
  2947  0614  0877               	movf	LCD_Write_Char@Data,w
  2948  0615  39F0               	andlw	240
  2949  0616  120A  118A  2681  120A  118A  	fcall	_LCD_Write_4Bit
  2950                           
  2951                           ;I2C_LCD.c: 138:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2952  061B  0877               	movf	LCD_Write_Char@Data,w
  2953  061C  00F6               	movwf	??_LCD_Write_Char
  2954  061D  3003               	movlw	3
  2955  061E                     u1205:
  2956  061E  1003               	clrc
  2957  061F  0DF6               	rlf	??_LCD_Write_Char,f
  2958  0620  3EFF               	addlw	-1
  2959  0621  1D03               	skipz
  2960  0622  2E1E               	goto	u1205
  2961  0623  1003               	clrc
  2962  0624  0D76               	rlf	??_LCD_Write_Char,w
  2963  0625  39F0               	andlw	240
  2964  0626  120A  118A  2681  120A  118A  	fcall	_LCD_Write_4Bit
  2965  062B                     l237:
  2966  062B  0008               	return
  2967  062C                     __end_of_LCD_Write_Char:
  2968                           
  2969                           	psect	text12
  2970  05D7                     __ptext12:	
  2971 ;; *************** function _LCD_Set_Cursor *****************
  2972 ;; Defined at:
  2973 ;;		line 147 in file "I2C_LCD.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  ROW             1    wreg     unsigned char 
  2976 ;;  COL             1    8[COMMON] unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  ROW             1    9[COMMON] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         1       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0
  2990 ;;      Temps:          0       2       0       0       0
  2991 ;;      Totals:         2       2       0       0       0
  2992 ;;Total ram usage:        4 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    6
  2995 ;; This function calls:
  2996 ;;		_LCD_CMD
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _LCD_Set_Cursor
  3004  05D7                     _LCD_Set_Cursor:
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3008                           ;LCD_Set_Cursor@ROW stored from wreg
  3009  05D7  00F9               	movwf	LCD_Set_Cursor@ROW
  3010  05D8                     l2099:
  3011                           
  3012                           ;I2C_LCD.c: 147: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          8: {;I2C_LCD.c: 149:   switch(ROW)
  3013  05D8  2DF9               	goto	l2109
  3014  05D9                     l2101:
  3015                           
  3016                           ;I2C_LCD.c: 152:       LCD_CMD(0xC0 + COL-1);
  3017  05D9  0878               	movf	LCD_Set_Cursor@COL,w
  3018  05DA  3EBF               	addlw	191
  3019  05DB  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3020                           
  3021                           ;I2C_LCD.c: 153:       break;
  3022  05E0  2E0E               	goto	l252
  3023  05E1                     l2103:
  3024                           
  3025                           ;I2C_LCD.c: 155:       LCD_CMD(0x94 + COL-1);
  3026  05E1  0878               	movf	LCD_Set_Cursor@COL,w
  3027  05E2  3E93               	addlw	147
  3028  05E3  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3029                           
  3030                           ;I2C_LCD.c: 156:       break;
  3031  05E8  2E0E               	goto	l252
  3032  05E9                     l2105:
  3033                           
  3034                           ;I2C_LCD.c: 158:       LCD_CMD(0xD4 + COL-1);
  3035  05E9  0878               	movf	LCD_Set_Cursor@COL,w
  3036  05EA  3ED3               	addlw	211
  3037  05EB  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3038                           
  3039                           ;I2C_LCD.c: 159:       break;
  3040  05F0  2E0E               	goto	l252
  3041  05F1                     l2107:
  3042                           
  3043                           ;I2C_LCD.c: 162:       LCD_CMD(0x80 + COL-1);
  3044  05F1  0878               	movf	LCD_Set_Cursor@COL,w
  3045  05F2  3E7F               	addlw	127
  3046  05F3  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3047                           
  3048                           ;I2C_LCD.c: 163:   }
  3049  05F8  2E0E               	goto	l252
  3050  05F9                     l2109:
  3051  05F9  0879               	movf	LCD_Set_Cursor@ROW,w
  3052  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3053  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3054  05FC  00A0               	movwf	??_LCD_Set_Cursor
  3055  05FD  01A1               	clrf	??_LCD_Set_Cursor+1
  3056                           
  3057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3058                           ; Switch size 1, requested type "simple"
  3059                           ; Number of cases is 1, Range of values is 0 to 0
  3060                           ; switch strategies available:
  3061                           ; Name         Instructions Cycles
  3062                           ; simple_byte            4     3 (average)
  3063                           ; direct_byte           11     8 (fixed)
  3064                           ; jumptable            260     6 (fixed)
  3065                           ;	Chosen strategy is simple_byte
  3066  05FE  0821               	movf	??_LCD_Set_Cursor+1,w
  3067  05FF  3A00               	xorlw	0	; case 0
  3068  0600  1903               	skipnz
  3069  0601  2E03               	goto	l2361
  3070  0602  2DF1               	goto	l2107
  3071  0603                     l2361:
  3072                           
  3073                           ; Switch size 1, requested type "simple"
  3074                           ; Number of cases is 3, Range of values is 2 to 4
  3075                           ; switch strategies available:
  3076                           ; Name         Instructions Cycles
  3077                           ; simple_byte           10     6 (average)
  3078                           ; direct_byte           20    11 (fixed)
  3079                           ; jumptable            263     9 (fixed)
  3080                           ;	Chosen strategy is simple_byte
  3081  0603  0820               	movf	??_LCD_Set_Cursor,w
  3082  0604  3A02               	xorlw	2	; case 2
  3083  0605  1903               	skipnz
  3084  0606  2DD9               	goto	l2101
  3085  0607  3A01               	xorlw	1	; case 3
  3086  0608  1903               	skipnz
  3087  0609  2DE1               	goto	l2103
  3088  060A  3A07               	xorlw	7	; case 4
  3089  060B  1903               	skipnz
  3090  060C  2DE9               	goto	l2105
  3091  060D  2DF1               	goto	l2107
  3092  060E                     l252:
  3093  060E  0008               	return
  3094  060F                     __end_of_LCD_Set_Cursor:
  3095                           
  3096                           	psect	text13
  3097  02D1                     __ptext13:	
  3098 ;; *************** function _LCD_Init *****************
  3099 ;; Defined at:
  3100 ;;		line 87 in file "I2C_LCD.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  I2C_Add         1    wreg     unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  I2C_Add         1    0[BANK0 ] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, pclath, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3114 ;;      Params:         0       0       0       0       0
  3115 ;;      Locals:         0       1       0       0       0
  3116 ;;      Temps:          2       0       0       0       0
  3117 ;;      Totals:         2       1       0       0       0
  3118 ;;Total ram usage:        3 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    6
  3121 ;; This function calls:
  3122 ;;		_IO_Expander_Write
  3123 ;;		_LCD_CMD
  3124 ;; This function is called by:
  3125 ;;		_main
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _LCD_Init
  3131  02D1                     _LCD_Init:
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3135                           ;LCD_Init@I2C_Add stored from wreg
  3136  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3137  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3138  02D3  00A0               	movwf	LCD_Init@I2C_Add
  3139  02D4                     l2073:
  3140                           
  3141                           ;I2C_LCD.c: 87: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 88: {;I2C_LCD.c: 89:   i
      +                          2c_add = I2C_Add;
  3142  02D4  0820               	movf	LCD_Init@I2C_Add,w
  3143  02D5  00F8               	movwf	??_LCD_Init
  3144  02D6  0878               	movf	??_LCD_Init,w
  3145  02D7  00EE               	movwf	_i2c_add
  3146  02D8                     l2075:
  3147                           
  3148                           ;I2C_LCD.c: 90:   IO_Expander_Write(0x00);
  3149  02D8  3000               	movlw	0
  3150  02D9  120A  118A  262C  120A  118A  	fcall	_IO_Expander_Write
  3151  02DE                     l2077:
  3152                           
  3153                           ;I2C_LCD.c: 91:   _delay((unsigned long)((30)*(8000000/4000.0)));
  3154  02DE  304E               	movlw	78
  3155  02DF  00F9               	movwf	??_LCD_Init+1
  3156  02E0  30EB               	movlw	235
  3157  02E1  00F8               	movwf	??_LCD_Init
  3158  02E2                     u1527:
  3159  02E2  0BF8               	decfsz	??_LCD_Init,f
  3160  02E3  2AE2               	goto	u1527
  3161  02E4  0BF9               	decfsz	??_LCD_Init+1,f
  3162  02E5  2AE2               	goto	u1527
  3163                           
  3164                           ;I2C_LCD.c: 92:   LCD_CMD(0x03);
  3165  02E6  3003               	movlw	3
  3166  02E7  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3167  02EC                     l2079:
  3168                           
  3169                           ;I2C_LCD.c: 93:   _delay((unsigned long)((5)*(8000000/4000.0)));
  3170  02EC  300D               	movlw	13
  3171  02ED  00F9               	movwf	??_LCD_Init+1
  3172  02EE  30FB               	movlw	251
  3173  02EF  00F8               	movwf	??_LCD_Init
  3174  02F0                     u1537:
  3175  02F0  0BF8               	decfsz	??_LCD_Init,f
  3176  02F1  2AF0               	goto	u1537
  3177  02F2  0BF9               	decfsz	??_LCD_Init+1,f
  3178  02F3  2AF0               	goto	u1537
  3179  02F4  2AF5               	nop2
  3180  02F5                     l2081:
  3181                           
  3182                           ;I2C_LCD.c: 94:   LCD_CMD(0x03);
  3183  02F5  3003               	movlw	3
  3184  02F6  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3185                           
  3186                           ;I2C_LCD.c: 95:   _delay((unsigned long)((5)*(8000000/4000.0)));
  3187  02FB  300D               	movlw	13
  3188  02FC  00F9               	movwf	??_LCD_Init+1
  3189  02FD  30FB               	movlw	251
  3190  02FE  00F8               	movwf	??_LCD_Init
  3191  02FF                     u1547:
  3192  02FF  0BF8               	decfsz	??_LCD_Init,f
  3193  0300  2AFF               	goto	u1547
  3194  0301  0BF9               	decfsz	??_LCD_Init+1,f
  3195  0302  2AFF               	goto	u1547
  3196  0303  2B04               	nop2
  3197  0304                     l2083:
  3198                           
  3199                           ;I2C_LCD.c: 96:   LCD_CMD(0x03);
  3200  0304  3003               	movlw	3
  3201  0305  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3202  030A                     l2085:
  3203                           
  3204                           ;I2C_LCD.c: 97:   _delay((unsigned long)((5)*(8000000/4000.0)));
  3205  030A  300D               	movlw	13
  3206  030B  00F9               	movwf	??_LCD_Init+1
  3207  030C  30FB               	movlw	251
  3208  030D  00F8               	movwf	??_LCD_Init
  3209  030E                     u1557:
  3210  030E  0BF8               	decfsz	??_LCD_Init,f
  3211  030F  2B0E               	goto	u1557
  3212  0310  0BF9               	decfsz	??_LCD_Init+1,f
  3213  0311  2B0E               	goto	u1557
  3214  0312  2B13               	nop2
  3215                           
  3216                           ;I2C_LCD.c: 98:   LCD_CMD(0x02);
  3217  0313  3002               	movlw	2
  3218  0314  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3219  0319                     l2087:
  3220                           
  3221                           ;I2C_LCD.c: 99:   _delay((unsigned long)((5)*(8000000/4000.0)));
  3222  0319  300D               	movlw	13
  3223  031A  00F9               	movwf	??_LCD_Init+1
  3224  031B  30FB               	movlw	251
  3225  031C  00F8               	movwf	??_LCD_Init
  3226  031D                     u1567:
  3227  031D  0BF8               	decfsz	??_LCD_Init,f
  3228  031E  2B1D               	goto	u1567
  3229  031F  0BF9               	decfsz	??_LCD_Init+1,f
  3230  0320  2B1D               	goto	u1567
  3231  0321  2B22               	nop2
  3232  0322                     l2089:
  3233                           
  3234                           ;I2C_LCD.c: 100:   LCD_CMD(0x20 | (2 << 2));
  3235  0322  3028               	movlw	40
  3236  0323  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3237                           
  3238                           ;I2C_LCD.c: 101:   _delay((unsigned long)((50)*(8000000/4000.0)));
  3239  0328  3082               	movlw	130
  3240  0329  00F9               	movwf	??_LCD_Init+1
  3241  032A  30DD               	movlw	221
  3242  032B  00F8               	movwf	??_LCD_Init
  3243  032C                     u1577:
  3244  032C  0BF8               	decfsz	??_LCD_Init,f
  3245  032D  2B2C               	goto	u1577
  3246  032E  0BF9               	decfsz	??_LCD_Init+1,f
  3247  032F  2B2C               	goto	u1577
  3248  0330  2B31               	nop2
  3249  0331                     l2091:
  3250                           
  3251                           ;I2C_LCD.c: 102:   LCD_CMD(0x0C);
  3252  0331  300C               	movlw	12
  3253  0332  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3254  0337                     l2093:
  3255                           
  3256                           ;I2C_LCD.c: 103:   _delay((unsigned long)((50)*(8000000/4000.0)));
  3257  0337  3082               	movlw	130
  3258  0338  00F9               	movwf	??_LCD_Init+1
  3259  0339  30DD               	movlw	221
  3260  033A  00F8               	movwf	??_LCD_Init
  3261  033B                     u1587:
  3262  033B  0BF8               	decfsz	??_LCD_Init,f
  3263  033C  2B3B               	goto	u1587
  3264  033D  0BF9               	decfsz	??_LCD_Init+1,f
  3265  033E  2B3B               	goto	u1587
  3266  033F  2B40               	nop2
  3267                           
  3268                           ;I2C_LCD.c: 104:   LCD_CMD(0x01);
  3269  0340  3001               	movlw	1
  3270  0341  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3271  0346                     l2095:
  3272                           
  3273                           ;I2C_LCD.c: 105:   _delay((unsigned long)((50)*(8000000/4000.0)));
  3274  0346  3082               	movlw	130
  3275  0347  00F9               	movwf	??_LCD_Init+1
  3276  0348  30DD               	movlw	221
  3277  0349  00F8               	movwf	??_LCD_Init
  3278  034A                     u1597:
  3279  034A  0BF8               	decfsz	??_LCD_Init,f
  3280  034B  2B4A               	goto	u1597
  3281  034C  0BF9               	decfsz	??_LCD_Init+1,f
  3282  034D  2B4A               	goto	u1597
  3283  034E  2B4F               	nop2
  3284  034F                     l2097:
  3285                           
  3286                           ;I2C_LCD.c: 106:   LCD_CMD(0x04 | 0x02);
  3287  034F  3006               	movlw	6
  3288  0350  120A  118A  2649  120A  118A  	fcall	_LCD_CMD
  3289                           
  3290                           ;I2C_LCD.c: 107:   _delay((unsigned long)((50)*(8000000/4000.0)));
  3291  0355  3082               	movlw	130
  3292  0356  00F9               	movwf	??_LCD_Init+1
  3293  0357  30DD               	movlw	221
  3294  0358  00F8               	movwf	??_LCD_Init
  3295  0359                     u1607:
  3296  0359  0BF8               	decfsz	??_LCD_Init,f
  3297  035A  2B59               	goto	u1607
  3298  035B  0BF9               	decfsz	??_LCD_Init+1,f
  3299  035C  2B59               	goto	u1607
  3300  035D  2B5E               	nop2
  3301  035E                     l225:
  3302  035E  0008               	return
  3303  035F                     __end_of_LCD_Init:
  3304                           
  3305                           	psect	text14
  3306  0649                     __ptext14:	
  3307 ;; *************** function _LCD_CMD *****************
  3308 ;; Defined at:
  3309 ;;		line 127 in file "I2C_LCD.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  CMD             1    wreg     unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  CMD             1    7[COMMON] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, pclath, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         1       0       0       0       0
  3325 ;;      Temps:          1       0       0       0       0
  3326 ;;      Totals:         2       0       0       0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    5
  3330 ;; This function calls:
  3331 ;;		_LCD_Write_4Bit
  3332 ;; This function is called by:
  3333 ;;		_LCD_Init
  3334 ;;		_LCD_Set_Cursor
  3335 ;;		_LCD_SL
  3336 ;;		_LCD_SR
  3337 ;;		_LCD_Clear
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _LCD_CMD
  3343  0649                     _LCD_CMD:
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3347                           ;LCD_CMD@CMD stored from wreg
  3348  0649  00F7               	movwf	LCD_CMD@CMD
  3349  064A                     l2041:
  3350                           
  3351                           ;I2C_LCD.c: 127: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 128: {;I2C_LCD.c: 129:   RS 
      +                          = 0;
  3352  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3353  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3354  064C  01E1               	clrf	_RS
  3355  064D                     l2043:
  3356                           
  3357                           ;I2C_LCD.c: 130:   LCD_Write_4Bit(CMD & 0xF0);
  3358  064D  0877               	movf	LCD_CMD@CMD,w
  3359  064E  39F0               	andlw	240
  3360  064F  120A  118A  2681  120A  118A  	fcall	_LCD_Write_4Bit
  3361  0654                     l2045:
  3362                           
  3363                           ;I2C_LCD.c: 131:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  3364  0654  0877               	movf	LCD_CMD@CMD,w
  3365  0655  00F6               	movwf	??_LCD_CMD
  3366  0656  3003               	movlw	3
  3367  0657                     u1195:
  3368  0657  1003               	clrc
  3369  0658  0DF6               	rlf	??_LCD_CMD,f
  3370  0659  3EFF               	addlw	-1
  3371  065A  1D03               	skipz
  3372  065B  2E57               	goto	u1195
  3373  065C  1003               	clrc
  3374  065D  0D76               	rlf	??_LCD_CMD,w
  3375  065E  39F0               	andlw	240
  3376  065F  120A  118A  2681  120A  118A  	fcall	_LCD_Write_4Bit
  3377  0664                     l234:
  3378  0664  0008               	return
  3379  0665                     __end_of_LCD_CMD:
  3380                           
  3381                           	psect	text15
  3382  0681                     __ptext15:	
  3383 ;; *************** function _LCD_Write_4Bit *****************
  3384 ;; Defined at:
  3385 ;;		line 118 in file "I2C_LCD.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  Nibble          1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  Nibble          1    5[COMMON] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, pclath, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3399 ;;      Params:         0       0       0       0       0
  3400 ;;      Locals:         1       0       0       0       0
  3401 ;;      Temps:          1       0       0       0       0
  3402 ;;      Totals:         2       0       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    4
  3406 ;; This function calls:
  3407 ;;		_IO_Expander_Write
  3408 ;; This function is called by:
  3409 ;;		_LCD_CMD
  3410 ;;		_LCD_Write_Char
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           
  3415                           ;psect for function _LCD_Write_4Bit
  3416  0681                     _LCD_Write_4Bit:
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  3420                           ;LCD_Write_4Bit@Nibble stored from wreg
  3421  0681  00F5               	movwf	LCD_Write_4Bit@Nibble
  3422  0682                     l1983:
  3423                           
  3424                           ;I2C_LCD.c: 118: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 119: {;I2C_LCD.c: 
      +                          121:   Nibble |= RS;
  3425  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0683  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0684  0861               	movf	_RS,w
  3428  0685  00F4               	movwf	??_LCD_Write_4Bit
  3429  0686  0874               	movf	??_LCD_Write_4Bit,w
  3430  0687  04F5               	iorwf	LCD_Write_4Bit@Nibble,f
  3431  0688                     l1985:
  3432                           
  3433                           ;I2C_LCD.c: 122:   IO_Expander_Write(Nibble | 0x04);
  3434  0688  0875               	movf	LCD_Write_4Bit@Nibble,w
  3435  0689  3804               	iorlw	4
  3436  068A  120A  118A  262C  120A  118A  	fcall	_IO_Expander_Write
  3437  068F                     l1987:
  3438                           
  3439                           ;I2C_LCD.c: 123:   IO_Expander_Write(Nibble & 0xFB);
  3440  068F  0875               	movf	LCD_Write_4Bit@Nibble,w
  3441  0690  39FB               	andlw	251
  3442  0691  120A  118A  262C  120A  118A  	fcall	_IO_Expander_Write
  3443                           
  3444                           ;I2C_LCD.c: 124:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  3445  0696  3021               	movlw	33
  3446  0697  00F4               	movwf	??_LCD_Write_4Bit
  3447  0698                     u1617:
  3448  0698  0BF4               	decfsz	??_LCD_Write_4Bit,f
  3449  0699  2E98               	goto	u1617
  3450  069A                     l231:
  3451  069A  0008               	return
  3452  069B                     __end_of_LCD_Write_4Bit:
  3453                           
  3454                           	psect	text16
  3455  062C                     __ptext16:	
  3456 ;; *************** function _IO_Expander_Write *****************
  3457 ;; Defined at:
  3458 ;;		line 110 in file "I2C_LCD.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  Data            1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  Data            1    3[COMMON] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       0       0       0       0
  3473 ;;      Locals:         1       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0
  3475 ;;      Totals:         1       0       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    3
  3479 ;; This function calls:
  3480 ;;		_I2C_Master_Start
  3481 ;;		_I2C_Master_Stop
  3482 ;;		_I2C_Master_Write
  3483 ;; This function is called by:
  3484 ;;		_LCD_Init
  3485 ;;		_LCD_Write_4Bit
  3486 ;;		_Backlight
  3487 ;;		_noBacklight
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _IO_Expander_Write
  3493  062C                     _IO_Expander_Write:
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  3497                           ;IO_Expander_Write@Data stored from wreg
  3498  062C  00F3               	movwf	IO_Expander_Write@Data
  3499  062D                     l1981:
  3500                           
  3501                           ;I2C_LCD.c: 110: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 111: {;I2C_LCD.c:
      +                           112:   I2C_Master_Start();
  3502  062D  120A  118A  26E5  120A  118A  	fcall	_I2C_Master_Start
  3503                           
  3504                           ;I2C_LCD.c: 113:   I2C_Master_Write(i2c_add);
  3505  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0634  086E               	movf	_i2c_add,w
  3508  0635  120A  118A  26B2  120A  118A  	fcall	_I2C_Master_Write
  3509                           
  3510                           ;I2C_LCD.c: 114:   I2C_Master_Write(Data | BackLight_State);
  3511  063A  0873               	movf	IO_Expander_Write@Data,w
  3512  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3513  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3514  063D  046F               	iorwf	_BackLight_State,w
  3515  063E  120A  118A  26B2  120A  118A  	fcall	_I2C_Master_Write
  3516                           
  3517                           ;I2C_LCD.c: 115:   I2C_Master_Stop();
  3518  0643  120A  118A  26DC  120A  118A  	fcall	_I2C_Master_Stop
  3519  0648                     l228:
  3520  0648  0008               	return
  3521  0649                     __end_of_IO_Expander_Write:
  3522                           
  3523                           	psect	text17
  3524  06B2                     __ptext17:	
  3525 ;; *************** function _I2C_Master_Write *****************
  3526 ;; Defined at:
  3527 ;;		line 63 in file "I2C_LCD.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  data            1    wreg     unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  data            1    2[COMMON] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      unsigned char 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         0       0       0       0       0
  3542 ;;      Locals:         1       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0
  3544 ;;      Totals:         1       0       0       0       0
  3545 ;;Total ram usage:        1 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    2
  3548 ;; This function calls:
  3549 ;;		_I2C_Master_Wait
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;;		_IO_Expander_Write
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _I2C_Master_Write
  3558  06B2                     _I2C_Master_Write:
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3562                           ;I2C_Master_Write@data stored from wreg
  3563  06B2  00F2               	movwf	I2C_Master_Write@data
  3564  06B3                     l1973:
  3565                           
  3566                           ;I2C_LCD.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 64: {;I2C_
      +                          LCD.c: 65:     I2C_Master_Wait();
  3567  06B3  120A  118A  26CF  120A  118A  	fcall	_I2C_Master_Wait
  3568  06B8                     l1975:
  3569                           
  3570                           ;I2C_LCD.c: 66:     SSPBUF = data;
  3571  06B8  0872               	movf	I2C_Master_Write@data,w
  3572  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3573  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3574  06BB  0093               	movwf	19	;volatile
  3575  06BC                     l213:	
  3576                           ;I2C_LCD.c: 67:     while(!SSPIF);
  3577                           
  3578  06BC  1D8C               	btfss	12,3	;volatile
  3579  06BD  2EBF               	goto	u1081
  3580  06BE  2EC0               	goto	u1080
  3581  06BF                     u1081:
  3582  06BF  2EBC               	goto	l213
  3583  06C0                     u1080:
  3584  06C0                     l215:
  3585                           
  3586                           ;I2C_LCD.c: 68:  SSPIF = 0;
  3587  06C0  118C               	bcf	12,3	;volatile
  3588  06C1                     l216:	
  3589                           ;I2C_LCD.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3590                           
  3591  06C1  0008               	return
  3592  06C2                     __end_of_I2C_Master_Write:
  3593                           
  3594                           	psect	text18
  3595  06DC                     __ptext18:	
  3596 ;; *************** function _I2C_Master_Stop *****************
  3597 ;; Defined at:
  3598 ;;		line 43 in file "I2C_LCD.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    2
  3619 ;; This function calls:
  3620 ;;		_I2C_Master_Wait
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;;		_IO_Expander_Write
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function _I2C_Master_Stop
  3629  06DC                     _I2C_Master_Stop:
  3630  06DC                     l1977:	
  3631                           ;incstack = 0
  3632                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3633                           
  3634                           
  3635                           ;I2C_LCD.c: 45:     I2C_Master_Wait();
  3636  06DC  120A  118A  26CF  120A  118A  	fcall	_I2C_Master_Wait
  3637  06E1                     l1979:
  3638                           
  3639                           ;I2C_LCD.c: 46:     PEN = 1;
  3640  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  3641  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  3642  06E3  1511               	bsf	17,2	;volatile
  3643  06E4                     l204:
  3644  06E4  0008               	return
  3645  06E5                     __end_of_I2C_Master_Stop:
  3646                           
  3647                           	psect	text19
  3648  06E5                     __ptext19:	
  3649 ;; *************** function _I2C_Master_Start *****************
  3650 ;; Defined at:
  3651 ;;		line 31 in file "I2C_LCD.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0
  3668 ;;      Totals:         0       0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    2
  3672 ;; This function calls:
  3673 ;;		_I2C_Master_Wait
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;;		_IO_Expander_Write
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _I2C_Master_Start
  3682  06E5                     _I2C_Master_Start:
  3683  06E5                     l1969:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3686                           
  3687                           
  3688                           ;I2C_LCD.c: 33:     I2C_Master_Wait();
  3689  06E5  120A  118A  26CF  120A  118A  	fcall	_I2C_Master_Wait
  3690  06EA                     l1971:
  3691                           
  3692                           ;I2C_LCD.c: 34:     SEN = 1;
  3693  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3694  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  3695  06EC  1411               	bsf	17,0	;volatile
  3696  06ED                     l198:
  3697  06ED  0008               	return
  3698  06EE                     __end_of_I2C_Master_Start:
  3699                           
  3700                           	psect	text20
  3701  069B                     __ptext20:	
  3702 ;; *************** function _I2C_Read_Byte *****************
  3703 ;; Defined at:
  3704 ;;		line 72 in file "I2C_LCD.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      unsigned char 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0
  3721 ;;      Totals:         0       0       0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    2
  3725 ;; This function calls:
  3726 ;;		_I2C_Master_Wait
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _I2C_Read_Byte
  3734  069B                     _I2C_Read_Byte:
  3735  069B                     l2185:	
  3736                           ;incstack = 0
  3737                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  3738                           
  3739                           
  3740                           ;I2C_LCD.c: 75:  I2C_Master_Wait();
  3741  069B  120A  118A  26CF  120A  118A  	fcall	_I2C_Master_Wait
  3742  06A0                     l2187:
  3743                           
  3744                           ;I2C_LCD.c: 76:     RCEN = 1;
  3745  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3746  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  3747  06A2  1591               	bsf	17,3	;volatile
  3748  06A3                     l219:	
  3749                           ;I2C_LCD.c: 77:  while(!SSPIF);
  3750                           
  3751  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3752  06A4  1D8C               	btfss	12,3	;volatile
  3753  06A5  2EA7               	goto	u1371
  3754  06A6  2EA8               	goto	u1370
  3755  06A7                     u1371:
  3756  06A7  2EA3               	goto	l219
  3757  06A8                     u1370:
  3758  06A8                     l221:
  3759                           
  3760                           ;I2C_LCD.c: 78:  SSPIF = 0;
  3761  06A8  118C               	bcf	12,3	;volatile
  3762  06A9                     l2189:
  3763                           
  3764                           ;I2C_LCD.c: 79:     I2C_Master_Wait();
  3765  06A9  120A  118A  26CF  120A  118A  	fcall	_I2C_Master_Wait
  3766  06AE                     l2191:
  3767                           
  3768                           ;I2C_LCD.c: 80:     return SSPBUF;
  3769  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3770  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3771  06B0  0813               	movf	19,w	;volatile
  3772  06B1                     l222:
  3773  06B1  0008               	return
  3774  06B2                     __end_of_I2C_Read_Byte:
  3775                           
  3776                           	psect	text21
  3777  06CF                     __ptext21:	
  3778 ;; *************** function _I2C_Master_Wait *****************
  3779 ;; Defined at:
  3780 ;;		line 26 in file "I2C_LCD.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3794 ;;      Params:         0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    1
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_I2C_Master_Start
  3805 ;;		_I2C_Master_Stop
  3806 ;;		_I2C_Master_Write
  3807 ;;		_I2C_Read_Byte
  3808 ;;		_I2C_Master_RepeatedStart
  3809 ;;		_I2C_ACK
  3810 ;;		_I2C_NACK
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function _I2C_Master_Wait
  3816  06CF                     _I2C_Master_Wait:
  3817  06CF                     l1965:	
  3818                           ;incstack = 0
  3819                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3820                           
  3821  06CF                     l192:	
  3822                           ;I2C_LCD.c: 28:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3823                           
  3824  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3825  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  3826  06D1  1914               	btfsc	20,2	;volatile
  3827  06D2  2ED4               	goto	u1061
  3828  06D3  2ED5               	goto	u1060
  3829  06D4                     u1061:
  3830  06D4  2ECF               	goto	l192
  3831  06D5                     u1060:
  3832  06D5                     l1967:
  3833  06D5  0811               	movf	17,w	;volatile
  3834  06D6  391F               	andlw	31
  3835  06D7  1D03               	btfss	3,2
  3836  06D8  2EDA               	goto	u1071
  3837  06D9  2EDB               	goto	u1070
  3838  06DA                     u1071:
  3839  06DA  2ECF               	goto	l192
  3840  06DB                     u1070:
  3841  06DB                     l195:
  3842  06DB  0008               	return
  3843  06DC                     __end_of_I2C_Master_Wait:
  3844                           
  3845                           	psect	text22
  3846  0665                     __ptext22:	
  3847 ;; *************** function _isr *****************
  3848 ;; Defined at:
  3849 ;;		line 49 in file "main_master.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		status,2
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3863 ;;      Params:         0       0       0       0       0
  3864 ;;      Locals:         0       0       0       0       0
  3865 ;;      Temps:          2       0       0       0       0
  3866 ;;      Totals:         2       0       0       0       0
  3867 ;;Total ram usage:        2 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		Interrupt level 1
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _isr
  3878  0665                     _isr:
  3879  0665                     i1l1811:
  3880                           
  3881                           ;main_master.c: 51:         val1 = stat;
  3882  0665  1C0B               	btfss	11,0	;volatile
  3883  0666  2E68               	goto	u102_21
  3884  0667  2E69               	goto	u102_20
  3885  0668                     u102_21:
  3886  0668  2E7A               	goto	i1l119
  3887  0669                     u102_20:
  3888  0669                     i1l1813:
  3889                           
  3890                           ;main_master.c: 52:         val2 = temp;;main_master.c: 53: 
  3891  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3892  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3893  066B  1806               	btfsc	6,0	;volatile
  3894  066C  2E6E               	goto	u103_21
  3895  066D  2E6F               	goto	u103_20
  3896  066E                     u103_21:
  3897  066E  2E73               	goto	i1l116
  3898  066F                     u103_20:
  3899  066F                     i1l1815:
  3900                           
  3901                           ;main_master.c: 54:         LCD_Set_Cursor(1, 1);;main_master.c: 55:         LCD_Write_S
      +                          tring("CONT: ENC: TEMP:");
  3902  066F  01EA               	clrf	_stat
  3903  0670  0AEA               	incf	_stat,f
  3904                           
  3905                           ;main_master.c: 56:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3906  0671  1488               	bsf	8,1	;volatile
  3907                           
  3908                           ;main_master.c: 58:         sprintf(buffer, "%d ", val);
  3909  0672  2E79               	goto	i1l1821
  3910  0673                     i1l116:	
  3911                           ;main_master.c: 59:         sprintf(buffer2, "%d ", val2);
  3912                           
  3913  0673  1C06               	btfss	6,0	;volatile
  3914  0674  2E76               	goto	u104_21
  3915  0675  2E77               	goto	u104_20
  3916  0676                     u104_21:
  3917  0676  2E79               	goto	i1l1821
  3918  0677                     u104_20:
  3919  0677                     i1l1817:
  3920                           
  3921                           ;main_master.c: 60:         LCD_Set_Cursor(2,2);;main_master.c: 61:         LCD_Write_St
      +                          ring(buffer);
  3922  0677  1088               	bcf	8,1	;volatile
  3923  0678                     i1l1819:
  3924                           
  3925                           ;main_master.c: 62:         LCD_Set_Cursor(2,13);
  3926  0678  01EA               	clrf	_stat
  3927  0679                     i1l1821:
  3928                           
  3929                           ;main_master.c: 64: 
  3930  0679  100B               	bcf	11,0	;volatile
  3931  067A                     i1l119:
  3932  067A  0871               	movf	??_isr+1,w
  3933  067B  008A               	movwf	10
  3934  067C  0E70               	swapf	??_isr,w
  3935  067D  0083               	movwf	3
  3936  067E  0EFE               	swapf	btemp,f
  3937  067F  0E7E               	swapf	btemp,w
  3938  0680  0009               	retfie
  3939  0681                     __end_of_isr:
  3940  007E                     btemp	set	126	;btemp
  3941  007E                     wtemp0	set	126
  3942                           
  3943                           	psect	intentry
  3944  0004                     __pintentry:	
  3945                           ;incstack = 0
  3946                           ; Regs used in _isr: [status,2]
  3947                           
  3948  0004                     interrupt_function:
  3949  007E                     saved_w	set	btemp
  3950  0004  00FE               	movwf	btemp
  3951  0005  0E03               	swapf	3,w
  3952  0006  00F0               	movwf	??_isr
  3953  0007  080A               	movf	10,w
  3954  0008  00F1               	movwf	??_isr+1
  3955  0009  120A  118A  2E65   	ljmp	_isr
  3956                           
  3957                           	psect	config
  3958                           
  3959                           ;Config register CONFIG1 @ 0x2007
  3960                           ;	Oscillator Selection bits
  3961                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3962                           ;	Watchdog Timer Enable bit
  3963                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3964                           ;	Power-up Timer Enable bit
  3965                           ;	PWRTE = OFF, PWRT disabled
  3966                           ;	RE3/MCLR pin function select bit
  3967                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3968                           ;	Code Protection bit
  3969                           ;	CP = OFF, Program memory code protection is disabled
  3970                           ;	Data Code Protection bit
  3971                           ;	CPD = OFF, Data memory code protection is disabled
  3972                           ;	Brown Out Reset Selection bits
  3973                           ;	BOREN = OFF, BOR disabled
  3974                           ;	Internal External Switchover bit
  3975                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3976                           ;	Fail-Safe Clock Monitor Enabled bit
  3977                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3978                           ;	Low Voltage Programming Enable bit
  3979                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3980                           ;	In-Circuit Debugger Mode bit
  3981                           ;	DEBUG = 0x1, unprogrammed default
  3982  2007                     	org	8199
  3983  2007  20D4               	dw	8404
  3984                           
  3985                           ;Config register CONFIG2 @ 0x2008
  3986                           ;	Brown-out Reset Selection bit
  3987                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3988                           ;	Flash Program Memory Self Write Enable bits
  3989                           ;	WRT = OFF, Write protection off
  3990  2008                     	org	8200
  3991  2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    10
    Data        1
    BSS         15
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      80
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[4]), STR_4(CODE[5]), main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _main->_LCD_Write_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _Text->_division
    _division->___awmod
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _Text->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    5424
                                             19 BANK0     46    46      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                               _Text
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1674
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4       0
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Text                                                 2     2      0    1467
                                              7 BANK0      2     2      0
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     769
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     884
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     282
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              4 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _I2C_Read_Byte
     _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _Text
     _division
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5C      12        0.0%
ABS                  0      0      5C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Sep 05 14:25:55 2021

                         pc 0002                          _R1 006D                          _R2 006C  
                        _RS 0061                ___awdiv@sign 0021                          _pr 0068  
                        fsr 0004                         l204 06E4                         l132 04D8  
                       l221 06A8                         l213 06BC                         l222 06B1  
                       l215 06C0                         l231 069A                         l135 02D0  
                       l216 06C1                         l225 035E                         l234 0664  
                       l138 03C9                         l219 06A3                         l243 051E  
                       l228 0648                         l252 060E                         l237 062B  
                       l192 06CF                         l195 06DB                         l189 06CE  
                       l198 06ED                         l534 0432                         l377 023B  
                       l547 048B                         l653 0562                         l663 059E  
                       _PEN 048A                         u710 0460                         u711 045F  
                       u720 046A                         u800 0539                         u721 0469  
                       u705 0452                         u801 0538                         u740 047D  
                       u820 054A                         _SEN 0488                         u741 047C  
                       u725 0466                         u821 0549                         u750 0482  
                       u670 0438                         u751 0481                         u735 0471  
                       u671 0437                         u815 053A                         u680 0443  
                       u840 055E                         u681 0442                         u841 055D  
                       u825 0546                         u690 044E                         u691 044D  
                       u835 0552                         u780 0527                         u781 0526  
                       u795 052B                         _dec 0063                         _cen 0064  
                       _isr 0665                         fsr0 0004                         _uni 0062  
                       indf 0000                ___awmod@sign 0078             __end_of_LCD_CMD 0665  
               main@buffer2 004A         LCD_Write_String@Str 0078              _LCD_Set_Cursor 05D7  
                      l2001 03E1                        l2011 03F7                        l2003 03E5  
                      l2101 05D9                        l2021 0417                        l2013 03FB  
                      l2005 03E7                        l2103 05E1                        l2023 041E  
                      l2015 03FF                        l2007 03ED                        l2041 064A  
                      l2105 05E9                        l2121 0502                        l2017 0410  
                      l2009 03F0                        l2025 0424                        l2033 0360  
                      l2201 0258                        l2043 064D                        l2107 05F1  
                      l2115 04D9                        l2027 0429                        l2019 0416  
                      l2035 03BA                        l2211 0286                        l2203 025C  
                      l2051 0563                        l2131 016C                        l2123 0155  
                      l2045 0654                        l2109 05F9                        l2117 04DE  
                      l2029 042E                        l1501 0438                        l2037 03BF  
                      l2213 028A                        l2205 0266                        l2061 057D  
                      l2053 056B                        l2141 0196                        l2125 015A  
                      l2221 0039                        l2047 0610                        l2119 04FA  
                      l1511 044E                        l1503 043D                        l2039 03C4  
                      l2215 0294                        l2207 026A                        l2063 0587  
                      l2055 056E                        l2143 019A                        l2135 016D  
                      l2127 0160                        l2231 004E                        l2223 003D  
                      l2081 02F5                        l2073 02D4                        l2049 0614  
                      l1521 046A                        l1513 0451                        l1505 043F  
                      l2209 027C                        l2065 058D                        l2057 0575  
                      l2161 01D1                        l2153 01A5                        l2145 019E  
                      l2137 018A                        l2129 0167                        l2241 008C  
                      l2233 0056                        l2225 0042                        l2217 0028  
                      l2091 0331                        l2083 0304                        l2075 02D8  
                      l1531 0487                        l1523 0470                        l1515 0458  
                      l1507 0443                        l1611 048C                        l2067 0594  
                      l2059 0579                        l2171 0218                        l2163 01D8  
                      l2147 01A3                        l2139 0192                        l2251 00C9  
                      l2243 009F                        l2235 005F                        l2227 0046  
                      l2219 0033                        l2093 0337                        l2085 030A  
                      l2077 02DE                        l1525 0477                        l1517 045C  
                      l1509 0448                        l1541 06CC                        l1621 04A4  
                      l1613 0492                        l2069 059A                        l2173 021C  
                      l2165 01DC                        l2157 01C1                        l2261 00F7  
                      l2253 00D0                        l2245 00AB                        l2237 006D  
                      l2229 004A                        l2191 06AE                        l2095 0346  
                      l2087 0319                        l2079 02EC                        l1519 0460  
                      l1527 047D                        l1543 06CD                        l1535 06C2  
                      l1631 04AC                        l1623 04A7                        l1615 0496  
                      l2167 01E1                        l2159 01CB                        l2175 0225  
                      l2271 0120                        l2263 00FC                        l2255 00DA  
                      l2247 00B4                        l2239 0079                        l2185 069B  
                      l2097 034F                        l2089 0322                        l2361 0603  
                      l1529 0482                        l1537 06C6                        l1641 04B9  
                      l1633 04AD                        l1625 04A9                        l1617 0499  
                      l2169 0211                        l2177 0237                        l2281 0149  
                      l2273 0125                        l2265 0102                        l2257 00E4  
                      l2249 00C0                        l2187 06A0                        l2099 05D8  
                      l2195 023C                        l1539 06C9                        l1651 04C2  
                      l1643 04BA                        l1635 04B0                        l1627 04AA  
                      l1619 049A                        l1571 0531                        l1563 051F  
                      l2275 012B                        l2267 010C                        l2259 00EE  
                      l2189 06A9                        l2197 0246                        l1661 04C9  
                      l1653 04C3                        l1645 04BB                        l1637 04B4  
                      l1629 04AB                        l1581 0551                        l1573 0535  
                      l1565 0521                        l2277 0135                        l2269 0111  
                      l2199 024E                        l1663 04CA                        l1655 04C4  
                      l1647 04BE                        l1639 04B6                        l1583 0558  
                      l1575 0539                        l1567 0527                        l2359 017F  
                      l2279 013A                        l1497 0433                        l1665 04CB  
                      l1657 04C5                        l1649 04BF                        l1577 054A  
                      l1569 052A                        l1585 055E                        l1499 0434  
                      l1659 04C8                        l1579 0550                        l1971 06EA  
                      l1965 06CF                        l1973 06B3                        l1981 062D  
                      l1967 06D5                        l1975 06B8                        l1983 0682  
                      l1991 03CD                        l1969 06E5                        l1977 06DC  
                      l1985 0688                        l1993 03D1                        l1979 06E1  
                      l1987 068F                        l1995 03D6                        l1997 03D8  
                      l1989 03CA                        l1999 03DC                        ?_isr 0070  
                      STR_1 05B9                        STR_2 05CF                        STR_3 05CF  
                      STR_4 05CA                        STR_5 05D3                        u1100 03DC  
                      u1101 03DB                        u1110 03ED                        u1111 03EC  
                      u1130 03FF                        u1210 056B                        u1131 03FE  
                      u1211 056A                        u1060 06D5                        u1300 0160  
                      u1061 06D4                        u1205 061E                        u1125 03F1  
                      u1301 015F                        u1070 06DB                        u1150 0410  
                      u1230 057D                        u1310 019A                        u1071 06DA  
                      u1151 040F                        u1231 057C                        u1311 0199  
                      u1080 06C0                        u1240 0587                        u1320 01C0  
                      u1081 06BF                        u1145 0400                        u1241 0586  
                      u1225 056F                        u1321 01BF                        u1170 0424  
                      u1090 03D1                        u1330 01CB                        u1171 0423  
                      u1155 040C                        u1091 03D0                        u1331 01CA  
                      u1180 0429                        u1260 059A                        u1340 01D1  
                      u1181 0428                        u1165 0418                        u1261 0599  
                      u1245 0583                        u1341 01D0                        u1325 01BC  
                      u1270 04E8                        u1350 0225                        u1255 058E  
                      u1351 0224                        u1407 0119                        u1280 050C  
                      u1360 0237                        u1361 0236                        u1417 0142  
                      u1370 06A8                        u1290 051E                        u1371 06A7  
                      u1195 0657                        u1291 051D                        u1507 02BE  
                      u1427 0242                        u1380 00D0                        u1517 02CC  
                      u1437 0254                        u1381 00CF                        u1607 0359  
                      u1527 02E2                        u1447 0262                        u1617 0698  
                      u1537 02F0                        u1457 0270                        u1547 02FF  
                      u1467 0282                        u1557 030E                        u1477 0290  
                      u1397 0067                        u1567 031D                        u1487 02A2  
                      u1577 032C                        u1497 02B0                        u1587 033B  
                      u1597 034A                        _RBIF 0058                        _RCEN 048B  
                      _RSEN 0489                        _TXIF 0064                        _WPUB 0095  
                      _Text 023C           ?_LCD_Write_String 0078                        _cont 0069  
                      _main 0028                        _temp 006B                        _stat 006A  
                      btemp 007E                        start 000C          ??_LCD_Write_String 0020  
      LCD_Write_4Bit@Nibble 0075                       ??_isr 0070            __end_of_LCD_Init 035F  
          ?_I2C_Master_Init 0072            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_Text 0070                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___awdiv 0433             __end_of___awmod 048C  
                     _ANSEL 0188             ___awdiv@divisor 0072             __end_of___lwdiv 0563  
                     i1l116 0673                       i1l119 067A             __end_of___lwmod 059F  
           ___awdiv@counter 0020                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISD 0088  
                     _SSPIF 0063                       _TXREG 0019      __end_of_LCD_Set_Cursor 060F  
           __end_of_dpowers 05B9      __size_of_I2C_Read_Byte 0017                       _valor 0067  
                     _setup 048C                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 023C              _LCD_Write_4Bit 0681  
            _LCD_Write_Char 060F             __initialization 000F                __end_of_Text 02D1  
              __end_of_main 0152           _IO_Expander_Write 062C          ?_IO_Expander_Write 0070  
                    ??_Text 0027                      ??_main 0033                   ??_LCD_CMD 0076  
         ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070         ??_IO_Expander_Write 0073  
           ?_LCD_Set_Cursor 0078          ??_I2C_Master_Start 0072          ??_I2C_Master_Write 0072  
          ___awdiv@dividend 0074                      ?_setup 0070                      _ANSELH 0189  
                    u102_20 0669                      u102_21 0668                      u103_20 066F  
                    u103_21 066E                      u104_20 0677                      u104_21 0676  
                    i1l1811 0665                      i1l1821 0679                      i1l1813 0669  
                    i1l1815 066F                      i1l1817 0677                      i1l1819 0678  
                    _SPBRGH 009A                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
    __end_of_LCD_Write_4Bit 069B      __end_of_LCD_Write_Char 062C   __end_of_IO_Expander_Write 0649  
             _I2C_Read_Byte 069B            __end_of_division 03CA                   ??___awdiv 0076  
                 ??___awmod 0076                   ??___lwdiv 0076                   ??___lwmod 0024  
          ___awdiv@quotient 0022             ___awmod@divisor 0072             ___awmod@counter 0077  
                    saved_w 007E                   ??_sprintf 0029     __end_of__initialization 0024  
                 ?_LCD_Init 0070             ?_LCD_Write_4Bit 0070             ?_LCD_Write_Char 0070  
            ?_I2C_Read_Byte 0070              __pcstackCOMMON 0070                __pidataBANK0 06EE  
             __end_of_setup 04D9               division@valor 0079              _OPTION_REGbits 0081  
                   ??_setup 0076                  __pbssBANK0 0061                  ??_LCD_Init 0078  
__size_of_IO_Expander_Write 001D                  __pmaintext 0028                  __pintentry 0004  
                   _ACKSTAT 048E   __size_of_LCD_Write_String 0046                     _LCD_CMD 0649  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 059F  
                 ?_division 0070                     _i2c_add 006E             ??_I2C_Read_Byte 0072  
                   ___awdiv 03CA                     ___awmod 0433                     ___lwdiv 051F  
                   ___lwmod 0563                     _decenas 007B            ??_LCD_Set_Cursor 0020  
                   __ptext1 0152                     __ptext2 0563                     __ptext3 051F  
                   __ptext4 048C                     __ptext5 06C2                     __ptext6 023C  
                   __ptext7 035F                     __ptext8 0433                     __ptext9 03CA  
                   _dpowers 05AF                __size_of_isr 001C            ___awmod@dividend 0074  
  __size_of_I2C_Master_Init 000D                     _residuo 0065    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009                     _sprintf 0152                     main@val 0060  
      end_of_initialization 0024                  ??_division 0024   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010                   _RCSTAbits 0018                   _PORTBbits 0006  
                 _PORTDbits 0008                  LCD_CMD@CMD 0077                   _TRISBbits 0086  
                 _TRISCbits 0087            ??_LCD_Write_4Bit 0074           LCD_Write_String@i 0023  
          ??_LCD_Write_Char 0076                  main@buffer 0036                   _TXSTAbits 0098  
         __size_of_LCD_Init 008E            _LCD_Write_String 04D9                 _BAUDCTLbits 0187  
       start_initialization 000F                 __end_of_isr 0681           ??_I2C_Master_Init 0076  
         ??_I2C_Master_Wait 0072           ??_I2C_Master_Stop 0072                 __pdataBANK0 006F  
                  ?_LCD_CMD 0070                 __pbssCOMMON 007A                   ___latbits 0002  
             __pcstackBANK0 0020                 sprintf@flag 002D           __size_of_division 006B  
               sprintf@prec 002E                   __pnvBANK0 006E            _I2C_Master_Start 06E5  
          _I2C_Master_Write 06B2            ___lwdiv@dividend 0074       IO_Expander_Write@Data 0073  
                  ?___awdiv 0072                    ?___awmod 0072                    ?___lwdiv 0072  
                  ?___lwmod 0020        I2C_Master_Write@data 0072                   __pstrings 059F  
          ___lwdiv@quotient 0077                    ?_sprintf 0026              __size_of_setup 004D  
         interrupt_function 0004                    _LCD_Init 02D1                    _IOCBbits 0096  
                  _PIE1bits 008C                    _PIR1bits 000C       __end_of_I2C_Read_Byte 06B2  
               __stringbase 05AE            __size_of_LCD_CMD 001C    __end_of_LCD_Write_String 051F  
          __size_of___awdiv 0069            __size_of___awmod 0059            __size_of___lwdiv 0044  
          __size_of___lwmod 003C          __end_of__stringtab 05AF                  sprintf@val 002F  
           _I2C_Master_Init 06C2             _I2C_Master_Wait 06CF             _I2C_Master_Stop 06DC  
           ___lwdiv@divisor 0072                    _centenas 0066             ___lwdiv@counter 0079  
                  __ptext10 04D9                    __ptext11 060F                    __ptext20 069B  
                  __ptext12 05D7                    __ptext21 06CF                    __ptext13 02D1  
                  __ptext22 0665                    __ptext14 0649                    __ptext15 0681  
                  __ptext16 062C                    __ptext17 06B2                    __ptext18 06DC  
                  __ptext19 06E5     __size_of_LCD_Set_Cursor 0038                    _division 035F  
          __size_of_sprintf 00EA               __size_of_Text 0095             _BackLight_State 006F  
             __size_of_main 012A                    _unidades 007A                    main@val1 005F  
                  main@val2 005E    __end_of_I2C_Master_Start 06EE    __end_of_I2C_Master_Write 06C2  
                _INTCONbits 000B          LCD_Write_Char@Data 0077                    intlevel1 0000  
                 sprintf@ap 002C                   sprintf@sp 0031            ___lwmod@dividend 0022  
                 stringcode 05A9                  _OSCCONbits 008F     __size_of_LCD_Write_4Bit 001A  
   __size_of_LCD_Write_Char 001D     __end_of_I2C_Master_Init 06CF     __end_of_I2C_Master_Wait 06DC  
   __end_of_I2C_Master_Stop 06E5             LCD_Init@I2C_Add 0020                    sprintf@c 0032  
                  sprintf@f 0026             ___lwmod@divisor 0020             ___lwmod@counter 0025  
                  stringdir 05A9                    stringtab 059F           LCD_Set_Cursor@COL 0078  
         LCD_Set_Cursor@ROW 0079  
