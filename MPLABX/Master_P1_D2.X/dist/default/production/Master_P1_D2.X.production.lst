

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 31 20:51:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379                           
   380                           	psect	strings
   381  0500                     __pstrings:
   382  0500                     stringtab:
   383  0500                     __stringtab:
   384                           
   385                           ;	String table - string pointers are 1 byte each
   386  0500  1BFF               	btfsc	btemp+1,7
   387  0501  2D0A               	ljmp	stringcode
   388  0502  1383               	bcf	3,7
   389  0503  187F               	btfsc	btemp+1,0
   390  0504  1783               	bsf	3,7
   391  0505  0800               	movf	0,w
   392  0506  0A84               	incf	4,f
   393  0507  1903               	skipnz
   394  0508  0AFF               	incf	btemp+1,f
   395  0509  0008               	return
   396  050A                     stringcode:
   397  050A                     stringdir:
   398  050A  3005               	movlw	high stringdir
   399  050B  008A               	movwf	10
   400  050C  0804               	movf	4,w
   401  050D  0A84               	incf	4,f
   402  050E  0782               	addwf	2,f
   403  050F                     __stringbase:
   404  050F  3400               	retlw	0
   405  0510                     __end_of__stringtab:
   406  0510                     _dpowers:
   407  0510  3401               	retlw	1
   408  0511  3400               	retlw	0
   409  0512  340A               	retlw	10
   410  0513  3400               	retlw	0
   411  0514  3464               	retlw	100
   412  0515  3400               	retlw	0
   413  0516  34E8               	retlw	232
   414  0517  3403               	retlw	3
   415  0518  3410               	retlw	16
   416  0519  3427               	retlw	39
   417  051A                     __end_of_dpowers:
   418  0013                     _SSPBUF	set	19
   419  0014                     _SSPCON	set	20
   420  0019                     _TXREG	set	25
   421  000C                     _PIR1bits	set	12
   422  0018                     _RCSTAbits	set	24
   423  0009                     _PORTE	set	9
   424  0008                     _PORTD	set	8
   425  0007                     _PORTC	set	7
   426  0006                     _PORTB	set	6
   427  0005                     _PORTA	set	5
   428  000B                     _INTCONbits	set	11
   429  0008                     _PORTDbits	set	8
   430  0006                     _PORTBbits	set	6
   431  0043                     _RD3	set	67
   432  0047                     _RD7	set	71
   433  0046                     _RD6	set	70
   434  0045                     _RD5	set	69
   435  0044                     _RD4	set	68
   436  0063                     _SSPIF	set	99
   437  005E                     _PEIE	set	94
   438  005F                     _GIE	set	95
   439  0064                     _TXIF	set	100
   440  0058                     _RBIF	set	88
   441  0091                     _SSPCON2bits	set	145
   442  0094                     _SSPSTAT	set	148
   443  0093                     _SSPADD	set	147
   444  0091                     _SSPCON2	set	145
   445  008C                     _PIE1bits	set	140
   446  009A                     _SPBRGH	set	154
   447  0099                     _SPBRG	set	153
   448  0098                     _TXSTAbits	set	152
   449  0096                     _IOCBbits	set	150
   450  0095                     _WPUB	set	149
   451  0081                     _OPTION_REGbits	set	129
   452  0085                     _TRISA	set	133
   453  0088                     _TRISD	set	136
   454  0087                     _TRISCbits	set	135
   455  0086                     _TRISBbits	set	134
   456  008F                     _OSCCONbits	set	143
   457  0463                     _SSPIE	set	1123
   458  043C                     _TRISC4	set	1084
   459  043B                     _TRISC3	set	1083
   460  0187                     _BAUDCTLbits	set	391
   461  0189                     _ANSELH	set	393
   462  0188                     _ANSEL	set	392
   463  051A                     STR_1:
   464  051A  3443               	retlw	67	;'C'
   465  051B  344F               	retlw	79	;'O'
   466  051C  344E               	retlw	78	;'N'
   467  051D  3454               	retlw	84	;'T'
   468  051E  343A               	retlw	58	;':'
   469  051F  3420               	retlw	32	;' '
   470  0520  3453               	retlw	83	;'S'
   471  0521  3454               	retlw	84	;'T'
   472  0522  3441               	retlw	65	;'A'
   473  0523  3454               	retlw	84	;'T'
   474  0524  343A               	retlw	58	;':'
   475  0525  3420               	retlw	32	;' '
   476  0526  3454               	retlw	84	;'T'
   477  0527  3445               	retlw	69	;'E'
   478  0528  344D               	retlw	77	;'M'
   479  0529  3450               	retlw	80	;'P'
   480  052A  343A               	retlw	58	;':'
   481  052B  3400               	retlw	0
   482  052C                     STR_2:
   483  052C  3425               	retlw	37	;'%'
   484  052D  3464               	retlw	100	;'d'
   485  052E  3420               	retlw	32	;' '
   486  052F  3400               	retlw	0
   487  0530                     STR_5:
   488  0530  344F               	retlw	79	;'O'
   489  0531  3446               	retlw	70	;'F'
   490  0532  3446               	retlw	70	;'F'
   491  0533  3400               	retlw	0
   492  0534                     STR_4:
   493  0534  344F               	retlw	79	;'O'
   494  0535  344E               	retlw	78	;'N'
   495  0536  3400               	retlw	0
   496  052C                     
   497                           	psect	cinit
   498  000F                     start_initialization:	
   499                           ; #config settings
   500                           
   501  000F                     __initialization:
   502                           
   503                           ; Clear objects allocated to BANK0
   504  000F  1283               	bcf	3,5	;RP0=0, select bank0
   505  0010  1303               	bcf	3,6	;RP1=0, select bank0
   506  0011  01DF               	clrf	__pbssBANK0& (0+127)
   507  0012  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   508  0013  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   509  0014  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   510  0015  01E3               	clrf	(__pbssBANK0+4)& (0+127)
   511  0016                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  0016                     __end_of__initialization:
   515  0016  0183               	clrf	3
   516  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssBANK0
   519  005F                     __pbssBANK0:
   520  005F                     _cont:
   521  005F                     	ds	1
   522  0060                     _stat:
   523  0060                     	ds	1
   524  0061                     _temp:
   525  0061                     	ds	1
   526  0062                     _R2:
   527  0062                     	ds	1
   528  0063                     _R1:
   529  0063                     	ds	1
   530                           
   531                           	psect	cstackCOMMON
   532  0070                     __pcstackCOMMON:
   533  0070                     ?_setup:
   534  0070                     ?_Lcd_Init:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_Lcd_Clear:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_I2C_Master_Start:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_I2C_Master_Stop:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_isr:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_isr:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_main:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_I2C_Master_Wait:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_Lcd_Port:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_Lcd_Cmd:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Lcd_Write_Char:	
   565                           ; 1 bytes @ 0x0
   566                           
   567                           
   568                           ; 1 bytes @ 0x0
   569  0070                     	ds	2
   570  0072                     ??_I2C_Master_Start:
   571  0072                     ?_I2C_Master_Write:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     ??_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ??_I2C_Master_Wait:	
   578                           ; 1 bytes @ 0x2
   579                           
   580  0072                     ??_Lcd_Port:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     ?_I2C_Master_Read:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     ?___lwdiv:	
   587                           ; 2 bytes @ 0x2
   588                           
   589  0072                     ?___lldiv:	
   590                           ; 2 bytes @ 0x2
   591                           
   592  0072                     Lcd_Port@a:	
   593                           ; 4 bytes @ 0x2
   594                           
   595  0072                     I2C_Master_Write@d:	
   596                           ; 1 bytes @ 0x2
   597                           
   598  0072                     I2C_Master_Read@a:	
   599                           ; 2 bytes @ 0x2
   600                           
   601  0072                     ___lwdiv@divisor:	
   602                           ; 2 bytes @ 0x2
   603                           
   604  0072                     ___lldiv@divisor:	
   605                           ; 2 bytes @ 0x2
   606                           
   607                           
   608                           ; 4 bytes @ 0x2
   609  0072                     	ds	1
   610  0073                     ??_Lcd_Cmd:
   611  0073                     ??_Lcd_Write_Char:	
   612                           ; 1 bytes @ 0x3
   613                           
   614                           
   615                           ; 1 bytes @ 0x3
   616  0073                     	ds	1
   617  0074                     ??_I2C_Master_Write:
   618  0074                     ??_I2C_Master_Read:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     Lcd_Write_Char@temp:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ___lwdiv@dividend:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 2 bytes @ 0x4
   629  0074                     	ds	1
   630  0075                     Lcd_Cmd@a:
   631  0075                     Lcd_Write_Char@y:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636  0075                     	ds	1
   637  0076                     ??_Lcd_Init:
   638  0076                     ??_Lcd_Clear:	
   639                           ; 1 bytes @ 0x6
   640                           
   641  0076                     ?_Lcd_Set_Cursor:	
   642                           ; 1 bytes @ 0x6
   643                           
   644  0076                     ??___lwdiv:	
   645                           ; 1 bytes @ 0x6
   646                           
   647  0076                     Lcd_Set_Cursor@b:	
   648                           ; 1 bytes @ 0x6
   649                           
   650  0076                     Lcd_Write_Char@a:	
   651                           ; 1 bytes @ 0x6
   652                           
   653  0076                     I2C_Master_Read@temp:	
   654                           ; 1 bytes @ 0x6
   655                           
   656  0076                     ___lldiv@dividend:	
   657                           ; 2 bytes @ 0x6
   658                           
   659                           
   660                           ; 4 bytes @ 0x6
   661  0076                     	ds	1
   662  0077                     ??_Lcd_Set_Cursor:
   663  0077                     ?_Lcd_Write_String:	
   664                           ; 1 bytes @ 0x7
   665                           
   666  0077                     Lcd_Write_String@a:	
   667                           ; 1 bytes @ 0x7
   668                           
   669  0077                     ___lwdiv@quotient:	
   670                           ; 2 bytes @ 0x7
   671                           
   672                           
   673                           ; 2 bytes @ 0x7
   674  0077                     	ds	2
   675  0079                     ??_Lcd_Write_String:
   676  0079                     ___lwdiv@counter:	
   677                           ; 1 bytes @ 0x9
   678                           
   679                           
   680                           ; 1 bytes @ 0x9
   681  0079                     	ds	1
   682  007A                     ??___lldiv:
   683  007A                     ??___lwmod:	
   684                           ; 1 bytes @ 0xA
   685                           
   686                           
   687                           ; 1 bytes @ 0xA
   688  007A                     	ds	1
   689  007B                     ??_setup:
   690  007B                     ___lwmod@counter:	
   691                           ; 1 bytes @ 0xB
   692                           
   693                           
   694                           ; 1 bytes @ 0xB
   695  007B                     	ds	1
   696                           
   697                           	psect	cstackBANK0
   698  0020                     __pcstackBANK0:
   699  0020                     ?___lwmod:
   700  0020                     Lcd_Set_Cursor@a:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0020                     Lcd_Write_String@i:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0020                     ___lwmod@divisor:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  0020                     ___lldiv@quotient:	
   710                           ; 2 bytes @ 0x0
   711                           
   712                           
   713                           ; 4 bytes @ 0x0
   714  0020                     	ds	1
   715  0021                     Lcd_Set_Cursor@z:
   716                           
   717                           ; 1 bytes @ 0x1
   718  0021                     	ds	1
   719  0022                     Lcd_Set_Cursor@y:
   720  0022                     ___lwmod@dividend:	
   721                           ; 1 bytes @ 0x2
   722                           
   723                           
   724                           ; 2 bytes @ 0x2
   725  0022                     	ds	1
   726  0023                     Lcd_Set_Cursor@temp:
   727                           
   728                           ; 1 bytes @ 0x3
   729  0023                     	ds	1
   730  0024                     ?_sprintf:
   731  0024                     sprintf@f:	
   732                           ; 2 bytes @ 0x4
   733                           
   734  0024                     ___lldiv@counter:	
   735                           ; 1 bytes @ 0x4
   736                           
   737                           
   738                           ; 1 bytes @ 0x4
   739  0024                     	ds	1
   740  0025                     ?_I2C_Master_Init:
   741  0025                     I2C_Master_Init@c:	
   742                           ; 1 bytes @ 0x5
   743                           
   744                           
   745                           ; 4 bytes @ 0x5
   746  0025                     	ds	2
   747  0027                     ??_sprintf:
   748                           
   749                           ; 1 bytes @ 0x7
   750  0027                     	ds	2
   751  0029                     ??_I2C_Master_Init:
   752                           
   753                           ; 1 bytes @ 0x9
   754  0029                     	ds	1
   755  002A                     sprintf@ap:
   756                           
   757                           ; 1 bytes @ 0xA
   758  002A                     	ds	1
   759  002B                     sprintf@flag:
   760                           
   761                           ; 1 bytes @ 0xB
   762  002B                     	ds	1
   763  002C                     sprintf@prec:
   764                           
   765                           ; 1 bytes @ 0xC
   766  002C                     	ds	1
   767  002D                     sprintf@val:
   768                           
   769                           ; 2 bytes @ 0xD
   770  002D                     	ds	2
   771  002F                     sprintf@sp:
   772                           
   773                           ; 1 bytes @ 0xF
   774  002F                     	ds	1
   775  0030                     sprintf@c:
   776                           
   777                           ; 1 bytes @ 0x10
   778  0030                     	ds	1
   779  0031                     ??_main:
   780                           
   781                           ; 1 bytes @ 0x11
   782  0031                     	ds	3
   783  0034                     main@buffer:
   784                           
   785                           ; 20 bytes @ 0x14
   786  0034                     	ds	20
   787  0048                     main@buffer2:
   788                           
   789                           ; 20 bytes @ 0x28
   790  0048                     	ds	20
   791  005C                     main@val2:
   792                           
   793                           ; 1 bytes @ 0x3C
   794  005C                     	ds	1
   795  005D                     main@val1:
   796                           
   797                           ; 1 bytes @ 0x3D
   798  005D                     	ds	1
   799  005E                     main@val:
   800                           
   801                           ; 1 bytes @ 0x3E
   802  005E                     	ds	1
   803                           
   804                           	psect	maintext
   805  001A                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 70 in file "main_master.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  buffer2        20   40[BANK0 ] unsigned char [20]
   816 ;;  buffer         20   20[BANK0 ] unsigned char [20]
   817 ;;  buffer1        20    0        unsigned char [20]
   818 ;;  val             1   62[BANK0 ] unsigned char 
   819 ;;  val1            1   61[BANK0 ] unsigned char 
   820 ;;  val2            1   60[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0      43       0       0       0
   832 ;;      Temps:          0       3       0       0       0
   833 ;;      Totals:         0      46       0       0       0
   834 ;;Total ram usage:       46 bytes
   835 ;; Hardware stack levels required when called:    4
   836 ;; This function calls:
   837 ;;		_I2C_Master_Read
   838 ;;		_I2C_Master_Start
   839 ;;		_I2C_Master_Stop
   840 ;;		_I2C_Master_Write
   841 ;;		_Lcd_Clear
   842 ;;		_Lcd_Init
   843 ;;		_Lcd_Set_Cursor
   844 ;;		_Lcd_Write_String
   845 ;;		_setup
   846 ;;		_sprintf
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  001A                     _main:
   855  001A                     l1602:	
   856                           ;incstack = 0
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859                           
   860                           ;main_master.c: 72: 
   861  001A  120A  118A  2347  120A  118A  	fcall	_setup
   862                           
   863                           ;main_master.c: 73: 
   864  001F  120A  118A  2292  120A  118A  	fcall	_Lcd_Init
   865  0024                     l1604:
   866                           
   867                           ;main_master.c: 82:         I2C_Master_Start();;main_master.c: 83:         I2C_Master_Wr
      +                          ite(0x61);
   868  0024  1283               	bcf	3,5	;RP0=0, select bank0
   869  0025  1303               	bcf	3,6	;RP1=0, select bank0
   870  0026  0862               	movf	_R2,w
   871  0027  00B1               	movwf	??_main
   872  0028  0831               	movf	??_main,w
   873  0029  00E1               	movwf	_temp
   874  002A                     l1606:
   875                           
   876                           ;main_master.c: 84:         R2 = I2C_Master_Read(0);
   877  002A  0863               	movf	_R1,w
   878  002B  00B1               	movwf	??_main
   879  002C  0831               	movf	??_main,w
   880  002D  00DF               	movwf	_cont
   881  002E                     l1608:
   882                           
   883                           ;main_master.c: 85:         I2C_Master_Stop();
   884  002E  085F               	movf	_cont,w
   885  002F  00B1               	movwf	??_main
   886  0030  0831               	movf	??_main,w
   887  0031  00DE               	movwf	main@val
   888  0032                     l1610:
   889                           
   890                           ;main_master.c: 86:         _delay((unsigned long)((200)*(4000000/4000.0)));
   891  0032  0860               	movf	_stat,w
   892  0033  00B1               	movwf	??_main
   893  0034  0831               	movf	??_main,w
   894  0035  00DD               	movwf	main@val1
   895  0036                     l1612:
   896                           
   897                           ;main_master.c: 87:     }
   898  0036  0861               	movf	_temp,w
   899  0037  00B1               	movwf	??_main
   900  0038  0831               	movf	??_main,w
   901  0039  00DC               	movwf	main@val2
   902  003A                     l1614:
   903                           
   904                           ;main_master.c: 89: }
   905  003A  120A  118A  25BD  120A  118A  	fcall	_Lcd_Clear
   906  003F                     l1616:
   907                           
   908                           ;main_master.c: 90: 
   909  003F  01F6               	clrf	Lcd_Set_Cursor@b
   910  0040  0AF6               	incf	Lcd_Set_Cursor@b,f
   911  0041  3001               	movlw	1
   912  0042  120A  118A  22EF  120A  118A  	fcall	_Lcd_Set_Cursor
   913  0047                     l1618:
   914                           
   915                           ;main_master.c: 91: 
   916  0047  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   917  0048  00F7               	movwf	Lcd_Write_String@a
   918  0049  3080               	movlw	128
   919  004A  00F8               	movwf	Lcd_Write_String@a+1
   920  004B  120A  118A  2394  120A  118A  	fcall	_Lcd_Write_String
   921  0050                     l1620:
   922                           
   923                           ;main_master.c: 92: 
   924  0050  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   925  0051  1283               	bcf	3,5	;RP0=0, select bank0
   926  0052  1303               	bcf	3,6	;RP1=0, select bank0
   927  0053  00B1               	movwf	??_main
   928  0054  0831               	movf	??_main,w
   929  0055  00A4               	movwf	sprintf@f
   930  0056  085E               	movf	main@val,w
   931  0057  00B2               	movwf	??_main+1
   932  0058  01B3               	clrf	??_main+2
   933  0059  0832               	movf	??_main+1,w
   934  005A  00A5               	movwf	?_sprintf+1
   935  005B  0833               	movf	??_main+2,w
   936  005C  00A6               	movwf	?_sprintf+2
   937  005D  3034               	movlw	(low (main@buffer| 0))& (0+255)
   938  005E  120A  118A  2140  120A  118A  	fcall	_sprintf
   939  0063                     l1622:
   940                           
   941                           ;main_master.c: 93: void setup(void){
   942  0063  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   943  0064  1283               	bcf	3,5	;RP0=0, select bank0
   944  0065  1303               	bcf	3,6	;RP1=0, select bank0
   945  0066  00B1               	movwf	??_main
   946  0067  0831               	movf	??_main,w
   947  0068  00A4               	movwf	sprintf@f
   948  0069  085C               	movf	main@val2,w
   949  006A  00B2               	movwf	??_main+1
   950  006B  01B3               	clrf	??_main+2
   951  006C  0832               	movf	??_main+1,w
   952  006D  00A5               	movwf	?_sprintf+1
   953  006E  0833               	movf	??_main+2,w
   954  006F  00A6               	movwf	?_sprintf+2
   955  0070  3048               	movlw	(low (main@buffer2| 0))& (0+255)
   956  0071  120A  118A  2140  120A  118A  	fcall	_sprintf
   957  0076                     l1624:
   958                           
   959                           ;main_master.c: 94: 
   960  0076  3002               	movlw	2
   961  0077  1283               	bcf	3,5	;RP0=0, select bank0
   962  0078  1303               	bcf	3,6	;RP1=0, select bank0
   963  0079  00B1               	movwf	??_main
   964  007A  0831               	movf	??_main,w
   965  007B  00F6               	movwf	Lcd_Set_Cursor@b
   966  007C  3002               	movlw	2
   967  007D  120A  118A  22EF  120A  118A  	fcall	_Lcd_Set_Cursor
   968  0082                     l1626:
   969                           
   970                           ;main_master.c: 95:     OSCCONbits.IRCF0 = 0;
   971  0082  3034               	movlw	(low (main@buffer| 0))& (0+255)
   972  0083  00F7               	movwf	Lcd_Write_String@a
   973  0084  3000               	movlw	0
   974  0085  00F8               	movwf	Lcd_Write_String@a+1
   975  0086  120A  118A  2394  120A  118A  	fcall	_Lcd_Write_String
   976  008B                     l1628:
   977                           
   978                           ;main_master.c: 96:     OSCCONbits.IRCF1 = 1;
   979  008B  300E               	movlw	14
   980  008C  1283               	bcf	3,5	;RP0=0, select bank0
   981  008D  1303               	bcf	3,6	;RP1=0, select bank0
   982  008E  00B1               	movwf	??_main
   983  008F  0831               	movf	??_main,w
   984  0090  00F6               	movwf	Lcd_Set_Cursor@b
   985  0091  3002               	movlw	2
   986  0092  120A  118A  22EF  120A  118A  	fcall	_Lcd_Set_Cursor
   987  0097                     l1630:
   988                           
   989                           ;main_master.c: 97:     OSCCONbits.IRCF2 = 1;
   990  0097  3048               	movlw	(low (main@buffer2| 0))& (0+255)
   991  0098  00F7               	movwf	Lcd_Write_String@a
   992  0099  3000               	movlw	0
   993  009A  00F8               	movwf	Lcd_Write_String@a+1
   994  009B  120A  118A  2394  120A  118A  	fcall	_Lcd_Write_String
   995  00A0                     l1632:
   996                           
   997                           ;main_master.c: 99: 
   998  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   999  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1000  00A2  035D               	decf	main@val1,w
  1001  00A3  1D03               	btfss	3,2
  1002  00A4  28A6               	goto	u951
  1003  00A5  28A7               	goto	u950
  1004  00A6                     u951:
  1005  00A6  28BB               	goto	l1638
  1006  00A7                     u950:
  1007  00A7                     l1634:
  1008                           
  1009                           ;main_master.c: 100: 
  1010  00A7  3008               	movlw	8
  1011  00A8  00B1               	movwf	??_main
  1012  00A9  0831               	movf	??_main,w
  1013  00AA  00F6               	movwf	Lcd_Set_Cursor@b
  1014  00AB  3002               	movlw	2
  1015  00AC  120A  118A  22EF  120A  118A  	fcall	_Lcd_Set_Cursor
  1016  00B1                     l1636:
  1017                           
  1018                           ;main_master.c: 101:     ANSEL = 0;
  1019  00B1  3025               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1020  00B2  00F7               	movwf	Lcd_Write_String@a
  1021  00B3  3080               	movlw	128
  1022  00B4  00F8               	movwf	Lcd_Write_String@a+1
  1023  00B5  120A  118A  2394  120A  118A  	fcall	_Lcd_Write_String
  1024                           
  1025                           ;main_master.c: 102:     ANSELH = 0;
  1026  00BA  28CE               	goto	l1642
  1027  00BB                     l1638:
  1028                           
  1029                           ;main_master.c: 104: 
  1030  00BB  3008               	movlw	8
  1031  00BC  00B1               	movwf	??_main
  1032  00BD  0831               	movf	??_main,w
  1033  00BE  00F6               	movwf	Lcd_Set_Cursor@b
  1034  00BF  3002               	movlw	2
  1035  00C0  120A  118A  22EF  120A  118A  	fcall	_Lcd_Set_Cursor
  1036  00C5                     l1640:
  1037                           
  1038                           ;main_master.c: 105:     TRISBbits.TRISB0 = 1;
  1039  00C5  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1040  00C6  00F7               	movwf	Lcd_Write_String@a
  1041  00C7  3080               	movlw	128
  1042  00C8  00F8               	movwf	Lcd_Write_String@a+1
  1043  00C9  120A  118A  2394  120A  118A  	fcall	_Lcd_Write_String
  1044  00CE                     l1642:
  1045                           
  1046                           ;main_master.c: 107:     TRISD = 0x00;
  1047  00CE  300B               	movlw	11
  1048  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1049  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1050  00D1  00B3               	movwf	??_main+2
  1051  00D2  3026               	movlw	38
  1052  00D3  00B2               	movwf	??_main+1
  1053  00D4  305D               	movlw	93
  1054  00D5  00B1               	movwf	??_main
  1055  00D6                     u967:
  1056  00D6  0BB1               	decfsz	??_main,f
  1057  00D7  28D6               	goto	u967
  1058  00D8  0BB2               	decfsz	??_main+1,f
  1059  00D9  28D6               	goto	u967
  1060  00DA  0BB3               	decfsz	??_main+2,f
  1061  00DB  28D6               	goto	u967
  1062  00DC                     l1644:
  1063                           
  1064                           ;main_master.c: 112:     PORTB = 0x00;
  1065  00DC  120A  118A  25EA  120A  118A  	fcall	_I2C_Master_Start
  1066  00E1                     l1646:
  1067                           
  1068                           ;main_master.c: 113:     PORTC = 0x00;
  1069  00E1  3051               	movlw	81
  1070  00E2  00F2               	movwf	I2C_Master_Write@d
  1071  00E3  3000               	movlw	0
  1072  00E4  00F3               	movwf	I2C_Master_Write@d+1
  1073  00E5  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1074  00EA                     l1648:
  1075                           
  1076                           ;main_master.c: 114:     PORTD = 0x00;
  1077  00EA  3000               	movlw	0
  1078  00EB  00F2               	movwf	I2C_Master_Read@a
  1079  00EC  00F3               	movwf	I2C_Master_Read@a+1
  1080  00ED  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Read
  1081  00F2  0872               	movf	?_I2C_Master_Read,w
  1082  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1084  00F5  00B1               	movwf	??_main
  1085  00F6  0831               	movf	??_main,w
  1086  00F7  00E3               	movwf	_R1
  1087  00F8                     l1650:
  1088                           
  1089                           ;main_master.c: 115:     PORTE = 0x00;
  1090  00F8  120A  118A  25E1  120A  118A  	fcall	_I2C_Master_Stop
  1091  00FD                     l1652:
  1092                           
  1093                           ;main_master.c: 116: 
  1094  00FD  3002               	movlw	2
  1095  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1096  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0100  00B3               	movwf	??_main+2
  1098  0101  3004               	movlw	4
  1099  0102  00B2               	movwf	??_main+1
  1100  0103  30B9               	movlw	185
  1101  0104  00B1               	movwf	??_main
  1102  0105                     u977:
  1103  0105  0BB1               	decfsz	??_main,f
  1104  0106  2905               	goto	u977
  1105  0107  0BB2               	decfsz	??_main+1,f
  1106  0108  2905               	goto	u977
  1107  0109  0BB3               	decfsz	??_main+2,f
  1108  010A  2905               	goto	u977
  1109  010B  290C               	nop2
  1110  010C                     l1654:
  1111                           
  1112                           ;main_master.c: 119:     WPUB = 0b00000001;
  1113  010C  120A  118A  25EA  120A  118A  	fcall	_I2C_Master_Start
  1114  0111                     l1656:
  1115                           
  1116                           ;main_master.c: 120:     IOCBbits.IOCB0 = 1;
  1117  0111  3061               	movlw	97
  1118  0112  00F2               	movwf	I2C_Master_Write@d
  1119  0113  3000               	movlw	0
  1120  0114  00F3               	movwf	I2C_Master_Write@d+1
  1121  0115  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1122  011A                     l1658:
  1123                           
  1124                           ;main_master.c: 121: 
  1125  011A  3000               	movlw	0
  1126  011B  00F2               	movwf	I2C_Master_Read@a
  1127  011C  00F3               	movwf	I2C_Master_Read@a+1
  1128  011D  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Read
  1129  0122  0872               	movf	?_I2C_Master_Read,w
  1130  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0125  00B1               	movwf	??_main
  1133  0126  0831               	movf	??_main,w
  1134  0127  00E2               	movwf	_R2
  1135  0128                     l1660:
  1136                           
  1137                           ;main_master.c: 122: 
  1138  0128  120A  118A  25E1  120A  118A  	fcall	_I2C_Master_Stop
  1139  012D                     l1662:
  1140                           
  1141                           ;main_master.c: 123:     TXSTAbits.SYNC = 0;
  1142  012D  3002               	movlw	2
  1143  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1144  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0130  00B3               	movwf	??_main+2
  1146  0131  3004               	movlw	4
  1147  0132  00B2               	movwf	??_main+1
  1148  0133  30B9               	movlw	185
  1149  0134  00B1               	movwf	??_main
  1150  0135                     u987:
  1151  0135  0BB1               	decfsz	??_main,f
  1152  0136  2935               	goto	u987
  1153  0137  0BB2               	decfsz	??_main+1,f
  1154  0138  2935               	goto	u987
  1155  0139  0BB3               	decfsz	??_main+2,f
  1156  013A  2935               	goto	u987
  1157  013B  293C               	nop2
  1158  013C  2824               	goto	l1604
  1159  013D  120A  118A  280C   	ljmp	start
  1160  0140                     __end_of_main:
  1161                           
  1162                           	psect	text1
  1163  0140                     __ptext1:	
  1164 ;; *************** function _sprintf *****************
  1165 ;; Defined at:
  1166 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  sp              1    wreg     PTR unsigned char 
  1169 ;;		 -> main@buffer2(20), main@buffer(20), 
  1170 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1171 ;;		 -> STR_3(4), STR_2(4), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1174 ;;		 -> main@buffer2(20), main@buffer(20), 
  1175 ;;  tmpval          4    0        struct .
  1176 ;;  val             2   13[BANK0 ] unsigned int 
  1177 ;;  cp              2    0        PTR const unsigned char 
  1178 ;;  len             2    0        unsigned int 
  1179 ;;  c               1   16[BANK0 ] unsigned char 
  1180 ;;  prec            1   12[BANK0 ] char 
  1181 ;;  flag            1   11[BANK0 ] unsigned char 
  1182 ;;  ap              1   10[BANK0 ] PTR void [1]
  1183 ;;		 -> ?_sprintf(2), 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2    4[BANK0 ] int 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       3       0       0       0
  1194 ;;      Locals:         0       7       0       0       0
  1195 ;;      Temps:          0       3       0       0       0
  1196 ;;      Totals:         0      13       0       0       0
  1197 ;;Total ram usage:       13 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    2
  1200 ;; This function calls:
  1201 ;;		___lwdiv
  1202 ;;		___lwmod
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _sprintf
  1210  0140                     _sprintf:
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1214                           ;sprintf@sp stored from wreg
  1215  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0142  00AF               	movwf	sprintf@sp
  1218  0143                     l1500:
  1219                           
  1220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1221  0143  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1222  0144  00A7               	movwf	??_sprintf
  1223  0145  0827               	movf	??_sprintf,w
  1224  0146  00AA               	movwf	sprintf@ap
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1227  0147  2A13               	goto	l1552
  1228  0148                     l1502:
  1229                           
  1230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1231  0148  3025               	movlw	37
  1232  0149  0630               	xorwf	sprintf@c,w
  1233  014A  1903               	btfsc	3,2
  1234  014B  294D               	goto	u841
  1235  014C  294E               	goto	u840
  1236  014D                     u841:
  1237  014D  295A               	goto	l1508
  1238  014E                     u840:
  1239  014E                     l1504:
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1242  014E  0830               	movf	sprintf@c,w
  1243  014F  00A7               	movwf	??_sprintf
  1244  0150  082F               	movf	sprintf@sp,w
  1245  0151  0084               	movwf	4
  1246  0152  0827               	movf	??_sprintf,w
  1247  0153  1383               	bcf	3,7	;select IRP bank0
  1248  0154  0080               	movwf	0
  1249  0155                     l1506:
  1250  0155  3001               	movlw	1
  1251  0156  00A7               	movwf	??_sprintf
  1252  0157  0827               	movf	??_sprintf,w
  1253  0158  07AF               	addwf	sprintf@sp,f
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1256  0159  2A13               	goto	l1552
  1257  015A                     l1508:
  1258                           
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1260  015A  01AB               	clrf	sprintf@flag
  1261  015B                     l1512:	
  1262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1263                           
  1264  015B  3001               	movlw	1
  1265  015C  07A4               	addwf	sprintf@f,f
  1266  015D  30FF               	movlw	-1
  1267  015E  0724               	addwf	sprintf@f,w
  1268  015F  0084               	movwf	4
  1269  0160  120A  118A  250A  120A  118A  	fcall	stringdir
  1270  0165  00B0               	movwf	sprintf@c
  1271  0166  00A7               	movwf	??_sprintf
  1272  0167  01A8               	clrf	??_sprintf+1
  1273                           
  1274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1275                           ; Switch size 1, requested type "simple"
  1276                           ; Number of cases is 1, Range of values is 0 to 0
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte            4     3 (average)
  1280                           ; direct_byte           11     8 (fixed)
  1281                           ; jumptable            260     6 (fixed)
  1282                           ;	Chosen strategy is simple_byte
  1283  0168  0828               	movf	??_sprintf+1,w
  1284  0169  3A00               	xorlw	0	; case 0
  1285  016A  1903               	skipnz
  1286  016B  296D               	goto	l1692
  1287  016C  2A13               	goto	l1552
  1288  016D                     l1692:
  1289                           
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 3, Range of values is 0 to 105
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte           10     6 (average)
  1295                           ; jumptable            260     6 (fixed)
  1296                           ;	Chosen strategy is simple_byte
  1297  016D  0827               	movf	??_sprintf,w
  1298  016E  3A00               	xorlw	0	; case 0
  1299  016F  1903               	skipnz
  1300  0170  2A25               	goto	l1554
  1301  0171  3A64               	xorlw	100	; case 100
  1302  0172  1903               	skipnz
  1303  0173  2978               	goto	l1514
  1304  0174  3A0D               	xorlw	13	; case 105
  1305  0175  1903               	skipnz
  1306  0176  2978               	goto	l1514
  1307  0177  2A13               	goto	l1552
  1308  0178                     l1514:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1311  0178  082A               	movf	sprintf@ap,w
  1312  0179  0084               	movwf	4
  1313  017A  1383               	bcf	3,7	;select IRP bank0
  1314  017B  0800               	movf	0,w
  1315  017C  00AD               	movwf	sprintf@val
  1316  017D  0A84               	incf	4,f
  1317  017E  0800               	movf	0,w
  1318  017F  00AE               	movwf	sprintf@val+1
  1319  0180                     l1516:
  1320  0180  3002               	movlw	2
  1321  0181  00A7               	movwf	??_sprintf
  1322  0182  0827               	movf	??_sprintf,w
  1323  0183  07AA               	addwf	sprintf@ap,f
  1324  0184                     l1518:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1327  0184  1FAE               	btfss	sprintf@val+1,7
  1328  0185  2987               	goto	u851
  1329  0186  2988               	goto	u850
  1330  0187                     u851:
  1331  0187  2991               	goto	l1524
  1332  0188                     u850:
  1333  0188                     l1520:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1336  0188  3003               	movlw	3
  1337  0189  00A7               	movwf	??_sprintf
  1338  018A  0827               	movf	??_sprintf,w
  1339  018B  04AB               	iorwf	sprintf@flag,f
  1340  018C                     l1522:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1343  018C  09AD               	comf	sprintf@val,f
  1344  018D  09AE               	comf	sprintf@val+1,f
  1345  018E  0AAD               	incf	sprintf@val,f
  1346  018F  1903               	skipnz
  1347  0190  0AAE               	incf	sprintf@val+1,f
  1348  0191                     l1524:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1351  0191  01B0               	clrf	sprintf@c
  1352  0192  0AB0               	incf	sprintf@c,f
  1353  0193                     l1530:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1356  0193  0830               	movf	sprintf@c,w
  1357  0194  00A7               	movwf	??_sprintf
  1358  0195  0727               	addwf	??_sprintf,w
  1359  0196  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1360  0197  0084               	movwf	4
  1361  0198  120A  118A  250A  120A  118A  	fcall	stringdir
  1362  019D  00A8               	movwf	??_sprintf+1
  1363  019E  120A  118A  250A  120A  118A  	fcall	stringdir
  1364  01A3  00A9               	movwf	??_sprintf+2
  1365  01A4  0829               	movf	??_sprintf+2,w
  1366  01A5  022E               	subwf	sprintf@val+1,w
  1367  01A6  1D03               	skipz
  1368  01A7  29AA               	goto	u865
  1369  01A8  0828               	movf	??_sprintf+1,w
  1370  01A9  022D               	subwf	sprintf@val,w
  1371  01AA                     u865:
  1372  01AA  1803               	skipnc
  1373  01AB  29AD               	goto	u861
  1374  01AC  29AE               	goto	u860
  1375  01AD                     u861:
  1376  01AD  29AF               	goto	l1534
  1377  01AE                     u860:
  1378  01AE  29B9               	goto	l1536
  1379  01AF                     l1534:
  1380  01AF  3001               	movlw	1
  1381  01B0  00A7               	movwf	??_sprintf
  1382  01B1  0827               	movf	??_sprintf,w
  1383  01B2  07B0               	addwf	sprintf@c,f
  1384  01B3  3005               	movlw	5
  1385  01B4  0630               	xorwf	sprintf@c,w
  1386  01B5  1D03               	btfss	3,2
  1387  01B6  29B8               	goto	u871
  1388  01B7  29B9               	goto	u870
  1389  01B8                     u871:
  1390  01B8  2993               	goto	l1530
  1391  01B9                     u870:
  1392  01B9                     l1536:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1395  01B9  082B               	movf	sprintf@flag,w
  1396  01BA  3903               	andlw	3
  1397  01BB  1903               	btfsc	3,2
  1398  01BC  29BE               	goto	u881
  1399  01BD  29BF               	goto	u880
  1400  01BE                     u881:
  1401  01BE  29CA               	goto	l1542
  1402  01BF                     u880:
  1403  01BF                     l1538:
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1406  01BF  302D               	movlw	45
  1407  01C0  00A7               	movwf	??_sprintf
  1408  01C1  082F               	movf	sprintf@sp,w
  1409  01C2  0084               	movwf	4
  1410  01C3  0827               	movf	??_sprintf,w
  1411  01C4  1383               	bcf	3,7	;select IRP bank0
  1412  01C5  0080               	movwf	0
  1413  01C6                     l1540:
  1414  01C6  3001               	movlw	1
  1415  01C7  00A7               	movwf	??_sprintf
  1416  01C8  0827               	movf	??_sprintf,w
  1417  01C9  07AF               	addwf	sprintf@sp,f
  1418  01CA                     l1542:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1421  01CA  0830               	movf	sprintf@c,w
  1422  01CB  00A7               	movwf	??_sprintf
  1423  01CC  0827               	movf	??_sprintf,w
  1424  01CD  00AC               	movwf	sprintf@prec
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1427  01CE  2A0A               	goto	l1550
  1428  01CF                     l1544:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1431  01CF  300A               	movlw	10
  1432  01D0  00A0               	movwf	___lwmod@divisor
  1433  01D1  3000               	movlw	0
  1434  01D2  00A1               	movwf	___lwmod@divisor+1
  1435  01D3  082C               	movf	sprintf@prec,w
  1436  01D4  00A7               	movwf	??_sprintf
  1437  01D5  0727               	addwf	??_sprintf,w
  1438  01D6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1439  01D7  0084               	movwf	4
  1440  01D8  120A  118A  250A  120A  118A  	fcall	stringdir
  1441  01DD  00F2               	movwf	___lwdiv@divisor
  1442  01DE  120A  118A  250A  120A  118A  	fcall	stringdir
  1443  01E3  00F3               	movwf	___lwdiv@divisor+1
  1444  01E4  082E               	movf	sprintf@val+1,w
  1445  01E5  00F5               	movwf	___lwdiv@dividend+1
  1446  01E6  082D               	movf	sprintf@val,w
  1447  01E7  00F4               	movwf	___lwdiv@dividend
  1448  01E8  120A  118A  23DA  120A  118A  	fcall	___lwdiv
  1449  01ED  0873               	movf	?___lwdiv+1,w
  1450  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01F0  00A3               	movwf	___lwmod@dividend+1
  1453  01F1  0872               	movf	?___lwdiv,w
  1454  01F2  00A2               	movwf	___lwmod@dividend
  1455  01F3  120A  118A  241E  120A  118A  	fcall	___lwmod
  1456  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1457  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1458  01FA  0820               	movf	?___lwmod,w
  1459  01FB  3E30               	addlw	48
  1460  01FC  00A8               	movwf	??_sprintf+1
  1461  01FD  0828               	movf	??_sprintf+1,w
  1462  01FE  00B0               	movwf	sprintf@c
  1463  01FF                     l1546:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1466  01FF  0830               	movf	sprintf@c,w
  1467  0200  00A7               	movwf	??_sprintf
  1468  0201  082F               	movf	sprintf@sp,w
  1469  0202  0084               	movwf	4
  1470  0203  0827               	movf	??_sprintf,w
  1471  0204  1383               	bcf	3,7	;select IRP bank0
  1472  0205  0080               	movwf	0
  1473  0206                     l1548:
  1474  0206  3001               	movlw	1
  1475  0207  00A7               	movwf	??_sprintf
  1476  0208  0827               	movf	??_sprintf,w
  1477  0209  07AF               	addwf	sprintf@sp,f
  1478  020A                     l1550:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1481  020A  30FF               	movlw	255
  1482  020B  00A7               	movwf	??_sprintf
  1483  020C  0827               	movf	??_sprintf,w
  1484  020D  07AC               	addwf	sprintf@prec,f
  1485  020E  0A2C               	incf	sprintf@prec,w
  1486  020F  1D03               	btfss	3,2
  1487  0210  2A12               	goto	u891
  1488  0211  2A13               	goto	u890
  1489  0212                     u891:
  1490  0212  29CF               	goto	l1544
  1491  0213                     u890:
  1492  0213                     l1552:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1495  0213  3001               	movlw	1
  1496  0214  07A4               	addwf	sprintf@f,f
  1497  0215  30FF               	movlw	-1
  1498  0216  0724               	addwf	sprintf@f,w
  1499  0217  0084               	movwf	4
  1500  0218  120A  118A  250A  120A  118A  	fcall	stringdir
  1501  021D  00A7               	movwf	??_sprintf
  1502  021E  0827               	movf	??_sprintf,w
  1503  021F  00B0               	movwf	sprintf@c
  1504  0220  0830               	movf	sprintf@c,w
  1505  0221  1D03               	btfss	3,2
  1506  0222  2A24               	goto	u901
  1507  0223  2A25               	goto	u900
  1508  0224                     u901:
  1509  0224  2948               	goto	l1502
  1510  0225                     u900:
  1511  0225                     l1554:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1514  0225  082F               	movf	sprintf@sp,w
  1515  0226  0084               	movwf	4
  1516  0227  1383               	bcf	3,7	;select IRP bank0
  1517  0228  0180               	clrf	0
  1518  0229                     l338:
  1519  0229  0008               	return
  1520  022A                     __end_of_sprintf:
  1521                           
  1522                           	psect	text2
  1523  041E                     __ptext2:	
  1524 ;; *************** function ___lwmod *****************
  1525 ;; Defined at:
  1526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  divisor         2    0[BANK0 ] unsigned int 
  1529 ;;  dividend        2    2[BANK0 ] unsigned int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  counter         1   11[COMMON] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    0[BANK0 ] unsigned int 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         0       4       0       0       0
  1542 ;;      Locals:         1       0       0       0       0
  1543 ;;      Temps:          1       0       0       0       0
  1544 ;;      Totals:         2       4       0       0       0
  1545 ;;Total ram usage:        6 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    1
  1548 ;; This function calls:
  1549 ;;		Nothing
  1550 ;; This function is called by:
  1551 ;;		_sprintf
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function ___lwmod
  1557  041E                     ___lwmod:
  1558  041E                     l1386:	
  1559                           ;incstack = 0
  1560                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1561                           
  1562  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1563  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0420  0820               	movf	___lwmod@divisor,w
  1565  0421  0421               	iorwf	___lwmod@divisor+1,w
  1566  0422  1903               	btfsc	3,2
  1567  0423  2C25               	goto	u711
  1568  0424  2C26               	goto	u710
  1569  0425                     u711:
  1570  0425  2C55               	goto	l1404
  1571  0426                     u710:
  1572  0426                     l1388:
  1573  0426  01FB               	clrf	___lwmod@counter
  1574  0427  0AFB               	incf	___lwmod@counter,f
  1575  0428  2C34               	goto	l1394
  1576  0429                     l1390:
  1577  0429  3001               	movlw	1
  1578  042A                     u725:
  1579  042A  1003               	clrc
  1580  042B  0DA0               	rlf	___lwmod@divisor,f
  1581  042C  0DA1               	rlf	___lwmod@divisor+1,f
  1582  042D  3EFF               	addlw	-1
  1583  042E  1D03               	skipz
  1584  042F  2C2A               	goto	u725
  1585  0430                     l1392:
  1586  0430  3001               	movlw	1
  1587  0431  00FA               	movwf	??___lwmod
  1588  0432  087A               	movf	??___lwmod,w
  1589  0433  07FB               	addwf	___lwmod@counter,f
  1590  0434                     l1394:
  1591  0434  1FA1               	btfss	___lwmod@divisor+1,7
  1592  0435  2C37               	goto	u731
  1593  0436  2C38               	goto	u730
  1594  0437                     u731:
  1595  0437  2C29               	goto	l1390
  1596  0438                     u730:
  1597  0438                     l1396:
  1598  0438  0821               	movf	___lwmod@divisor+1,w
  1599  0439  0223               	subwf	___lwmod@dividend+1,w
  1600  043A  1D03               	skipz
  1601  043B  2C3E               	goto	u745
  1602  043C  0820               	movf	___lwmod@divisor,w
  1603  043D  0222               	subwf	___lwmod@dividend,w
  1604  043E                     u745:
  1605  043E  1C03               	skipc
  1606  043F  2C41               	goto	u741
  1607  0440  2C42               	goto	u740
  1608  0441                     u741:
  1609  0441  2C48               	goto	l1400
  1610  0442                     u740:
  1611  0442                     l1398:
  1612  0442  0820               	movf	___lwmod@divisor,w
  1613  0443  02A2               	subwf	___lwmod@dividend,f
  1614  0444  0821               	movf	___lwmod@divisor+1,w
  1615  0445  1C03               	skipc
  1616  0446  03A3               	decf	___lwmod@dividend+1,f
  1617  0447  02A3               	subwf	___lwmod@dividend+1,f
  1618  0448                     l1400:
  1619  0448  3001               	movlw	1
  1620  0449                     u755:
  1621  0449  1003               	clrc
  1622  044A  0CA1               	rrf	___lwmod@divisor+1,f
  1623  044B  0CA0               	rrf	___lwmod@divisor,f
  1624  044C  3EFF               	addlw	-1
  1625  044D  1D03               	skipz
  1626  044E  2C49               	goto	u755
  1627  044F                     l1402:
  1628  044F  3001               	movlw	1
  1629  0450  02FB               	subwf	___lwmod@counter,f
  1630  0451  1D03               	btfss	3,2
  1631  0452  2C54               	goto	u761
  1632  0453  2C55               	goto	u760
  1633  0454                     u761:
  1634  0454  2C38               	goto	l1396
  1635  0455                     u760:
  1636  0455                     l1404:
  1637  0455  0823               	movf	___lwmod@dividend+1,w
  1638  0456  00A1               	movwf	?___lwmod+1
  1639  0457  0822               	movf	___lwmod@dividend,w
  1640  0458  00A0               	movwf	?___lwmod
  1641  0459                     l624:
  1642  0459  0008               	return
  1643  045A                     __end_of___lwmod:
  1644                           
  1645                           	psect	text3
  1646  03DA                     __ptext3:	
  1647 ;; *************** function ___lwdiv *****************
  1648 ;; Defined at:
  1649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  divisor         2    2[COMMON] unsigned int 
  1652 ;;  dividend        2    4[COMMON] unsigned int 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  quotient        2    7[COMMON] unsigned int 
  1655 ;;  counter         1    9[COMMON] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    2[COMMON] unsigned int 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         4       0       0       0       0
  1666 ;;      Locals:         3       0       0       0       0
  1667 ;;      Temps:          1       0       0       0       0
  1668 ;;      Totals:         8       0       0       0       0
  1669 ;;Total ram usage:        8 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_sprintf
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function ___lwdiv
  1681  03DA                     ___lwdiv:
  1682  03DA                     l1360:	
  1683                           ;incstack = 0
  1684                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1685                           
  1686  03DA  01F7               	clrf	___lwdiv@quotient
  1687  03DB  01F8               	clrf	___lwdiv@quotient+1
  1688  03DC                     l1362:
  1689  03DC  0872               	movf	___lwdiv@divisor,w
  1690  03DD  0473               	iorwf	___lwdiv@divisor+1,w
  1691  03DE  1903               	btfsc	3,2
  1692  03DF  2BE1               	goto	u641
  1693  03E0  2BE2               	goto	u640
  1694  03E1                     u641:
  1695  03E1  2C19               	goto	l1382
  1696  03E2                     u640:
  1697  03E2                     l1364:
  1698  03E2  01F9               	clrf	___lwdiv@counter
  1699  03E3  0AF9               	incf	___lwdiv@counter,f
  1700  03E4  2BF0               	goto	l1370
  1701  03E5                     l1366:
  1702  03E5  3001               	movlw	1
  1703  03E6                     u655:
  1704  03E6  1003               	clrc
  1705  03E7  0DF2               	rlf	___lwdiv@divisor,f
  1706  03E8  0DF3               	rlf	___lwdiv@divisor+1,f
  1707  03E9  3EFF               	addlw	-1
  1708  03EA  1D03               	skipz
  1709  03EB  2BE6               	goto	u655
  1710  03EC                     l1368:
  1711  03EC  3001               	movlw	1
  1712  03ED  00F6               	movwf	??___lwdiv
  1713  03EE  0876               	movf	??___lwdiv,w
  1714  03EF  07F9               	addwf	___lwdiv@counter,f
  1715  03F0                     l1370:
  1716  03F0  1FF3               	btfss	___lwdiv@divisor+1,7
  1717  03F1  2BF3               	goto	u661
  1718  03F2  2BF4               	goto	u660
  1719  03F3                     u661:
  1720  03F3  2BE5               	goto	l1366
  1721  03F4                     u660:
  1722  03F4                     l1372:
  1723  03F4  3001               	movlw	1
  1724  03F5                     u675:
  1725  03F5  1003               	clrc
  1726  03F6  0DF7               	rlf	___lwdiv@quotient,f
  1727  03F7  0DF8               	rlf	___lwdiv@quotient+1,f
  1728  03F8  3EFF               	addlw	-1
  1729  03F9  1D03               	skipz
  1730  03FA  2BF5               	goto	u675
  1731  03FB  0873               	movf	___lwdiv@divisor+1,w
  1732  03FC  0275               	subwf	___lwdiv@dividend+1,w
  1733  03FD  1D03               	skipz
  1734  03FE  2C01               	goto	u685
  1735  03FF  0872               	movf	___lwdiv@divisor,w
  1736  0400  0274               	subwf	___lwdiv@dividend,w
  1737  0401                     u685:
  1738  0401  1C03               	skipc
  1739  0402  2C04               	goto	u681
  1740  0403  2C05               	goto	u680
  1741  0404                     u681:
  1742  0404  2C0C               	goto	l1378
  1743  0405                     u680:
  1744  0405                     l1374:
  1745  0405  0872               	movf	___lwdiv@divisor,w
  1746  0406  02F4               	subwf	___lwdiv@dividend,f
  1747  0407  0873               	movf	___lwdiv@divisor+1,w
  1748  0408  1C03               	skipc
  1749  0409  03F5               	decf	___lwdiv@dividend+1,f
  1750  040A  02F5               	subwf	___lwdiv@dividend+1,f
  1751  040B                     l1376:
  1752  040B  1477               	bsf	___lwdiv@quotient,0
  1753  040C                     l1378:
  1754  040C  3001               	movlw	1
  1755  040D                     u695:
  1756  040D  1003               	clrc
  1757  040E  0CF3               	rrf	___lwdiv@divisor+1,f
  1758  040F  0CF2               	rrf	___lwdiv@divisor,f
  1759  0410  3EFF               	addlw	-1
  1760  0411  1D03               	skipz
  1761  0412  2C0D               	goto	u695
  1762  0413                     l1380:
  1763  0413  3001               	movlw	1
  1764  0414  02F9               	subwf	___lwdiv@counter,f
  1765  0415  1D03               	btfss	3,2
  1766  0416  2C18               	goto	u701
  1767  0417  2C19               	goto	u700
  1768  0418                     u701:
  1769  0418  2BF4               	goto	l1372
  1770  0419                     u700:
  1771  0419                     l1382:
  1772  0419  0878               	movf	___lwdiv@quotient+1,w
  1773  041A  00F3               	movwf	?___lwdiv+1
  1774  041B  0877               	movf	___lwdiv@quotient,w
  1775  041C  00F2               	movwf	?___lwdiv
  1776  041D                     l614:
  1777  041D  0008               	return
  1778  041E                     __end_of___lwdiv:
  1779                           
  1780                           	psect	text4
  1781  0347                     __ptext4:	
  1782 ;; *************** function _setup *****************
  1783 ;; Defined at:
  1784 ;;		line 130 in file "main_master.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		_I2C_Master_Init
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _setup
  1814  0347                     _setup:
  1815  0347                     l1408:	
  1816                           ;incstack = 0
  1817                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1818                           
  1819                           
  1820                           ;main_master.c: 132:     RCSTAbits.CREN = 1;
  1821  0347  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0348  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0349  120F               	bcf	15,4	;volatile
  1824                           
  1825                           ;main_master.c: 133:     TXSTAbits.TX9 = 0;
  1826  034A  168F               	bsf	15,5	;volatile
  1827                           
  1828                           ;main_master.c: 134: 
  1829  034B  170F               	bsf	15,6	;volatile
  1830                           
  1831                           ;main_master.c: 135:     TXSTAbits.TXEN = 1;
  1832  034C  140F               	bsf	15,0	;volatile
  1833  034D                     l1410:
  1834                           
  1835                           ;main_master.c: 138:     PIR1bits.TXIF = 0;
  1836  034D  1683               	bsf	3,5	;RP0=1, select bank3
  1837  034E  1703               	bsf	3,6	;RP1=1, select bank3
  1838  034F  0188               	clrf	8	;volatile
  1839                           
  1840                           ;main_master.c: 139: 
  1841  0350  0189               	clrf	9	;volatile
  1842  0351                     l1412:
  1843                           
  1844                           ;main_master.c: 142:     INTCONbits.PEIE = 1;
  1845  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1846  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1847  0353  1406               	bsf	6,0	;volatile
  1848  0354                     l1414:
  1849                           
  1850                           ;main_master.c: 143:     PIE1bits.RCIE = 0;
  1851  0354  1007               	bcf	7,0	;volatile
  1852                           
  1853                           ;main_master.c: 144:     PIE1bits.TXIE = 0;
  1854  0355  0188               	clrf	8	;volatile
  1855                           
  1856                           ;main_master.c: 145:     INTCONbits.RBIF = 1;
  1857  0356  0185               	clrf	5	;volatile
  1858                           
  1859                           ;main_master.c: 148: 
  1860  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0359  0185               	clrf	5	;volatile
  1863                           
  1864                           ;main_master.c: 149:     I2C_Master_Init(100000);
  1865  035A  0186               	clrf	6	;volatile
  1866                           
  1867                           ;main_master.c: 150: }
  1868  035B  0187               	clrf	7	;volatile
  1869                           
  1870                           ;main_master.c: 151: 
  1871  035C  0188               	clrf	8	;volatile
  1872                           
  1873                           ;main_master.c: 152: 
  1874  035D  0189               	clrf	9	;volatile
  1875  035E                     l1416:
  1876                           
  1877                           ;main_master.c: 155:     TXREG = data;
  1878  035E  1683               	bsf	3,5	;RP0=1, select bank1
  1879  035F  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0360  1381               	bcf	1,7	;volatile
  1881  0361                     l1418:
  1882                           
  1883                           ;main_master.c: 156:     return;
  1884  0361  3001               	movlw	1
  1885  0362  0095               	movwf	21	;volatile
  1886  0363                     l1420:
  1887                           
  1888                           ;main_master.c: 157: }
  1889  0363  1416               	bsf	22,0	;volatile
  1890  0364                     l1422:
  1891  0364  1218               	bcf	24,4	;volatile
  1892  0365                     l1424:
  1893  0365  1518               	bsf	24,2	;volatile
  1894  0366                     l1426:
  1895  0366  1683               	bsf	3,5	;RP0=1, select bank3
  1896  0367  1703               	bsf	3,6	;RP1=1, select bank3
  1897  0368  1187               	bcf	7,3	;volatile
  1898  0369                     l1428:
  1899  0369  3019               	movlw	25
  1900  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1901  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1902  036C  0099               	movwf	25	;volatile
  1903  036D                     l1430:
  1904  036D  3001               	movlw	1
  1905  036E  009A               	movwf	26	;volatile
  1906  036F                     l1432:
  1907  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0371  1798               	bsf	24,7	;volatile
  1910  0372                     l1434:
  1911  0372  1318               	bcf	24,6	;volatile
  1912  0373                     l1436:
  1913  0373  1618               	bsf	24,4	;volatile
  1914  0374                     l1438:
  1915  0374  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0375  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0376  1318               	bcf	24,6	;volatile
  1918  0377                     l1440:
  1919  0377  1698               	bsf	24,5	;volatile
  1920  0378                     l1442:
  1921  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1923  037A  128C               	bcf	12,5	;volatile
  1924  037B                     l1444:
  1925  037B  120C               	bcf	12,4	;volatile
  1926  037C                     l1446:
  1927  037C  178B               	bsf	11,7	;volatile
  1928  037D                     l1448:
  1929  037D  170B               	bsf	11,6	;volatile
  1930  037E                     l1450:
  1931  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1932  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1933  0380  128C               	bcf	12,5	;volatile
  1934  0381                     l1452:
  1935  0381  120C               	bcf	12,4	;volatile
  1936  0382                     l1454:
  1937  0382  140B               	bsf	11,0	;volatile
  1938  0383                     l1456:
  1939  0383  158B               	bsf	11,3	;volatile
  1940  0384                     l1458:
  1941  0384  3000               	movlw	0
  1942  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0387  00A8               	movwf	I2C_Master_Init@c+3
  1945  0388  3001               	movlw	1
  1946  0389  00A7               	movwf	I2C_Master_Init@c+2
  1947  038A  3086               	movlw	134
  1948  038B  00A6               	movwf	I2C_Master_Init@c+1
  1949  038C  30A0               	movlw	160
  1950  038D  00A5               	movwf	I2C_Master_Init@c
  1951  038E  120A  118A  2493  120A  118A  	fcall	_I2C_Master_Init
  1952  0393                     l112:
  1953  0393  0008               	return
  1954  0394                     __end_of_setup:
  1955                           
  1956                           	psect	text5
  1957  0493                     __ptext5:	
  1958 ;; *************** function _I2C_Master_Init *****************
  1959 ;; Defined at:
  1960 ;;		line 16 in file "I2C.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  c               4    5[BANK0 ] const unsigned long 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       4       0       0       0
  1975 ;;      Locals:         0       0       0       0       0
  1976 ;;      Temps:          0       4       0       0       0
  1977 ;;      Totals:         0       8       0       0       0
  1978 ;;Total ram usage:        8 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    2
  1981 ;; This function calls:
  1982 ;;		___lldiv
  1983 ;; This function is called by:
  1984 ;;		_setup
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _I2C_Master_Init
  1990  0493                     _I2C_Master_Init:
  1991  0493                     l1314:	
  1992                           ;incstack = 0
  1993                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1994                           
  1995                           
  1996                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1997  0493  3028               	movlw	40
  1998  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0496  0094               	movwf	20	;volatile
  2001  0497                     l1316:
  2002                           
  2003                           ;I2C.c: 19:     SSPCON2 = 0;
  2004  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0499  0191               	clrf	17	;volatile
  2007  049A                     l1318:
  2008                           
  2009                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2010  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2011  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2012  049C  0825               	movf	I2C_Master_Init@c,w
  2013  049D  00A9               	movwf	??_I2C_Master_Init
  2014  049E  0826               	movf	I2C_Master_Init@c+1,w
  2015  049F  00AA               	movwf	??_I2C_Master_Init+1
  2016  04A0  0827               	movf	I2C_Master_Init@c+2,w
  2017  04A1  00AB               	movwf	??_I2C_Master_Init+2
  2018  04A2  0828               	movf	I2C_Master_Init@c+3,w
  2019  04A3  00AC               	movwf	??_I2C_Master_Init+3
  2020  04A4  3002               	movlw	2
  2021  04A5                     u605:
  2022  04A5  1003               	clrc
  2023  04A6  0DA9               	rlf	??_I2C_Master_Init,f
  2024  04A7  0DAA               	rlf	??_I2C_Master_Init+1,f
  2025  04A8  0DAB               	rlf	??_I2C_Master_Init+2,f
  2026  04A9  0DAC               	rlf	??_I2C_Master_Init+3,f
  2027  04AA                     u600:
  2028  04AA  3EFF               	addlw	-1
  2029  04AB  1D03               	skipz
  2030  04AC  2CA5               	goto	u605
  2031  04AD  082C               	movf	??_I2C_Master_Init+3,w
  2032  04AE  00F5               	movwf	___lldiv@divisor+3
  2033  04AF  082B               	movf	??_I2C_Master_Init+2,w
  2034  04B0  00F4               	movwf	___lldiv@divisor+2
  2035  04B1  082A               	movf	??_I2C_Master_Init+1,w
  2036  04B2  00F3               	movwf	___lldiv@divisor+1
  2037  04B3  0829               	movf	??_I2C_Master_Init,w
  2038  04B4  00F2               	movwf	___lldiv@divisor
  2039  04B5  3000               	movlw	0
  2040  04B6  00F9               	movwf	___lldiv@dividend+3
  2041  04B7  307A               	movlw	122
  2042  04B8  00F8               	movwf	___lldiv@dividend+2
  2043  04B9  3012               	movlw	18
  2044  04BA  00F7               	movwf	___lldiv@dividend+1
  2045  04BB  3000               	movlw	0
  2046  04BC  00F6               	movwf	___lldiv@dividend
  2047  04BD  120A  118A  222A  120A  118A  	fcall	___lldiv
  2048  04C2  0872               	movf	?___lldiv,w
  2049  04C3  3EFF               	addlw	255
  2050  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2051  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2052  04C6  0093               	movwf	19	;volatile
  2053  04C7                     l1320:
  2054                           
  2055                           ;I2C.c: 21:     SSPSTAT = 0;
  2056  04C7  0194               	clrf	20	;volatile
  2057  04C8                     l1322:
  2058                           
  2059                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2060  04C8  1587               	bsf	7,3	;volatile
  2061  04C9                     l1324:
  2062                           
  2063                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2064  04C9  1607               	bsf	7,4	;volatile
  2065  04CA                     l147:
  2066  04CA  0008               	return
  2067  04CB                     __end_of_I2C_Master_Init:
  2068                           
  2069                           	psect	text6
  2070  022A                     __ptext6:	
  2071 ;; *************** function ___lldiv *****************
  2072 ;; Defined at:
  2073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  divisor         4    2[COMMON] unsigned long 
  2076 ;;  dividend        4    6[COMMON] unsigned long 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  quotient        4    0[BANK0 ] unsigned long 
  2079 ;;  counter         1    4[BANK0 ] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  4    2[COMMON] unsigned long 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         8       0       0       0       0
  2090 ;;      Locals:         0       5       0       0       0
  2091 ;;      Temps:          1       0       0       0       0
  2092 ;;      Totals:         9       5       0       0       0
  2093 ;;Total ram usage:       14 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_I2C_Master_Init
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function ___lldiv
  2105  022A                     ___lldiv:
  2106  022A                     l1290:	
  2107                           ;incstack = 0
  2108                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2109                           
  2110  022A  3000               	movlw	0
  2111  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2112  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2113  022D  00A3               	movwf	___lldiv@quotient+3
  2114  022E  3000               	movlw	0
  2115  022F  00A2               	movwf	___lldiv@quotient+2
  2116  0230  3000               	movlw	0
  2117  0231  00A1               	movwf	___lldiv@quotient+1
  2118  0232  3000               	movlw	0
  2119  0233  00A0               	movwf	___lldiv@quotient
  2120  0234  0875               	movf	___lldiv@divisor+3,w
  2121  0235  0474               	iorwf	___lldiv@divisor+2,w
  2122  0236  0473               	iorwf	___lldiv@divisor+1,w
  2123  0237  0472               	iorwf	___lldiv@divisor,w
  2124  0238  1903               	skipnz
  2125  0239  2A3B               	goto	u531
  2126  023A  2A3C               	goto	u530
  2127  023B                     u531:
  2128  023B  2A89               	goto	l1310
  2129  023C                     u530:
  2130  023C                     l1292:
  2131  023C  01A4               	clrf	___lldiv@counter
  2132  023D  0AA4               	incf	___lldiv@counter,f
  2133  023E  2A4C               	goto	l1296
  2134  023F                     l1294:
  2135  023F  3001               	movlw	1
  2136  0240  00FA               	movwf	??___lldiv
  2137  0241                     u545:
  2138  0241  1003               	clrc
  2139  0242  0DF2               	rlf	___lldiv@divisor,f
  2140  0243  0DF3               	rlf	___lldiv@divisor+1,f
  2141  0244  0DF4               	rlf	___lldiv@divisor+2,f
  2142  0245  0DF5               	rlf	___lldiv@divisor+3,f
  2143  0246  0BFA               	decfsz	??___lldiv,f
  2144  0247  2A41               	goto	u545
  2145  0248  3001               	movlw	1
  2146  0249  00FA               	movwf	??___lldiv
  2147  024A  087A               	movf	??___lldiv,w
  2148  024B  07A4               	addwf	___lldiv@counter,f
  2149  024C                     l1296:
  2150  024C  1FF5               	btfss	___lldiv@divisor+3,7
  2151  024D  2A4F               	goto	u551
  2152  024E  2A50               	goto	u550
  2153  024F                     u551:
  2154  024F  2A3F               	goto	l1294
  2155  0250                     u550:
  2156  0250                     l1298:
  2157  0250  3001               	movlw	1
  2158  0251  00FA               	movwf	??___lldiv
  2159  0252                     u565:
  2160  0252  1003               	clrc
  2161  0253  0DA0               	rlf	___lldiv@quotient,f
  2162  0254  0DA1               	rlf	___lldiv@quotient+1,f
  2163  0255  0DA2               	rlf	___lldiv@quotient+2,f
  2164  0256  0DA3               	rlf	___lldiv@quotient+3,f
  2165  0257  0BFA               	decfsz	??___lldiv,f
  2166  0258  2A52               	goto	u565
  2167  0259                     l1300:
  2168  0259  0875               	movf	___lldiv@divisor+3,w
  2169  025A  0279               	subwf	___lldiv@dividend+3,w
  2170  025B  1D03               	skipz
  2171  025C  2A67               	goto	u575
  2172  025D  0874               	movf	___lldiv@divisor+2,w
  2173  025E  0278               	subwf	___lldiv@dividend+2,w
  2174  025F  1D03               	skipz
  2175  0260  2A67               	goto	u575
  2176  0261  0873               	movf	___lldiv@divisor+1,w
  2177  0262  0277               	subwf	___lldiv@dividend+1,w
  2178  0263  1D03               	skipz
  2179  0264  2A67               	goto	u575
  2180  0265  0872               	movf	___lldiv@divisor,w
  2181  0266  0276               	subwf	___lldiv@dividend,w
  2182  0267                     u575:
  2183  0267  1C03               	skipc
  2184  0268  2A6A               	goto	u571
  2185  0269  2A6B               	goto	u570
  2186  026A                     u571:
  2187  026A  2A7A               	goto	l1306
  2188  026B                     u570:
  2189  026B                     l1302:
  2190  026B  0872               	movf	___lldiv@divisor,w
  2191  026C  02F6               	subwf	___lldiv@dividend,f
  2192  026D  0873               	movf	___lldiv@divisor+1,w
  2193  026E  1C03               	skipc
  2194  026F  0F73               	incfsz	___lldiv@divisor+1,w
  2195  0270  02F7               	subwf	___lldiv@dividend+1,f
  2196  0271  0874               	movf	___lldiv@divisor+2,w
  2197  0272  1C03               	skipc
  2198  0273  0F74               	incfsz	___lldiv@divisor+2,w
  2199  0274  02F8               	subwf	___lldiv@dividend+2,f
  2200  0275  0875               	movf	___lldiv@divisor+3,w
  2201  0276  1C03               	skipc
  2202  0277  0F75               	incfsz	___lldiv@divisor+3,w
  2203  0278  02F9               	subwf	___lldiv@dividend+3,f
  2204  0279                     l1304:
  2205  0279  1420               	bsf	___lldiv@quotient,0
  2206  027A                     l1306:
  2207  027A  3001               	movlw	1
  2208  027B                     u585:
  2209  027B  1003               	clrc
  2210  027C  0CF5               	rrf	___lldiv@divisor+3,f
  2211  027D  0CF4               	rrf	___lldiv@divisor+2,f
  2212  027E  0CF3               	rrf	___lldiv@divisor+1,f
  2213  027F  0CF2               	rrf	___lldiv@divisor,f
  2214  0280  3EFF               	addlw	-1
  2215  0281  1D03               	skipz
  2216  0282  2A7B               	goto	u585
  2217  0283                     l1308:
  2218  0283  3001               	movlw	1
  2219  0284  02A4               	subwf	___lldiv@counter,f
  2220  0285  1D03               	btfss	3,2
  2221  0286  2A88               	goto	u591
  2222  0287  2A89               	goto	u590
  2223  0288                     u591:
  2224  0288  2A50               	goto	l1298
  2225  0289                     u590:
  2226  0289                     l1310:
  2227  0289  0823               	movf	___lldiv@quotient+3,w
  2228  028A  00F5               	movwf	?___lldiv+3
  2229  028B  0822               	movf	___lldiv@quotient+2,w
  2230  028C  00F4               	movwf	?___lldiv+2
  2231  028D  0821               	movf	___lldiv@quotient+1,w
  2232  028E  00F3               	movwf	?___lldiv+1
  2233  028F  0820               	movf	___lldiv@quotient,w
  2234  0290  00F2               	movwf	?___lldiv
  2235  0291                     l378:
  2236  0291  0008               	return
  2237  0292                     __end_of___lldiv:
  2238                           
  2239                           	psect	text7
  2240  0394                     __ptext7:	
  2241 ;; *************** function _Lcd_Write_String *****************
  2242 ;; Defined at:
  2243 ;;		line 98 in file "LCD.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  a               2    7[COMMON] PTR unsigned char 
  2246 ;;		 -> STR_5(4), STR_4(3), main@buffer2(20), main@buffer(20), 
  2247 ;;		 -> STR_1(18), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  i               2    0[BANK0 ] int 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         2       0       0       0       0
  2260 ;;      Locals:         0       2       0       0       0
  2261 ;;      Temps:          3       0       0       0       0
  2262 ;;      Totals:         5       2       0       0       0
  2263 ;;Total ram usage:        7 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    3
  2266 ;; This function calls:
  2267 ;;		_Lcd_Write_Char
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _Lcd_Write_String
  2275  0394                     _Lcd_Write_String:
  2276  0394                     l1492:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2279                           
  2280                           
  2281                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2282  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0396  01A0               	clrf	Lcd_Write_String@i
  2285  0397  01A1               	clrf	Lcd_Write_String@i+1
  2286  0398  2BBD               	goto	l1498
  2287  0399                     l1494:
  2288                           
  2289                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2290  0399  0820               	movf	Lcd_Write_String@i,w
  2291  039A  0777               	addwf	Lcd_Write_String@a,w
  2292  039B  00FA               	movwf	??_Lcd_Write_String+1
  2293  039C  0878               	movf	Lcd_Write_String@a+1,w
  2294  039D  00F9               	movwf	??_Lcd_Write_String
  2295  039E  1803               	skipnc
  2296  039F  0AF9               	incf	??_Lcd_Write_String,f
  2297  03A0  1FA0               	btfss	Lcd_Write_String@i,7
  2298  03A1  2BA3               	goto	u810
  2299  03A2  03F9               	decf	??_Lcd_Write_String,f
  2300  03A3                     u810:
  2301  03A3  0879               	movf	??_Lcd_Write_String,w
  2302  03A4  00FB               	movwf	??_Lcd_Write_String+2
  2303  03A5  087B               	movf	??_Lcd_Write_String+2,w
  2304  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2305  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2306  03A8  00FF               	movwf	btemp+1
  2307  03A9  087A               	movf	??_Lcd_Write_String+1,w
  2308  03AA  0084               	movwf	4
  2309  03AB  120A  118A  2500  120A  118A  	fcall	stringtab
  2310  03B0  120A  118A  245A  120A  118A  	fcall	_Lcd_Write_Char
  2311  03B5                     l1496:
  2312  03B5  3001               	movlw	1
  2313  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2314  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2315  03B8  07A0               	addwf	Lcd_Write_String@i,f
  2316  03B9  1803               	skipnc
  2317  03BA  0AA1               	incf	Lcd_Write_String@i+1,f
  2318  03BB  3000               	movlw	0
  2319  03BC  07A1               	addwf	Lcd_Write_String@i+1,f
  2320  03BD                     l1498:
  2321  03BD  0820               	movf	Lcd_Write_String@i,w
  2322  03BE  0777               	addwf	Lcd_Write_String@a,w
  2323  03BF  00FA               	movwf	??_Lcd_Write_String+1
  2324  03C0  0878               	movf	Lcd_Write_String@a+1,w
  2325  03C1  00F9               	movwf	??_Lcd_Write_String
  2326  03C2  1803               	skipnc
  2327  03C3  0AF9               	incf	??_Lcd_Write_String,f
  2328  03C4  1FA0               	btfss	Lcd_Write_String@i,7
  2329  03C5  2BC7               	goto	u820
  2330  03C6  03F9               	decf	??_Lcd_Write_String,f
  2331  03C7                     u820:
  2332  03C7  0879               	movf	??_Lcd_Write_String,w
  2333  03C8  00FB               	movwf	??_Lcd_Write_String+2
  2334  03C9  087B               	movf	??_Lcd_Write_String+2,w
  2335  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2336  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2337  03CC  00FF               	movwf	btemp+1
  2338  03CD  087A               	movf	??_Lcd_Write_String+1,w
  2339  03CE  0084               	movwf	4
  2340  03CF  120A  118A  2500  120A  118A  	fcall	stringtab
  2341  03D4  3A00               	xorlw	0
  2342  03D5  1D03               	skipz
  2343  03D6  2BD8               	goto	u831
  2344  03D7  2BD9               	goto	u830
  2345  03D8                     u831:
  2346  03D8  2B99               	goto	l1494
  2347  03D9                     u830:
  2348  03D9                     l222:
  2349  03D9  0008               	return
  2350  03DA                     __end_of_Lcd_Write_String:
  2351                           
  2352                           	psect	text8
  2353  045A                     __ptext8:	
  2354 ;; *************** function _Lcd_Write_Char *****************
  2355 ;; Defined at:
  2356 ;;		line 83 in file "LCD.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  a               1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  a               1    6[COMMON] unsigned char 
  2361 ;;  y               1    5[COMMON] unsigned char 
  2362 ;;  temp            1    4[COMMON] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         0       0       0       0       0
  2373 ;;      Locals:         3       0       0       0       0
  2374 ;;      Temps:          1       0       0       0       0
  2375 ;;      Totals:         4       0       0       0       0
  2376 ;;Total ram usage:        4 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    2
  2379 ;; This function calls:
  2380 ;;		_Lcd_Port
  2381 ;; This function is called by:
  2382 ;;		_Lcd_Write_String
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _Lcd_Write_Char
  2388  045A                     _Lcd_Write_Char:
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2392                           ;Lcd_Write_Char@a stored from wreg
  2393  045A  00F6               	movwf	Lcd_Write_Char@a
  2394  045B                     l1340:
  2395                           
  2396                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2397  045B  0876               	movf	Lcd_Write_Char@a,w
  2398  045C  390F               	andlw	15
  2399  045D  00F3               	movwf	??_Lcd_Write_Char
  2400  045E  0873               	movf	??_Lcd_Write_Char,w
  2401  045F  00F4               	movwf	Lcd_Write_Char@temp
  2402                           
  2403                           ;LCD.c: 86:     y = a & 0xF0;
  2404  0460  0876               	movf	Lcd_Write_Char@a,w
  2405  0461  39F0               	andlw	240
  2406  0462  00F3               	movwf	??_Lcd_Write_Char
  2407  0463  0873               	movf	??_Lcd_Write_Char,w
  2408  0464  00F5               	movwf	Lcd_Write_Char@y
  2409  0465                     l1342:
  2410                           
  2411                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2412  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0467  1508               	bsf	8,2	;volatile
  2415  0468                     l1344:
  2416                           
  2417                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2418  0468  0875               	movf	Lcd_Write_Char@y,w
  2419  0469  00F3               	movwf	??_Lcd_Write_Char
  2420  046A  3004               	movlw	4
  2421  046B                     u635:
  2422  046B  1003               	clrc
  2423  046C  0CF3               	rrf	??_Lcd_Write_Char,f
  2424  046D  3EFF               	addlw	-1
  2425  046E  1D03               	skipz
  2426  046F  2C6B               	goto	u635
  2427  0470  0873               	movf	??_Lcd_Write_Char,w
  2428  0471  120A  118A  2565  120A  118A  	fcall	_Lcd_Port
  2429  0476                     l1346:
  2430                           
  2431                           ;LCD.c: 89:     RD3 = 1;
  2432  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0478  1588               	bsf	8,3	;volatile
  2435  0479                     l1348:
  2436                           
  2437                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2438  0479  301A               	movlw	26
  2439  047A  00F3               	movwf	??_Lcd_Write_Char
  2440  047B                     u997:
  2441  047B  0BF3               	decfsz	??_Lcd_Write_Char,f
  2442  047C  2C7B               	goto	u997
  2443  047D  0000               	nop
  2444  047E                     l1350:
  2445                           
  2446                           ;LCD.c: 91:     RD3 = 0;
  2447  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2448  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0480  1188               	bcf	8,3	;volatile
  2450  0481                     l1352:
  2451                           
  2452                           ;LCD.c: 92:     Lcd_Port(temp);
  2453  0481  0874               	movf	Lcd_Write_Char@temp,w
  2454  0482  120A  118A  2565  120A  118A  	fcall	_Lcd_Port
  2455  0487                     l1354:
  2456                           
  2457                           ;LCD.c: 93:     RD3 = 1;
  2458  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0489  1588               	bsf	8,3	;volatile
  2461  048A                     l1356:
  2462                           
  2463                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2464  048A  301A               	movlw	26
  2465  048B  00F3               	movwf	??_Lcd_Write_Char
  2466  048C                     u1007:
  2467  048C  0BF3               	decfsz	??_Lcd_Write_Char,f
  2468  048D  2C8C               	goto	u1007
  2469  048E  0000               	nop
  2470  048F                     l1358:
  2471                           
  2472                           ;LCD.c: 95:     RD3 = 0;
  2473  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0491  1188               	bcf	8,3	;volatile
  2476  0492                     l216:
  2477  0492  0008               	return
  2478  0493                     __end_of_Lcd_Write_Char:
  2479                           
  2480                           	psect	text9
  2481  02EF                     __ptext9:	
  2482 ;; *************** function _Lcd_Set_Cursor *****************
  2483 ;; Defined at:
  2484 ;;		line 48 in file "LCD.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  a               1    wreg     unsigned char 
  2487 ;;  b               1    6[COMMON] unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  a               1    0[BANK0 ] unsigned char 
  2490 ;;  temp            1    3[BANK0 ] unsigned char 
  2491 ;;  y               1    2[BANK0 ] unsigned char 
  2492 ;;  z               1    1[BANK0 ] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         1       0       0       0       0
  2503 ;;      Locals:         0       4       0       0       0
  2504 ;;      Temps:          2       0       0       0       0
  2505 ;;      Totals:         3       4       0       0       0
  2506 ;;Total ram usage:        7 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    3
  2509 ;; This function calls:
  2510 ;;		_Lcd_Cmd
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _Lcd_Set_Cursor
  2518  02EF                     _Lcd_Set_Cursor:
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2522                           ;Lcd_Set_Cursor@a stored from wreg
  2523  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2524  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2525  02F1  00A0               	movwf	Lcd_Set_Cursor@a
  2526  02F2                     l1472:
  2527                           
  2528                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2529  02F2  0320               	decf	Lcd_Set_Cursor@a,w
  2530  02F3  1D03               	btfss	3,2
  2531  02F4  2AF6               	goto	u771
  2532  02F5  2AF7               	goto	u770
  2533  02F6                     u771:
  2534  02F6  2B1C               	goto	l1482
  2535  02F7                     u770:
  2536  02F7                     l1474:
  2537                           
  2538                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2539  02F7  0876               	movf	Lcd_Set_Cursor@b,w
  2540  02F8  3E7F               	addlw	127
  2541  02F9  00F7               	movwf	??_Lcd_Set_Cursor
  2542  02FA  0877               	movf	??_Lcd_Set_Cursor,w
  2543  02FB  00A3               	movwf	Lcd_Set_Cursor@temp
  2544                           
  2545                           ;LCD.c: 52:         z = temp >> 4;
  2546  02FC  0823               	movf	Lcd_Set_Cursor@temp,w
  2547  02FD  00F7               	movwf	??_Lcd_Set_Cursor
  2548  02FE  3004               	movlw	4
  2549  02FF                     u785:
  2550  02FF  1003               	clrc
  2551  0300  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2552  0301  3EFF               	addlw	-1
  2553  0302  1D03               	skipz
  2554  0303  2AFF               	goto	u785
  2555  0304  0877               	movf	??_Lcd_Set_Cursor,w
  2556  0305  00F8               	movwf	??_Lcd_Set_Cursor+1
  2557  0306  0878               	movf	??_Lcd_Set_Cursor+1,w
  2558  0307  00A1               	movwf	Lcd_Set_Cursor@z
  2559  0308                     l1476:
  2560                           
  2561                           ;LCD.c: 53:         y = temp & 0x0F;
  2562  0308  0823               	movf	Lcd_Set_Cursor@temp,w
  2563  0309  390F               	andlw	15
  2564  030A  00F7               	movwf	??_Lcd_Set_Cursor
  2565  030B  0877               	movf	??_Lcd_Set_Cursor,w
  2566  030C  00A2               	movwf	Lcd_Set_Cursor@y
  2567  030D                     l1478:
  2568                           
  2569                           ;LCD.c: 54:         Lcd_Cmd(z);
  2570  030D  0821               	movf	Lcd_Set_Cursor@z,w
  2571  030E  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2572  0313                     l1480:
  2573                           
  2574                           ;LCD.c: 55:         Lcd_Cmd(y);
  2575  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0315  0822               	movf	Lcd_Set_Cursor@y,w
  2578  0316  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2579                           
  2580                           ;LCD.c: 56:     } else if (a == 2) {
  2581  031B  2B46               	goto	l210
  2582  031C                     l1482:
  2583  031C  3002               	movlw	2
  2584  031D  0620               	xorwf	Lcd_Set_Cursor@a,w
  2585  031E  1D03               	btfss	3,2
  2586  031F  2B21               	goto	u791
  2587  0320  2B22               	goto	u790
  2588  0321                     u791:
  2589  0321  2B46               	goto	l210
  2590  0322                     u790:
  2591  0322                     l1484:
  2592                           
  2593                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2594  0322  0876               	movf	Lcd_Set_Cursor@b,w
  2595  0323  3EBF               	addlw	191
  2596  0324  00F7               	movwf	??_Lcd_Set_Cursor
  2597  0325  0877               	movf	??_Lcd_Set_Cursor,w
  2598  0326  00A3               	movwf	Lcd_Set_Cursor@temp
  2599                           
  2600                           ;LCD.c: 58:         z = temp >> 4;
  2601  0327  0823               	movf	Lcd_Set_Cursor@temp,w
  2602  0328  00F7               	movwf	??_Lcd_Set_Cursor
  2603  0329  3004               	movlw	4
  2604  032A                     u805:
  2605  032A  1003               	clrc
  2606  032B  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2607  032C  3EFF               	addlw	-1
  2608  032D  1D03               	skipz
  2609  032E  2B2A               	goto	u805
  2610  032F  0877               	movf	??_Lcd_Set_Cursor,w
  2611  0330  00F8               	movwf	??_Lcd_Set_Cursor+1
  2612  0331  0878               	movf	??_Lcd_Set_Cursor+1,w
  2613  0332  00A1               	movwf	Lcd_Set_Cursor@z
  2614  0333                     l1486:
  2615                           
  2616                           ;LCD.c: 59:         y = temp & 0x0F;
  2617  0333  0823               	movf	Lcd_Set_Cursor@temp,w
  2618  0334  390F               	andlw	15
  2619  0335  00F7               	movwf	??_Lcd_Set_Cursor
  2620  0336  0877               	movf	??_Lcd_Set_Cursor,w
  2621  0337  00A2               	movwf	Lcd_Set_Cursor@y
  2622  0338                     l1488:
  2623                           
  2624                           ;LCD.c: 60:         Lcd_Cmd(z);
  2625  0338  0821               	movf	Lcd_Set_Cursor@z,w
  2626  0339  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2627  033E                     l1490:
  2628                           
  2629                           ;LCD.c: 61:         Lcd_Cmd(y);
  2630  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2631  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0340  0822               	movf	Lcd_Set_Cursor@y,w
  2633  0341  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2634  0346                     l210:
  2635  0346  0008               	return
  2636  0347                     __end_of_Lcd_Set_Cursor:
  2637                           
  2638                           	psect	text10
  2639  0292                     __ptext10:	
  2640 ;; *************** function _Lcd_Init *****************
  2641 ;; Defined at:
  2642 ;;		line 65 in file "LCD.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0
  2658 ;;      Temps:          2       0       0       0       0
  2659 ;;      Totals:         2       0       0       0       0
  2660 ;;Total ram usage:        2 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    3
  2663 ;; This function calls:
  2664 ;;		_Lcd_Cmd
  2665 ;;		_Lcd_Port
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _Lcd_Init
  2673  0292                     _Lcd_Init:
  2674  0292                     l1460:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2677                           
  2678                           
  2679                           ;LCD.c: 66:     Lcd_Port(0x00);
  2680  0292  3000               	movlw	0
  2681  0293  120A  118A  2565  120A  118A  	fcall	_Lcd_Port
  2682  0298                     l1462:
  2683                           
  2684                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2685  0298  3034               	movlw	52
  2686  0299  00F7               	movwf	??_Lcd_Init+1
  2687  029A  30F1               	movlw	241
  2688  029B  00F6               	movwf	??_Lcd_Init
  2689  029C                     u1017:
  2690  029C  0BF6               	decfsz	??_Lcd_Init,f
  2691  029D  2A9C               	goto	u1017
  2692  029E  0BF7               	decfsz	??_Lcd_Init+1,f
  2693  029F  2A9C               	goto	u1017
  2694  02A0  2AA1               	nop2
  2695  02A1                     l1464:
  2696                           
  2697                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2698  02A1  3003               	movlw	3
  2699  02A2  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2700                           
  2701                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2702  02A7  300D               	movlw	13
  2703  02A8  00F7               	movwf	??_Lcd_Init+1
  2704  02A9  30FB               	movlw	251
  2705  02AA  00F6               	movwf	??_Lcd_Init
  2706  02AB                     u1027:
  2707  02AB  0BF6               	decfsz	??_Lcd_Init,f
  2708  02AC  2AAB               	goto	u1027
  2709  02AD  0BF7               	decfsz	??_Lcd_Init+1,f
  2710  02AE  2AAB               	goto	u1027
  2711  02AF  2AB0               	nop2
  2712  02B0                     l1466:
  2713                           
  2714                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2715  02B0  3003               	movlw	3
  2716  02B1  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2717  02B6                     l1468:
  2718                           
  2719                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2720  02B6  301D               	movlw	29
  2721  02B7  00F7               	movwf	??_Lcd_Init+1
  2722  02B8  3091               	movlw	145
  2723  02B9  00F6               	movwf	??_Lcd_Init
  2724  02BA                     u1037:
  2725  02BA  0BF6               	decfsz	??_Lcd_Init,f
  2726  02BB  2ABA               	goto	u1037
  2727  02BC  0BF7               	decfsz	??_Lcd_Init+1,f
  2728  02BD  2ABA               	goto	u1037
  2729                           
  2730                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2731  02BE  3003               	movlw	3
  2732  02BF  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2733                           
  2734                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2735  02C4  3002               	movlw	2
  2736  02C5  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2737                           
  2738                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2739  02CA  3002               	movlw	2
  2740  02CB  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2741                           
  2742                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2743  02D0  3008               	movlw	8
  2744  02D1  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2745                           
  2746                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2747  02D6  3000               	movlw	0
  2748  02D7  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2749                           
  2750                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2751  02DC  300C               	movlw	12
  2752  02DD  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2753                           
  2754                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2755  02E2  3000               	movlw	0
  2756  02E3  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2757                           
  2758                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2759  02E8  3006               	movlw	6
  2760  02E9  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2761  02EE                     l213:
  2762  02EE  0008               	return
  2763  02EF                     __end_of_Lcd_Init:
  2764                           
  2765                           	psect	text11
  2766  05BD                     __ptext11:	
  2767 ;; *************** function _Lcd_Clear *****************
  2768 ;; Defined at:
  2769 ;;		line 43 in file "LCD.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    3
  2790 ;; This function calls:
  2791 ;;		_Lcd_Cmd
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _Lcd_Clear
  2799  05BD                     _Lcd_Clear:
  2800  05BD                     l1470:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2803                           
  2804                           
  2805                           ;LCD.c: 44:     Lcd_Cmd(0);
  2806  05BD  3000               	movlw	0
  2807  05BE  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2808                           
  2809                           ;LCD.c: 45:     Lcd_Cmd(1);
  2810  05C3  3001               	movlw	1
  2811  05C4  120A  118A  25A3  120A  118A  	fcall	_Lcd_Cmd
  2812  05C9                     l204:
  2813  05C9  0008               	return
  2814  05CA                     __end_of_Lcd_Clear:
  2815                           
  2816                           	psect	text12
  2817  05A3                     __ptext12:	
  2818 ;; *************** function _Lcd_Cmd *****************
  2819 ;; Defined at:
  2820 ;;		line 35 in file "LCD.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  a               1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  a               1    5[COMMON] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         1       0       0       0       0
  2836 ;;      Temps:          2       0       0       0       0
  2837 ;;      Totals:         3       0       0       0       0
  2838 ;;Total ram usage:        3 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    2
  2841 ;; This function calls:
  2842 ;;		_Lcd_Port
  2843 ;; This function is called by:
  2844 ;;		_Lcd_Clear
  2845 ;;		_Lcd_Set_Cursor
  2846 ;;		_Lcd_Init
  2847 ;;		_Lcd_Shift_Right
  2848 ;;		_Lcd_Shift_Left
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function _Lcd_Cmd
  2854  05A3                     _Lcd_Cmd:
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2858                           ;Lcd_Cmd@a stored from wreg
  2859  05A3  00F5               	movwf	Lcd_Cmd@a
  2860  05A4                     l1330:
  2861                           
  2862                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2863  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2864  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2865  05A6  1108               	bcf	8,2	;volatile
  2866  05A7                     l1332:
  2867                           
  2868                           ;LCD.c: 37:     Lcd_Port(a);
  2869  05A7  0875               	movf	Lcd_Cmd@a,w
  2870  05A8  120A  118A  2565  120A  118A  	fcall	_Lcd_Port
  2871  05AD                     l1334:
  2872                           
  2873                           ;LCD.c: 38:     RD3 = 1;
  2874  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2875  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2876  05AF  1588               	bsf	8,3	;volatile
  2877  05B0                     l1336:
  2878                           
  2879                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2880  05B0  300B               	movlw	11
  2881  05B1  00F4               	movwf	??_Lcd_Cmd+1
  2882  05B2  3062               	movlw	98
  2883  05B3  00F3               	movwf	??_Lcd_Cmd
  2884  05B4                     u1047:
  2885  05B4  0BF3               	decfsz	??_Lcd_Cmd,f
  2886  05B5  2DB4               	goto	u1047
  2887  05B6  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2888  05B7  2DB4               	goto	u1047
  2889  05B8  0000               	nop
  2890  05B9                     l1338:
  2891                           
  2892                           ;LCD.c: 40:     RD3 = 0;
  2893  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2894  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2895  05BB  1188               	bcf	8,3	;volatile
  2896  05BC                     l201:
  2897  05BC  0008               	return
  2898  05BD                     __end_of_Lcd_Cmd:
  2899                           
  2900                           	psect	text13
  2901  0565                     __ptext13:	
  2902 ;; *************** function _Lcd_Port *****************
  2903 ;; Defined at:
  2904 ;;		line 13 in file "LCD.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  a               1    wreg     unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  a               1    2[COMMON] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         0       0       0       0       0
  2919 ;;      Locals:         1       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0
  2921 ;;      Totals:         1       0       0       0       0
  2922 ;;Total ram usage:        1 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_Lcd_Cmd
  2929 ;;		_Lcd_Init
  2930 ;;		_Lcd_Write_Char
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _Lcd_Port
  2936  0565                     _Lcd_Port:
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _Lcd_Port: [wreg]
  2940                           ;Lcd_Port@a stored from wreg
  2941  0565  00F2               	movwf	Lcd_Port@a
  2942  0566                     l1280:
  2943                           
  2944                           ;LCD.c: 14:     if (a & 1)
  2945  0566  1C72               	btfss	Lcd_Port@a,0
  2946  0567  2D69               	goto	u491
  2947  0568  2D6A               	goto	u490
  2948  0569                     u491:
  2949  0569  2D6E               	goto	l190
  2950  056A                     u490:
  2951  056A                     l1282:
  2952                           
  2953                           ;LCD.c: 15:         RD4 = 1;
  2954  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2955  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2956  056C  1608               	bsf	8,4	;volatile
  2957  056D  2D71               	goto	l191
  2958  056E                     l190:	
  2959                           ;LCD.c: 16:     else
  2960                           
  2961                           
  2962                           ;LCD.c: 17:         RD4 = 0;
  2963  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2964  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0570  1208               	bcf	8,4	;volatile
  2966  0571                     l191:
  2967                           
  2968                           ;LCD.c: 19:     if (a & 2)
  2969  0571  1CF2               	btfss	Lcd_Port@a,1
  2970  0572  2D74               	goto	u501
  2971  0573  2D75               	goto	u500
  2972  0574                     u501:
  2973  0574  2D77               	goto	l192
  2974  0575                     u500:
  2975  0575                     l1284:
  2976                           
  2977                           ;LCD.c: 20:         RD5 = 1;
  2978  0575  1688               	bsf	8,5	;volatile
  2979  0576  2D78               	goto	l193
  2980  0577                     l192:	
  2981                           ;LCD.c: 21:     else
  2982                           
  2983                           
  2984                           ;LCD.c: 22:         RD5 = 0;
  2985  0577  1288               	bcf	8,5	;volatile
  2986  0578                     l193:
  2987                           
  2988                           ;LCD.c: 24:     if (a & 4)
  2989  0578  1D72               	btfss	Lcd_Port@a,2
  2990  0579  2D7B               	goto	u511
  2991  057A  2D7C               	goto	u510
  2992  057B                     u511:
  2993  057B  2D7E               	goto	l194
  2994  057C                     u510:
  2995  057C                     l1286:
  2996                           
  2997                           ;LCD.c: 25:         RD6 = 1;
  2998  057C  1708               	bsf	8,6	;volatile
  2999  057D  2D7F               	goto	l195
  3000  057E                     l194:	
  3001                           ;LCD.c: 26:     else
  3002                           
  3003                           
  3004                           ;LCD.c: 27:         RD6 = 0;
  3005  057E  1308               	bcf	8,6	;volatile
  3006  057F                     l195:
  3007                           
  3008                           ;LCD.c: 29:     if (a & 8)
  3009  057F  1DF2               	btfss	Lcd_Port@a,3
  3010  0580  2D82               	goto	u521
  3011  0581  2D83               	goto	u520
  3012  0582                     u521:
  3013  0582  2D85               	goto	l196
  3014  0583                     u520:
  3015  0583                     l1288:
  3016                           
  3017                           ;LCD.c: 30:         RD7 = 1;
  3018  0583  1788               	bsf	8,7	;volatile
  3019  0584  2D86               	goto	l198
  3020  0585                     l196:	
  3021                           ;LCD.c: 31:     else
  3022                           
  3023                           
  3024                           ;LCD.c: 32:         RD7 = 0;
  3025  0585  1388               	bcf	8,7	;volatile
  3026  0586                     l198:
  3027  0586  0008               	return
  3028  0587                     __end_of_Lcd_Port:
  3029                           
  3030                           	psect	text14
  3031  05D7                     __ptext14:	
  3032 ;; *************** function _I2C_Master_Write *****************
  3033 ;; Defined at:
  3034 ;;		line 65 in file "I2C.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  d               2    2[COMMON] unsigned int 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         2       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         2       0       0       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    2
  3055 ;; This function calls:
  3056 ;;		_I2C_Master_Wait
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           
  3063                           ;psect for function _I2C_Master_Write
  3064  05D7                     _I2C_Master_Write:
  3065  05D7                     l1566:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3068                           
  3069                           
  3070                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3071  05D7  120A  118A  25CA  120A  118A  	fcall	_I2C_Master_Wait
  3072  05DC                     l1568:
  3073                           
  3074                           ;I2C.c: 68:     SSPBUF = d;
  3075  05DC  0872               	movf	I2C_Master_Write@d,w
  3076  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3077  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3078  05DF  0093               	movwf	19	;volatile
  3079  05E0                     l165:
  3080  05E0  0008               	return
  3081  05E1                     __end_of_I2C_Master_Write:
  3082                           
  3083                           	psect	text15
  3084  05E1                     __ptext15:	
  3085 ;; *************** function _I2C_Master_Stop *****************
  3086 ;; Defined at:
  3087 ;;		line 55 in file "I2C.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    2
  3108 ;; This function calls:
  3109 ;;		_I2C_Master_Wait
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           
  3116                           ;psect for function _I2C_Master_Stop
  3117  05E1                     _I2C_Master_Stop:
  3118  05E1                     l1586:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3121                           
  3122                           
  3123                           ;I2C.c: 57:     I2C_Master_Wait();
  3124  05E1  120A  118A  25CA  120A  118A  	fcall	_I2C_Master_Wait
  3125  05E6                     l1588:
  3126                           
  3127                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3128  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3129  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3130  05E8  1511               	bsf	17,2	;volatile
  3131  05E9                     l162:
  3132  05E9  0008               	return
  3133  05EA                     __end_of_I2C_Master_Stop:
  3134                           
  3135                           	psect	text16
  3136  05EA                     __ptext16:	
  3137 ;; *************** function _I2C_Master_Start *****************
  3138 ;; Defined at:
  3139 ;;		line 39 in file "I2C.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0
  3156 ;;      Totals:         0       0       0       0       0
  3157 ;;Total ram usage:        0 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    2
  3160 ;; This function calls:
  3161 ;;		_I2C_Master_Wait
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _I2C_Master_Start
  3169  05EA                     _I2C_Master_Start:
  3170  05EA                     l1562:	
  3171                           ;incstack = 0
  3172                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3173                           
  3174                           
  3175                           ;I2C.c: 41:     I2C_Master_Wait();
  3176  05EA  120A  118A  25CA  120A  118A  	fcall	_I2C_Master_Wait
  3177  05EF                     l1564:
  3178                           
  3179                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3180  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  3181  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  3182  05F1  1411               	bsf	17,0	;volatile
  3183  05F2                     l156:
  3184  05F2  0008               	return
  3185  05F3                     __end_of_I2C_Master_Start:
  3186                           
  3187                           	psect	text17
  3188  0537                     __ptext17:	
  3189 ;; *************** function _I2C_Master_Read *****************
  3190 ;; Defined at:
  3191 ;;		line 74 in file "I2C.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  a               2    2[COMMON] unsigned short 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  temp            2    6[COMMON] unsigned short 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    2[COMMON] unsigned short 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         2       0       0       0       0
  3206 ;;      Locals:         2       0       0       0       0
  3207 ;;      Temps:          2       0       0       0       0
  3208 ;;      Totals:         6       0       0       0       0
  3209 ;;Total ram usage:        6 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    2
  3212 ;; This function calls:
  3213 ;;		_I2C_Master_Wait
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _I2C_Master_Read
  3221  0537                     _I2C_Master_Read:
  3222  0537                     l1570:	
  3223                           ;incstack = 0
  3224                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3225                           
  3226                           
  3227                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3228  0537  120A  118A  25CA  120A  118A  	fcall	_I2C_Master_Wait
  3229  053C                     l1572:
  3230                           
  3231                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3232  053C  1683               	bsf	3,5	;RP0=1, select bank1
  3233  053D  1303               	bcf	3,6	;RP1=0, select bank1
  3234  053E  1591               	bsf	17,3	;volatile
  3235                           
  3236                           ;I2C.c: 79:     I2C_Master_Wait();
  3237  053F  120A  118A  25CA  120A  118A  	fcall	_I2C_Master_Wait
  3238  0544                     l1574:
  3239                           
  3240                           ;I2C.c: 80:     temp = SSPBUF;
  3241  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0546  0813               	movf	19,w	;volatile
  3244  0547  00F4               	movwf	??_I2C_Master_Read
  3245  0548  01F5               	clrf	??_I2C_Master_Read+1
  3246  0549  0874               	movf	??_I2C_Master_Read,w
  3247  054A  00F6               	movwf	I2C_Master_Read@temp
  3248  054B  0875               	movf	??_I2C_Master_Read+1,w
  3249  054C  00F7               	movwf	I2C_Master_Read@temp+1
  3250  054D                     l1576:
  3251                           
  3252                           ;I2C.c: 81:     I2C_Master_Wait();
  3253  054D  120A  118A  25CA  120A  118A  	fcall	_I2C_Master_Wait
  3254  0552                     l1578:
  3255                           
  3256                           ;I2C.c: 82:     if(a == 1){
  3257  0552  0372               	decf	I2C_Master_Read@a,w
  3258  0553  0473               	iorwf	I2C_Master_Read@a+1,w
  3259  0554  1D03               	btfss	3,2
  3260  0555  2D57               	goto	u911
  3261  0556  2D58               	goto	u910
  3262  0557                     u911:
  3263  0557  2D5C               	goto	l168
  3264  0558                     u910:
  3265  0558                     l1580:
  3266                           
  3267                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3268  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0559  1303               	bcf	3,6	;RP1=0, select bank1
  3270  055A  1291               	bcf	17,5	;volatile
  3271                           
  3272                           ;I2C.c: 84:     }else{
  3273  055B  2D5F               	goto	l169
  3274  055C                     l168:
  3275                           
  3276                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3277  055C  1683               	bsf	3,5	;RP0=1, select bank1
  3278  055D  1303               	bcf	3,6	;RP1=0, select bank1
  3279  055E  1691               	bsf	17,5	;volatile
  3280  055F                     l169:	
  3281                           ;I2C.c: 86:     }
  3282                           
  3283                           
  3284                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3285  055F  1611               	bsf	17,4	;volatile
  3286  0560                     l1582:
  3287                           
  3288                           ;I2C.c: 88:     return temp;
  3289  0560  0877               	movf	I2C_Master_Read@temp+1,w
  3290  0561  00F3               	movwf	?_I2C_Master_Read+1
  3291  0562  0876               	movf	I2C_Master_Read@temp,w
  3292  0563  00F2               	movwf	?_I2C_Master_Read
  3293  0564                     l170:
  3294  0564  0008               	return
  3295  0565                     __end_of_I2C_Master_Read:
  3296                           
  3297                           	psect	text18
  3298  05CA                     __ptext18:	
  3299 ;; *************** function _I2C_Master_Wait *****************
  3300 ;; Defined at:
  3301 ;;		line 32 in file "I2C.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_I2C_Master_Start
  3326 ;;		_I2C_Master_Stop
  3327 ;;		_I2C_Master_Write
  3328 ;;		_I2C_Master_Read
  3329 ;;		_I2C_Master_RepeatedStart
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _I2C_Master_Wait
  3335  05CA                     _I2C_Master_Wait:
  3336  05CA                     l1326:	
  3337                           ;incstack = 0
  3338                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3339                           
  3340  05CA                     l150:	
  3341                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3342                           
  3343  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3344  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  3345  05CC  1914               	btfsc	20,2	;volatile
  3346  05CD  2DCF               	goto	u611
  3347  05CE  2DD0               	goto	u610
  3348  05CF                     u611:
  3349  05CF  2DCA               	goto	l150
  3350  05D0                     u610:
  3351  05D0                     l1328:
  3352  05D0  0811               	movf	17,w	;volatile
  3353  05D1  391F               	andlw	31
  3354  05D2  1D03               	btfss	3,2
  3355  05D3  2DD5               	goto	u621
  3356  05D4  2DD6               	goto	u620
  3357  05D5                     u621:
  3358  05D5  2DCA               	goto	l150
  3359  05D6                     u620:
  3360  05D6                     l153:
  3361  05D6  0008               	return
  3362  05D7                     __end_of_I2C_Master_Wait:
  3363                           
  3364                           	psect	text19
  3365  0587                     __ptext19:	
  3366 ;; *************** function _isr *****************
  3367 ;; Defined at:
  3368 ;;		line 51 in file "main_master.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		status,2
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          2       0       0       0       0
  3385 ;;      Totals:         2       0       0       0       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		Interrupt level 1
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _isr
  3397  0587                     _isr:
  3398  0587                     i1l1590:
  3399                           
  3400                           ;main_master.c: 53:         Lcd_Set_Cursor(1,1);
  3401  0587  1C0B               	btfss	11,0	;volatile
  3402  0588  2D8A               	goto	u92_21
  3403  0589  2D8B               	goto	u92_20
  3404  058A                     u92_21:
  3405  058A  2D9C               	goto	i1l99
  3406  058B                     u92_20:
  3407  058B                     i1l1592:
  3408                           
  3409                           ;main_master.c: 54:         Lcd_Write_String("CONT: STAT: TEMP:");;main_master.c: 55:   
      +                                sprintf(buffer, "%d ", val);
  3410  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3411  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3412  058D  1806               	btfsc	6,0	;volatile
  3413  058E  2D90               	goto	u93_21
  3414  058F  2D91               	goto	u93_20
  3415  0590                     u93_21:
  3416  0590  2D95               	goto	i1l96
  3417  0591                     u93_20:
  3418  0591                     i1l1594:
  3419                           
  3420                           ;main_master.c: 56:         sprintf(buffer2, "%d ", val2);;main_master.c: 57:         Lc
      +                          d_Set_Cursor(2,2);
  3421  0591  1408               	bsf	8,0	;volatile
  3422                           
  3423                           ;main_master.c: 58:         Lcd_Write_String(buffer);
  3424  0592  01E0               	clrf	_stat
  3425  0593  0AE0               	incf	_stat,f
  3426                           
  3427                           ;main_master.c: 59:         Lcd_Set_Cursor(2,14);
  3428  0594  2D9B               	goto	i1l1600
  3429  0595                     i1l96:	
  3430                           ;main_master.c: 60:         Lcd_Write_String(buffer2);
  3431                           
  3432  0595  1C06               	btfss	6,0	;volatile
  3433  0596  2D98               	goto	u94_21
  3434  0597  2D99               	goto	u94_20
  3435  0598                     u94_21:
  3436  0598  2D9B               	goto	i1l1600
  3437  0599                     u94_20:
  3438  0599                     i1l1596:
  3439                           
  3440                           ;main_master.c: 61: ;main_master.c: 62:         if (val1==1){
  3441  0599  1008               	bcf	8,0	;volatile
  3442  059A                     i1l1598:
  3443                           
  3444                           ;main_master.c: 63:             Lcd_Set_Cursor(2,8);
  3445  059A  01E0               	clrf	_stat
  3446  059B                     i1l1600:
  3447                           
  3448                           ;main_master.c: 65:         }
  3449  059B  100B               	bcf	11,0	;volatile
  3450  059C                     i1l99:
  3451  059C  0871               	movf	??_isr+1,w
  3452  059D  008A               	movwf	10
  3453  059E  0E70               	swapf	??_isr,w
  3454  059F  0083               	movwf	3
  3455  05A0  0EFE               	swapf	btemp,f
  3456  05A1  0E7E               	swapf	btemp,w
  3457  05A2  0009               	retfie
  3458  05A3                     __end_of_isr:
  3459  007E                     btemp	set	126	;btemp
  3460  007E                     wtemp0	set	126
  3461                           
  3462                           	psect	intentry
  3463  0004                     __pintentry:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _isr: [status,2]
  3466                           
  3467  0004                     interrupt_function:
  3468  007E                     saved_w	set	btemp
  3469  0004  00FE               	movwf	btemp
  3470  0005  0E03               	swapf	3,w
  3471  0006  00F0               	movwf	??_isr
  3472  0007  080A               	movf	10,w
  3473  0008  00F1               	movwf	??_isr+1
  3474  0009  120A  118A  2D87   	ljmp	_isr
  3475                           
  3476                           	psect	config
  3477                           
  3478                           ;Config register CONFIG1 @ 0x2007
  3479                           ;	Oscillator Selection bits
  3480                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3481                           ;	Watchdog Timer Enable bit
  3482                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3483                           ;	Power-up Timer Enable bit
  3484                           ;	PWRTE = OFF, PWRT disabled
  3485                           ;	RE3/MCLR pin function select bit
  3486                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3487                           ;	Code Protection bit
  3488                           ;	CP = OFF, Program memory code protection is disabled
  3489                           ;	Data Code Protection bit
  3490                           ;	CPD = OFF, Data memory code protection is disabled
  3491                           ;	Brown Out Reset Selection bits
  3492                           ;	BOREN = OFF, BOR disabled
  3493                           ;	Internal External Switchover bit
  3494                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3495                           ;	Fail-Safe Clock Monitor Enabled bit
  3496                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3497                           ;	Low Voltage Programming Enable bit
  3498                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3499                           ;	In-Circuit Debugger Mode bit
  3500                           ;	DEBUG = 0x1, unprogrammed default
  3501  2007                     	org	8199
  3502  2007  20D4               	dw	8404
  3503                           
  3504                           ;Config register CONFIG2 @ 0x2008
  3505                           ;	Brown-out Reset Selection bit
  3506                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3507                           ;	Flash Program Memory Self Write Enable bits
  3508                           ;	WRT = OFF, Write protection off
  3509  2008                     	org	8200
  3510  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     63      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[4]), STR_4(CODE[3]), main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    3996
                                             17 BANK0     46    46      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     648
                                              7 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     760
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      50       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      50      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 31 20:51:38 2021

                        pc 0002                         _R1 0063                         _R2 0062  
                       fsr 0004                        l112 0393                        l201 05BC  
                      l210 0346                        l204 05C9                        l213 02EE  
                      l150 05CA                        l222 03D9                        l216 0492  
                      l153 05D6                        l170 0564                        l162 05E9  
                      l147 04CA                        l156 05F2                        l165 05E0  
                      l190 056E                        l191 0571                        l168 055C  
                      l192 0577                        l169 055F                        l193 0578  
                      l194 057E                        l338 0229                        l195 057F  
                      l196 0585                        l198 0586                        l614 041D  
                      l624 0459                        l378 0291                        _GIE 005F  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u500 0575  
                      u501 0574                        u510 057C                        u511 057B  
                      u520 0583                        u600 04AA                        u521 0582  
                      u610 05D0                        u530 023C                        u611 05CF  
                      u531 023B                        u620 05D6                        u700 0419  
                      u621 05D5                        u605 04A5                        u701 0418  
                      u550 0250                        u710 0426                        u551 024F  
                      u711 0425                        u640 03E2                        u545 0241  
                      u641 03E1                        u490 056A                        u810 03A3  
                      u570 026B                        u730 0438                        u491 0569  
                      u635 046B                        u571 026A                        u731 0437  
                      u820 03C7                        u660 03F4                        u740 0442  
                      u900 0225                        u805 032A                        u565 0252  
                      u661 03F3                        u741 0441                        u725 042A  
                      u901 0224                        u910 0558                        u830 03D9  
                      u590 0289                        u911 0557                        u831 03D8  
                      u591 0288                        u575 0267                        u655 03E6  
                      u680 0405                        u760 0455                        u840 014E  
                      u585 027B                        u681 0404                        u761 0454  
                      u745 043E                        u841 014D                        u770 02F7  
                      u850 0188                        u771 02F6                        u675 03F5  
                      u755 0449                        u851 0187                        u860 01AE  
                      u685 0401                        u861 01AD                        u790 0322  
                      u870 01B9                        u950 00A7                        u791 0321  
                      u695 040D                        u871 01B8                        u951 00A6  
                      u880 01BF                        u785 02FF                        u881 01BE  
                      u865 01AA                        u890 0213                        u891 0212  
                      u967 00D6                        u977 0105                        u987 0135  
                      u997 047B                        _isr 0587                        fsr0 0004  
                      indf 0000                main@buffer2 0048                       l1300 0259  
                     l1302 026B                       l1310 0289                       l1304 0279  
                     l1320 04C7                       l1400 0448                       l1330 05A4  
                     l1306 027A                       l1322 04C8                       l1314 0493  
                     l1410 034D                       l1402 044F                       l1332 05A7  
                     l1340 045B                       l1308 0283                       l1324 04C9  
                     l1316 0497                       l1420 0363                       l1412 0351  
                     l1404 0455                       l1500 0143                       l1326 05CA  
                     l1334 05AD                       l1350 047E                       l1342 0465  
                     l1318 049A                       l1430 036D                       l1422 0364  
                     l1414 0354                       l1502 0148                       l1328 05D0  
                     l1280 0566                       l1336 05B0                       l1352 0481  
                     l1344 0468                       l1440 0377                       l1432 036F  
                     l1424 0365                       l1416 035E                       l1408 0347  
                     l1360 03DA                       l1520 0188                       l1512 015B  
                     l1504 014E                       l1282 056A                       l1338 05B9  
                     l1354 0487                       l1346 0476                       l1290 022A  
                     l1450 037E                       l1442 0378                       l1434 0372  
                     l1426 0366                       l1418 0361                       l1370 03F0  
                     l1362 03DC                       l1530 0193                       l1522 018C  
                     l1514 0178                       l1506 0155                       l1610 0032  
                     l1602 001A                       l1284 0575                       l1460 0292  
                     l1356 048A                       l1348 0479                       l1292 023C  
                     l1452 0381                       l1444 037B                       l1436 0373  
                     l1428 0369                       l1380 0413                       l1372 03F4  
                     l1364 03E2                       l1540 01C6                       l1524 0191  
                     l1516 0180                       l1508 015A                       l1620 0050  
                     l1612 0036                       l1604 0024                       l1286 057C  
                     l1470 05BD                       l1462 0298                       l1358 048F  
                     l1294 023F                       l1454 0382                       l1446 037C  
                     l1438 0374                       l1374 0405                       l1366 03E5  
                     l1382 0419                       l1390 0429                       l1550 020A  
                     l1542 01CA                       l1534 01AF                       l1518 0184  
                     l1630 0097                       l1622 0063                       l1614 003A  
                     l1606 002A                       l1288 0583                       l1464 02A1  
                     l1480 0313                       l1472 02F2                       l1296 024C  
                     l1456 0383                       l1448 037D                       l1376 040B  
                     l1368 03EC                       l1392 0430                       l1544 01CF  
                     l1536 01B9                       l1552 0213                       l1640 00C5  
                     l1632 00A0                       l1624 0076                       l1616 003F  
                     l1608 002E                       l1570 0537                       l1562 05EA  
                     l1466 02B0                       l1490 033E                       l1474 02F7  
                     l1482 031C                       l1298 0250                       l1458 0384  
                     l1378 040C                       l1394 0434                       l1386 041E  
                     l1546 01FF                       l1538 01BF                       l1554 0225  
                     l1650 00F8                       l1642 00CE                       l1634 00A7  
                     l1626 0082                       l1618 0047                       l1580 0558  
                     l1572 053C                       l1564 05EF                       l1468 02B6  
                     l1484 0322                       l1476 0308                       l1492 0394  
                     l1396 0438                       l1388 0426                       l1548 0206  
                     l1660 0128                       l1652 00FD                       l1644 00DC  
                     l1636 00B1                       l1628 008B                       l1582 0560  
                     l1574 0544                       l1566 05D7                       l1486 0333  
                     l1478 030D                       l1494 0399                       l1398 0442  
                     l1662 012D                       l1654 010C                       l1646 00E1  
                     l1638 00BB                       l1576 054D                       l1568 05DC  
                     l1488 0338                       l1496 03B5                       l1656 0111  
                     l1648 00EA                       l1578 0552                       l1586 05E1  
                     l1498 03BD                       l1658 011A                       l1588 05E6  
                     l1692 016D                       ?_isr 0070                       STR_1 051A  
                     STR_2 052C                       STR_3 052C                       STR_4 0534  
                     STR_5 0530                       u1007 048C                       u1017 029C  
                     u1027 02AB                       u1037 02BA                       u1047 05B4  
                     _PEIE 005E                       _RBIF 0058                       i1l96 0595  
                     i1l99 059C                       _TXIF 0064                       _WPUB 0095  
        ?_Lcd_Write_String 0077                       _cont 005F                       _main 001A  
                     _temp 0061                       _stat 0060                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0079            __end_of_Lcd_Cmd 05BD  
                    ??_isr 0070           ?_I2C_Master_Init 0025           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ANSEL 0188            __end_of___lldiv 0292            __end_of___lwdiv 041E  
          __end_of___lwmod 045A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    u92_20 058B                      u92_21 058A                      u93_20 0591  
                    u93_21 0590                      u94_20 0599                      u94_21 0598  
                    _TXREG 0019            __end_of_dpowers 051A                      _setup 0347  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 022A           __end_of_Lcd_Init 02EF           __end_of_Lcd_Port 0587  
          __initialization 000F               __end_of_main 0140                     ??_main 0031  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074                     ?_setup 0070  
                   _ANSELH 0189                     i1l1600 059B                     i1l1590 0587  
                   i1l1592 058B                     i1l1594 0591                     i1l1596 0599  
                   i1l1598 059A                  ??_Lcd_Cmd 0073                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0039                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 007A                  ??___lwdiv 0076                  ??___lwmod 007A  
                   saved_w 007E                  ??_sprintf 0027            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
  __end_of__initialization 0016          __end_of_Lcd_Clear 05CA             __pcstackCOMMON 0070  
            __end_of_setup 0394             _Lcd_Set_Cursor 02EF             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007B  
               __pbssBANK0 005F                 __pmaintext 001A                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0347                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0500             _Lcd_Write_Char 045A                    _Lcd_Cmd 05A3  
                  ___lldiv 022A                    ___lwdiv 03DA                    ___lwmod 041E  
          ?_Lcd_Set_Cursor 0076                    __ptext1 0140                    __ptext2 041E  
                  __ptext3 03DA                    __ptext4 0347                    __ptext5 0493  
                  __ptext6 022A                    __ptext7 0394                    __ptext8 045A  
                  __ptext9 02EF                    _dpowers 0510               __size_of_isr 001C  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 0140                    main@val 005E  
   __end_of_Lcd_Write_Char 0493       end_of_initialization 0016  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0024  
                _RCSTAbits 0018           I2C_Master_Init@c 0025           I2C_Master_Read@a 0072  
                Lcd_Port@a 0072                  _PORTBbits 0006                  _PORTDbits 0008  
                _TRISBbits 0086                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0020                 main@buffer 0034  
                _TXSTAbits 0098                  _Lcd_Clear 05BD           _Lcd_Write_String 0394  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 05A3  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022          ??_I2C_Master_Init 0029  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 002B                sprintf@prec 002C           _I2C_Master_Start 05EA  
         _I2C_Master_Write 05D7           ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077  
                 ?___lldiv 0072                   ?___lwdiv 0072                   ?___lwmod 0020  
                __pstrings 0500           ___lwdiv@quotient 0077                   ?_sprintf 0024  
           __size_of_setup 004D          interrupt_function 0004                   _IOCBbits 0096  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              ??_Lcd_Clear 0076                __stringbase 050F           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 0292                   _Lcd_Port 0565        I2C_Master_Read@temp 0076  
 __end_of_Lcd_Write_String 03DA           __size_of_Lcd_Cmd 001A           __size_of___lldiv 0068  
         __size_of___lwdiv 0044           __size_of___lwmod 003C         __end_of__stringtab 0510  
               sprintf@val 002D            _I2C_Master_Init 0493            _I2C_Master_Read 0537  
          _I2C_Master_Wait 05CA            _I2C_Master_Stop 05E1            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 0292                   __ptext11 05BD  
                 __ptext12 05A3                   __ptext13 0565                   __ptext14 05D7  
                 __ptext15 05E1                   __ptext16 05EA                   __ptext17 0537  
                 __ptext18 05CA                   __ptext19 0587           __size_of_sprintf 00EA  
            __size_of_main 0126                   main@val1 005D                   main@val2 005C  
 __end_of_I2C_Master_Start 05F3   __end_of_I2C_Master_Write 05E1                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0074                   intlevel1 0000                  sprintf@ap 002A  
                sprintf@sp 002F           ___lwmod@dividend 0022           ___lldiv@dividend 0076  
                stringcode 050A                 _OSCCONbits 008F    __end_of_I2C_Master_Init 04CB  
  __end_of_I2C_Master_Read 0565    __end_of_I2C_Master_Wait 05D7    __end_of_I2C_Master_Stop 05EA  
       Lcd_Set_Cursor@temp 0023                   sprintf@c 0030                   sprintf@f 0024  
         ___lldiv@quotient 0020          I2C_Master_Write@d 0072            ___lwmod@divisor 0020  
          ___lwmod@counter 007B                   stringdir 050A                   stringtab 0500  
              _SSPCON2bits 0091  
