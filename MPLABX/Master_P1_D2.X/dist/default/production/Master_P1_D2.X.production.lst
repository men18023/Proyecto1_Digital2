

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 15:24:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  06BA                     __pstrings:
   387  06BA                     stringtab:
   388  06BA                     __stringtab:
   389                           
   390                           ;	String table - string pointers are 1 byte each
   391  06BA  1BFF               	btfsc	btemp+1,7
   392  06BB  2EC4               	ljmp	stringcode
   393  06BC  1383               	bcf	3,7
   394  06BD  187F               	btfsc	btemp+1,0
   395  06BE  1783               	bsf	3,7
   396  06BF  0800               	movf	0,w
   397  06C0  0A84               	incf	4,f
   398  06C1  1903               	skipnz
   399  06C2  0AFF               	incf	btemp+1,f
   400  06C3  0008               	return
   401  06C4                     stringcode:
   402  06C4                     stringdir:
   403  06C4  3006               	movlw	high stringdir
   404  06C5  008A               	movwf	10
   405  06C6  0804               	movf	4,w
   406  06C7  0A84               	incf	4,f
   407  06C8  0782               	addwf	2,f
   408  06C9                     __stringbase:
   409  06C9  3400               	retlw	0
   410  06CA                     __end_of__stringtab:
   411  06CA                     _dpowers:
   412  06CA  3401               	retlw	1
   413  06CB  3400               	retlw	0
   414  06CC  340A               	retlw	10
   415  06CD  3400               	retlw	0
   416  06CE  3464               	retlw	100
   417  06CF  3400               	retlw	0
   418  06D0  34E8               	retlw	232
   419  06D1  3403               	retlw	3
   420  06D2  3410               	retlw	16
   421  06D3  3427               	retlw	39
   422  06D4                     __end_of_dpowers:
   423  0013                     _SSPBUF	set	19
   424  0014                     _SSPCON	set	20
   425  0019                     _TXREG	set	25
   426  000C                     _PIR1bits	set	12
   427  0018                     _RCSTAbits	set	24
   428  0009                     _PORTE	set	9
   429  0008                     _PORTD	set	8
   430  0007                     _PORTC	set	7
   431  0006                     _PORTB	set	6
   432  0005                     _PORTA	set	5
   433  000B                     _INTCONbits	set	11
   434  0008                     _PORTDbits	set	8
   435  0006                     _PORTBbits	set	6
   436  0043                     _RD3	set	67
   437  0047                     _RD7	set	71
   438  0046                     _RD6	set	70
   439  0045                     _RD5	set	69
   440  0044                     _RD4	set	68
   441  0063                     _SSPIF	set	99
   442  005E                     _PEIE	set	94
   443  005F                     _GIE	set	95
   444  0064                     _TXIF	set	100
   445  0058                     _RBIF	set	88
   446  0091                     _SSPCON2bits	set	145
   447  0094                     _SSPSTAT	set	148
   448  0093                     _SSPADD	set	147
   449  0091                     _SSPCON2	set	145
   450  008C                     _PIE1bits	set	140
   451  009A                     _SPBRGH	set	154
   452  0099                     _SPBRG	set	153
   453  0098                     _TXSTAbits	set	152
   454  0096                     _IOCBbits	set	150
   455  0095                     _WPUB	set	149
   456  0081                     _OPTION_REGbits	set	129
   457  0085                     _TRISA	set	133
   458  0088                     _TRISD	set	136
   459  0087                     _TRISCbits	set	135
   460  0086                     _TRISBbits	set	134
   461  008F                     _OSCCONbits	set	143
   462  0463                     _SSPIE	set	1123
   463  043C                     _TRISC4	set	1084
   464  043B                     _TRISC3	set	1083
   465  0187                     _BAUDCTLbits	set	391
   466  0189                     _ANSELH	set	393
   467  0188                     _ANSEL	set	392
   468  06D4                     STR_1:
   469  06D4  3443               	retlw	67	;'C'
   470  06D5  344F               	retlw	79	;'O'
   471  06D6  344E               	retlw	78	;'N'
   472  06D7  3454               	retlw	84	;'T'
   473  06D8  343A               	retlw	58	;':'
   474  06D9  3420               	retlw	32	;' '
   475  06DA  3453               	retlw	83	;'S'
   476  06DB  3454               	retlw	84	;'T'
   477  06DC  3441               	retlw	65	;'A'
   478  06DD  3454               	retlw	84	;'T'
   479  06DE  343A               	retlw	58	;':'
   480  06DF  3420               	retlw	32	;' '
   481  06E0  3454               	retlw	84	;'T'
   482  06E1  3445               	retlw	69	;'E'
   483  06E2  344D               	retlw	77	;'M'
   484  06E3  3450               	retlw	80	;'P'
   485  06E4  343A               	retlw	58	;':'
   486  06E5  3400               	retlw	0
   487  06E6                     STR_2:
   488  06E6  3425               	retlw	37	;'%'
   489  06E7  3464               	retlw	100	;'d'
   490  06E8  3420               	retlw	32	;' '
   491  06E9  3400               	retlw	0
   492  06EA                     STR_5:
   493  06EA  344F               	retlw	79	;'O'
   494  06EB  3446               	retlw	70	;'F'
   495  06EC  3446               	retlw	70	;'F'
   496  06ED  3400               	retlw	0
   497  06EE                     STR_4:
   498  06EE  344F               	retlw	79	;'O'
   499  06EF  344E               	retlw	78	;'N'
   500  06F0  3400               	retlw	0
   501  06E6                     
   502                           	psect	cinit
   503  000F                     start_initialization:	
   504                           ; #config settings
   505                           
   506  000F                     __initialization:
   507                           
   508                           ; Clear objects allocated to COMMON
   509  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   510  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   511                           
   512                           ; Clear objects allocated to BANK0
   513  0011  1283               	bcf	3,5	;RP0=0, select bank0
   514  0012  1303               	bcf	3,6	;RP1=0, select bank0
   515  0013  01E1               	clrf	__pbssBANK0& (0+127)
   516  0014  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   517  0015  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   518  0016  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   519  0017  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   520  0018  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   521  0019  01E7               	clrf	(__pbssBANK0+6)& (0+127)
   522  001A  01E8               	clrf	(__pbssBANK0+7)& (0+127)
   523  001B  01E9               	clrf	(__pbssBANK0+8)& (0+127)
   524  001C  01EA               	clrf	(__pbssBANK0+9)& (0+127)
   525  001D  01EB               	clrf	(__pbssBANK0+10)& (0+127)
   526  001E                     end_of_initialization:	
   527                           ;End of C runtime variable initialization code
   528                           
   529  001E                     __end_of__initialization:
   530  001E  0183               	clrf	3
   531  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   532                           
   533                           	psect	bssCOMMON
   534  007A                     __pbssCOMMON:
   535  007A                     _unidades:
   536  007A                     	ds	1
   537  007B                     _decenas:
   538  007B                     	ds	1
   539                           
   540                           	psect	bssBANK0
   541  0061                     __pbssBANK0:
   542  0061                     _uni:
   543  0061                     	ds	1
   544  0062                     _dec:
   545  0062                     	ds	1
   546  0063                     _cen:
   547  0063                     	ds	1
   548  0064                     _residuo:
   549  0064                     	ds	1
   550  0065                     _centenas:
   551  0065                     	ds	1
   552  0066                     _valor:
   553  0066                     	ds	1
   554  0067                     _cont:
   555  0067                     	ds	1
   556  0068                     _stat:
   557  0068                     	ds	1
   558  0069                     _temp:
   559  0069                     	ds	1
   560  006A                     _R2:
   561  006A                     	ds	1
   562  006B                     _R1:
   563  006B                     	ds	1
   564                           
   565                           	psect	cstackCOMMON
   566  0070                     __pcstackCOMMON:
   567  0070                     ?_setup:
   568  0070                     ?_Lcd_Init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Lcd_Clear:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Start:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_Text:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_division:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_isr:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ??_isr:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_I2C_Master_Wait:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Lcd_Port:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Lcd_Cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Lcd_Write_Char:	
   605                           ; 1 bytes @ 0x0
   606                           
   607                           
   608                           ; 1 bytes @ 0x0
   609  0070                     	ds	2
   610  0072                     ??_I2C_Master_Start:
   611  0072                     ?_I2C_Master_Write:	
   612                           ; 1 bytes @ 0x2
   613                           
   614  0072                     ??_I2C_Master_Stop:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  0072                     ??_I2C_Master_Wait:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0072                     ??_Lcd_Port:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     ?_I2C_Master_Read:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ?___awdiv:	
   627                           ; 2 bytes @ 0x2
   628                           
   629  0072                     ?___awmod:	
   630                           ; 2 bytes @ 0x2
   631                           
   632  0072                     ?___lwdiv:	
   633                           ; 2 bytes @ 0x2
   634                           
   635  0072                     ?___lldiv:	
   636                           ; 2 bytes @ 0x2
   637                           
   638  0072                     Lcd_Port@a:	
   639                           ; 4 bytes @ 0x2
   640                           
   641  0072                     I2C_Master_Write@d:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     I2C_Master_Read@a:	
   645                           ; 2 bytes @ 0x2
   646                           
   647  0072                     ___awdiv@divisor:	
   648                           ; 2 bytes @ 0x2
   649                           
   650  0072                     ___awmod@divisor:	
   651                           ; 2 bytes @ 0x2
   652                           
   653  0072                     ___lwdiv@divisor:	
   654                           ; 2 bytes @ 0x2
   655                           
   656  0072                     ___lldiv@divisor:	
   657                           ; 2 bytes @ 0x2
   658                           
   659                           
   660                           ; 4 bytes @ 0x2
   661  0072                     	ds	1
   662  0073                     ??_Lcd_Cmd:
   663  0073                     ??_Lcd_Write_Char:	
   664                           ; 1 bytes @ 0x3
   665                           
   666                           
   667                           ; 1 bytes @ 0x3
   668  0073                     	ds	1
   669  0074                     ??_I2C_Master_Write:
   670  0074                     ??_I2C_Master_Read:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     Lcd_Write_Char@temp:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ___awdiv@dividend:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ___awmod@dividend:	
   680                           ; 2 bytes @ 0x4
   681                           
   682  0074                     ___lwdiv@dividend:	
   683                           ; 2 bytes @ 0x4
   684                           
   685                           
   686                           ; 2 bytes @ 0x4
   687  0074                     	ds	1
   688  0075                     Lcd_Cmd@a:
   689  0075                     Lcd_Write_Char@y:	
   690                           ; 1 bytes @ 0x5
   691                           
   692                           
   693                           ; 1 bytes @ 0x5
   694  0075                     	ds	1
   695  0076                     ??_Lcd_Init:
   696  0076                     ??_Lcd_Clear:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0076                     ?_Lcd_Set_Cursor:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     ??___awdiv:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     ??___awmod:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     ??___lwdiv:	
   709                           ; 1 bytes @ 0x6
   710                           
   711  0076                     Lcd_Set_Cursor@b:	
   712                           ; 1 bytes @ 0x6
   713                           
   714  0076                     Lcd_Write_Char@a:	
   715                           ; 1 bytes @ 0x6
   716                           
   717  0076                     I2C_Master_Read@temp:	
   718                           ; 1 bytes @ 0x6
   719                           
   720  0076                     ___lldiv@dividend:	
   721                           ; 2 bytes @ 0x6
   722                           
   723                           
   724                           ; 4 bytes @ 0x6
   725  0076                     	ds	1
   726  0077                     ??_Lcd_Set_Cursor:
   727  0077                     ?_Lcd_Write_String:	
   728                           ; 1 bytes @ 0x7
   729                           
   730  0077                     ___awmod@counter:	
   731                           ; 1 bytes @ 0x7
   732                           
   733  0077                     Lcd_Write_String@a:	
   734                           ; 1 bytes @ 0x7
   735                           
   736  0077                     ___lwdiv@quotient:	
   737                           ; 2 bytes @ 0x7
   738                           
   739                           
   740                           ; 2 bytes @ 0x7
   741  0077                     	ds	1
   742  0078                     ___awmod@sign:
   743                           
   744                           ; 1 bytes @ 0x8
   745  0078                     	ds	1
   746  0079                     division@valor:
   747  0079                     ___lwdiv@counter:	
   748                           ; 1 bytes @ 0x9
   749                           
   750                           
   751                           ; 1 bytes @ 0x9
   752  0079                     	ds	1
   753  007A                     ??_setup:
   754                           
   755                           	psect	cstackBANK0
   756  0020                     __pcstackBANK0:	
   757                           ; 1 bytes @ 0xA
   758                           
   759  0020                     ??_Lcd_Write_String:
   760  0020                     ??___lldiv:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     ?___lwmod:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0020                     Lcd_Set_Cursor@a:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0020                     ___awdiv@counter:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     ___lwmod@divisor:	
   773                           ; 1 bytes @ 0x0
   774                           
   775                           
   776                           ; 2 bytes @ 0x0
   777  0020                     	ds	1
   778  0021                     Lcd_Set_Cursor@z:
   779  0021                     ___awdiv@sign:	
   780                           ; 1 bytes @ 0x1
   781                           
   782  0021                     ___lldiv@quotient:	
   783                           ; 1 bytes @ 0x1
   784                           
   785                           
   786                           ; 4 bytes @ 0x1
   787  0021                     	ds	1
   788  0022                     Lcd_Set_Cursor@y:
   789  0022                     ___awdiv@quotient:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0022                     ___lwmod@dividend:	
   793                           ; 2 bytes @ 0x2
   794                           
   795                           
   796                           ; 2 bytes @ 0x2
   797  0022                     	ds	1
   798  0023                     Lcd_Set_Cursor@temp:
   799  0023                     Lcd_Write_String@i:	
   800                           ; 1 bytes @ 0x3
   801                           
   802                           
   803                           ; 2 bytes @ 0x3
   804  0023                     	ds	1
   805  0024                     ??_division:
   806  0024                     ??___lwmod:	
   807                           ; 1 bytes @ 0x4
   808                           
   809                           
   810                           ; 1 bytes @ 0x4
   811  0024                     	ds	1
   812  0025                     ___lldiv@counter:
   813  0025                     ___lwmod@counter:	
   814                           ; 1 bytes @ 0x5
   815                           
   816                           
   817                           ; 1 bytes @ 0x5
   818  0025                     	ds	1
   819  0026                     ?_I2C_Master_Init:
   820  0026                     ?_sprintf:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0026                     sprintf@f:	
   824                           ; 2 bytes @ 0x6
   825                           
   826  0026                     I2C_Master_Init@c:	
   827                           ; 1 bytes @ 0x6
   828                           
   829                           
   830                           ; 4 bytes @ 0x6
   831  0026                     	ds	1
   832  0027                     ??_Text:
   833                           
   834                           ; 1 bytes @ 0x7
   835  0027                     	ds	2
   836  0029                     ??_sprintf:
   837                           
   838                           ; 1 bytes @ 0x9
   839  0029                     	ds	1
   840  002A                     ??_I2C_Master_Init:
   841                           
   842                           ; 1 bytes @ 0xA
   843  002A                     	ds	2
   844  002C                     sprintf@ap:
   845                           
   846                           ; 1 bytes @ 0xC
   847  002C                     	ds	1
   848  002D                     sprintf@flag:
   849                           
   850                           ; 1 bytes @ 0xD
   851  002D                     	ds	1
   852  002E                     sprintf@prec:
   853                           
   854                           ; 1 bytes @ 0xE
   855  002E                     	ds	1
   856  002F                     sprintf@val:
   857                           
   858                           ; 2 bytes @ 0xF
   859  002F                     	ds	2
   860  0031                     sprintf@sp:
   861                           
   862                           ; 1 bytes @ 0x11
   863  0031                     	ds	1
   864  0032                     sprintf@c:
   865                           
   866                           ; 1 bytes @ 0x12
   867  0032                     	ds	1
   868  0033                     ??_main:
   869                           
   870                           ; 1 bytes @ 0x13
   871  0033                     	ds	3
   872  0036                     main@buffer:
   873                           
   874                           ; 20 bytes @ 0x16
   875  0036                     	ds	20
   876  004A                     main@buffer2:
   877                           
   878                           ; 20 bytes @ 0x2A
   879  004A                     	ds	20
   880  005E                     main@val2:
   881                           
   882                           ; 1 bytes @ 0x3E
   883  005E                     	ds	1
   884  005F                     main@val1:
   885                           
   886                           ; 1 bytes @ 0x3F
   887  005F                     	ds	1
   888  0060                     main@val:
   889                           
   890                           ; 1 bytes @ 0x40
   891  0060                     	ds	1
   892                           
   893                           	psect	maintext
   894  0022                     __pmaintext:	
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 74 in file "main_master.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  buffer2        20   42[BANK0 ] unsigned char [20]
   905 ;;  buffer         20   22[BANK0 ] unsigned char [20]
   906 ;;  buffer1        20    0        unsigned char [20]
   907 ;;  val             1   64[BANK0 ] unsigned char 
   908 ;;  val1            1   63[BANK0 ] unsigned char 
   909 ;;  val2            1   62[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : B00/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0      43       0       0       0
   921 ;;      Temps:          0       3       0       0       0
   922 ;;      Totals:         0      46       0       0       0
   923 ;;Total ram usage:       46 bytes
   924 ;; Hardware stack levels required when called:    4
   925 ;; This function calls:
   926 ;;		_I2C_Master_Read
   927 ;;		_I2C_Master_Start
   928 ;;		_I2C_Master_Stop
   929 ;;		_I2C_Master_Write
   930 ;;		_Lcd_Clear
   931 ;;		_Lcd_Init
   932 ;;		_Lcd_Set_Cursor
   933 ;;		_Lcd_Write_String
   934 ;;		_Text
   935 ;;		_setup
   936 ;;		_sprintf
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _main
   944  0022                     _main:
   945  0022                     l2236:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;main_master.c: 76: 
   951  0022  120A  118A  2536  120A  118A  	fcall	_setup
   952                           
   953                           ;main_master.c: 77:         I2C_Master_Start();
   954  0027  120A  118A  2428  120A  118A  	fcall	_Lcd_Init
   955  002C                     l2238:
   956                           
   957                           ;main_master.c: 86:         R2 = I2C_Master_Read(0);;main_master.c: 87:         I2C_Mast
      +                          er_Stop();
   958  002C  1283               	bcf	3,5	;RP0=0, select bank0
   959  002D  1303               	bcf	3,6	;RP1=0, select bank0
   960  002E  086A               	movf	_R2,w
   961  002F  00B3               	movwf	??_main
   962  0030  0833               	movf	??_main,w
   963  0031  00E9               	movwf	_temp
   964  0032                     l2240:
   965                           
   966                           ;main_master.c: 88:         _delay((unsigned long)((200)*(4000000/4000.0)));
   967  0032  086B               	movf	_R1,w
   968  0033  00B3               	movwf	??_main
   969  0034  0833               	movf	??_main,w
   970  0035  00E7               	movwf	_cont
   971  0036                     l2242:
   972                           
   973                           ;main_master.c: 89: 
   974  0036  0867               	movf	_cont,w
   975  0037  00B3               	movwf	??_main
   976  0038  0833               	movf	??_main,w
   977  0039  00E0               	movwf	main@val
   978  003A                     l2244:
   979                           
   980                           ;main_master.c: 90:         Text();
   981  003A  0868               	movf	_stat,w
   982  003B  00B3               	movwf	??_main
   983  003C  0833               	movf	??_main,w
   984  003D  00DF               	movwf	main@val1
   985  003E                     l2246:
   986                           
   987                           ;main_master.c: 91: 
   988  003E  0869               	movf	_temp,w
   989  003F  00B3               	movwf	??_main
   990  0040  0833               	movf	??_main,w
   991  0041  00DE               	movwf	main@val2
   992  0042                     l2248:
   993                           
   994                           ;main_master.c: 93:     return;
   995  0042  120A  118A  2777  120A  118A  	fcall	_Lcd_Clear
   996  0047                     l2250:
   997                           
   998                           ;main_master.c: 94: }
   999  0047  01F6               	clrf	Lcd_Set_Cursor@b
  1000  0048  0AF6               	incf	Lcd_Set_Cursor@b,f
  1001  0049  3001               	movlw	1
  1002  004A  120A  118A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1003  004F                     l2252:
  1004                           
  1005                           ;main_master.c: 95: 
  1006  004F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1007  0050  00F7               	movwf	Lcd_Write_String@a
  1008  0051  3080               	movlw	128
  1009  0052  00F8               	movwf	Lcd_Write_String@a+1
  1010  0053  120A  118A  2583  120A  118A  	fcall	_Lcd_Write_String
  1011  0058                     l2254:
  1012                           
  1013                           ;main_master.c: 96: 
  1014  0058  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1015  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1016  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1017  005B  00B3               	movwf	??_main
  1018  005C  0833               	movf	??_main,w
  1019  005D  00A6               	movwf	sprintf@f
  1020  005E  0860               	movf	main@val,w
  1021  005F  00B4               	movwf	??_main+1
  1022  0060  01B5               	clrf	??_main+2
  1023  0061  0834               	movf	??_main+1,w
  1024  0062  00A7               	movwf	?_sprintf+1
  1025  0063  0835               	movf	??_main+2,w
  1026  0064  00A8               	movwf	?_sprintf+2
  1027  0065  3036               	movlw	(low (main@buffer| 0))& (0+255)
  1028  0066  120A  118A  214D  120A  118A  	fcall	_sprintf
  1029  006B                     l2256:
  1030                           
  1031                           ;main_master.c: 97: 
  1032  006B  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1033  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1034  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1035  006E  00B3               	movwf	??_main
  1036  006F  0833               	movf	??_main,w
  1037  0070  00A6               	movwf	sprintf@f
  1038  0071  085E               	movf	main@val2,w
  1039  0072  00B4               	movwf	??_main+1
  1040  0073  01B5               	clrf	??_main+2
  1041  0074  0834               	movf	??_main+1,w
  1042  0075  00A7               	movwf	?_sprintf+1
  1043  0076  0835               	movf	??_main+2,w
  1044  0077  00A8               	movwf	?_sprintf+2
  1045  0078  304A               	movlw	(low (main@buffer2| 0))& (0+255)
  1046  0079  120A  118A  214D  120A  118A  	fcall	_sprintf
  1047  007E                     l2258:
  1048                           
  1049                           ;main_master.c: 98: void setup(void){
  1050  007E  3002               	movlw	2
  1051  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0081  00B3               	movwf	??_main
  1054  0082  0833               	movf	??_main,w
  1055  0083  00F6               	movwf	Lcd_Set_Cursor@b
  1056  0084  3002               	movlw	2
  1057  0085  120A  118A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1058  008A                     l2260:
  1059                           
  1060                           ;main_master.c: 99: 
  1061  008A  3036               	movlw	(low (main@buffer| 0))& (0+255)
  1062  008B  00F7               	movwf	Lcd_Write_String@a
  1063  008C  3000               	movlw	0
  1064  008D  00F8               	movwf	Lcd_Write_String@a+1
  1065  008E  120A  118A  2583  120A  118A  	fcall	_Lcd_Write_String
  1066  0093                     l2262:
  1067                           
  1068                           ;main_master.c: 100:     OSCCONbits.IRCF0 = 0;
  1069  0093  300E               	movlw	14
  1070  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0096  00B3               	movwf	??_main
  1073  0097  0833               	movf	??_main,w
  1074  0098  00F6               	movwf	Lcd_Set_Cursor@b
  1075  0099  3002               	movlw	2
  1076  009A  120A  118A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1077  009F                     l2264:
  1078                           
  1079                           ;main_master.c: 101:     OSCCONbits.IRCF1 = 1;
  1080  009F  304A               	movlw	(low (main@buffer2| 0))& (0+255)
  1081  00A0  00F7               	movwf	Lcd_Write_String@a
  1082  00A1  3000               	movlw	0
  1083  00A2  00F8               	movwf	Lcd_Write_String@a+1
  1084  00A3  120A  118A  2583  120A  118A  	fcall	_Lcd_Write_String
  1085  00A8                     l2266:
  1086                           
  1087                           ;main_master.c: 103:     OSCCONbits.SCS = 1;
  1088  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1089  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1090  00AA  035F               	decf	main@val1,w
  1091  00AB  1D03               	btfss	3,2
  1092  00AC  28AE               	goto	u1681
  1093  00AD  28AF               	goto	u1680
  1094  00AE                     u1681:
  1095  00AE  28C3               	goto	l2272
  1096  00AF                     u1680:
  1097  00AF                     l2268:
  1098                           
  1099                           ;main_master.c: 104: 
  1100  00AF  3008               	movlw	8
  1101  00B0  00B3               	movwf	??_main
  1102  00B1  0833               	movf	??_main,w
  1103  00B2  00F6               	movwf	Lcd_Set_Cursor@b
  1104  00B3  3002               	movlw	2
  1105  00B4  120A  118A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1106  00B9                     l2270:
  1107                           
  1108                           ;main_master.c: 105: 
  1109  00B9  3025               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1110  00BA  00F7               	movwf	Lcd_Write_String@a
  1111  00BB  3080               	movlw	128
  1112  00BC  00F8               	movwf	Lcd_Write_String@a+1
  1113  00BD  120A  118A  2583  120A  118A  	fcall	_Lcd_Write_String
  1114                           
  1115                           ;main_master.c: 106:     ANSEL = 0;
  1116  00C2  28D6               	goto	l2276
  1117  00C3                     l2272:
  1118                           
  1119                           ;main_master.c: 108: 
  1120  00C3  3008               	movlw	8
  1121  00C4  00B3               	movwf	??_main
  1122  00C5  0833               	movf	??_main,w
  1123  00C6  00F6               	movwf	Lcd_Set_Cursor@b
  1124  00C7  3002               	movlw	2
  1125  00C8  120A  118A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1126  00CD                     l2274:
  1127                           
  1128                           ;main_master.c: 109: 
  1129  00CD  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1130  00CE  00F7               	movwf	Lcd_Write_String@a
  1131  00CF  3080               	movlw	128
  1132  00D0  00F8               	movwf	Lcd_Write_String@a+1
  1133  00D1  120A  118A  2583  120A  118A  	fcall	_Lcd_Write_String
  1134  00D6                     l2276:
  1135                           
  1136                           ;main_master.c: 111:     TRISCbits.TRISC0 = 0;
  1137  00D6  300B               	movlw	11
  1138  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00D9  00B5               	movwf	??_main+2
  1141  00DA  3026               	movlw	38
  1142  00DB  00B4               	movwf	??_main+1
  1143  00DC  305D               	movlw	93
  1144  00DD  00B3               	movwf	??_main
  1145  00DE                     u1697:
  1146  00DE  0BB3               	decfsz	??_main,f
  1147  00DF  28DE               	goto	u1697
  1148  00E0  0BB4               	decfsz	??_main+1,f
  1149  00E1  28DE               	goto	u1697
  1150  00E2  0BB5               	decfsz	??_main+2,f
  1151  00E3  28DE               	goto	u1697
  1152  00E4                     l2278:
  1153                           
  1154                           ;main_master.c: 114: 
  1155  00E4  120A  118A  27A4  120A  118A  	fcall	_I2C_Master_Start
  1156  00E9                     l2280:
  1157                           
  1158                           ;main_master.c: 115: 
  1159  00E9  3051               	movlw	81
  1160  00EA  00F2               	movwf	I2C_Master_Write@d
  1161  00EB  3000               	movlw	0
  1162  00EC  00F3               	movwf	I2C_Master_Write@d+1
  1163  00ED  120A  118A  2791  120A  118A  	fcall	_I2C_Master_Write
  1164  00F2                     l2282:
  1165                           
  1166                           ;main_master.c: 116:     PORTA = 0x00;
  1167  00F2  3000               	movlw	0
  1168  00F3  00F2               	movwf	I2C_Master_Read@a
  1169  00F4  00F3               	movwf	I2C_Master_Read@a+1
  1170  00F5  120A  118A  26F1  120A  118A  	fcall	_I2C_Master_Read
  1171  00FA  0872               	movf	?_I2C_Master_Read,w
  1172  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00FD  00B3               	movwf	??_main
  1175  00FE  0833               	movf	??_main,w
  1176  00FF  00EB               	movwf	_R1
  1177  0100                     l2284:
  1178                           
  1179                           ;main_master.c: 117:     PORTB = 0x00;
  1180  0100  120A  118A  279B  120A  118A  	fcall	_I2C_Master_Stop
  1181  0105                     l2286:
  1182                           
  1183                           ;main_master.c: 118:     PORTC = 0x00;
  1184  0105  3002               	movlw	2
  1185  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0108  00B5               	movwf	??_main+2
  1188  0109  3004               	movlw	4
  1189  010A  00B4               	movwf	??_main+1
  1190  010B  30B9               	movlw	185
  1191  010C  00B3               	movwf	??_main
  1192  010D                     u1707:
  1193  010D  0BB3               	decfsz	??_main,f
  1194  010E  290D               	goto	u1707
  1195  010F  0BB4               	decfsz	??_main+1,f
  1196  0110  290D               	goto	u1707
  1197  0111  0BB5               	decfsz	??_main+2,f
  1198  0112  290D               	goto	u1707
  1199  0113  2914               	nop2
  1200  0114                     l2288:
  1201                           
  1202                           ;main_master.c: 121: 
  1203  0114  120A  118A  27A4  120A  118A  	fcall	_I2C_Master_Start
  1204  0119                     l2290:
  1205                           
  1206                           ;main_master.c: 122: 
  1207  0119  3061               	movlw	97
  1208  011A  00F2               	movwf	I2C_Master_Write@d
  1209  011B  3000               	movlw	0
  1210  011C  00F3               	movwf	I2C_Master_Write@d+1
  1211  011D  120A  118A  2791  120A  118A  	fcall	_I2C_Master_Write
  1212  0122                     l2292:
  1213                           
  1214                           ;main_master.c: 123:     OPTION_REGbits.nRBPU = 0;
  1215  0122  3000               	movlw	0
  1216  0123  00F2               	movwf	I2C_Master_Read@a
  1217  0124  00F3               	movwf	I2C_Master_Read@a+1
  1218  0125  120A  118A  26F1  120A  118A  	fcall	_I2C_Master_Read
  1219  012A  0872               	movf	?_I2C_Master_Read,w
  1220  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1221  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1222  012D  00B3               	movwf	??_main
  1223  012E  0833               	movf	??_main,w
  1224  012F  00EA               	movwf	_R2
  1225  0130                     l2294:
  1226                           
  1227                           ;main_master.c: 124:     WPUB = 0b00000001;
  1228  0130  120A  118A  279B  120A  118A  	fcall	_I2C_Master_Stop
  1229  0135                     l2296:
  1230                           
  1231                           ;main_master.c: 125:     IOCBbits.IOCB0 = 1;
  1232  0135  3002               	movlw	2
  1233  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0138  00B5               	movwf	??_main+2
  1236  0139  3004               	movlw	4
  1237  013A  00B4               	movwf	??_main+1
  1238  013B  30B9               	movlw	185
  1239  013C  00B3               	movwf	??_main
  1240  013D                     u1717:
  1241  013D  0BB3               	decfsz	??_main,f
  1242  013E  293D               	goto	u1717
  1243  013F  0BB4               	decfsz	??_main+1,f
  1244  0140  293D               	goto	u1717
  1245  0141  0BB5               	decfsz	??_main+2,f
  1246  0142  293D               	goto	u1717
  1247  0143  2944               	nop2
  1248  0144                     l2298:
  1249                           
  1250                           ;main_master.c: 127: 
  1251  0144  120A  118A  2237  120A  118A  	fcall	_Text
  1252  0149  282C               	goto	l2238
  1253  014A  120A  118A  280C   	ljmp	start
  1254  014D                     __end_of_main:
  1255                           
  1256                           	psect	text1
  1257  014D                     __ptext1:	
  1258 ;; *************** function _sprintf *****************
  1259 ;; Defined at:
  1260 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  sp              1    wreg     PTR unsigned char 
  1263 ;;		 -> main@buffer2(20), main@buffer(20), 
  1264 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1265 ;;		 -> STR_3(4), STR_2(4), 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1268 ;;		 -> main@buffer2(20), main@buffer(20), 
  1269 ;;  tmpval          4    0        struct .
  1270 ;;  val             2   15[BANK0 ] unsigned int 
  1271 ;;  cp              2    0        PTR const unsigned char 
  1272 ;;  len             2    0        unsigned int 
  1273 ;;  c               1   18[BANK0 ] unsigned char 
  1274 ;;  prec            1   14[BANK0 ] char 
  1275 ;;  flag            1   13[BANK0 ] unsigned char 
  1276 ;;  ap              1   12[BANK0 ] PTR void [1]
  1277 ;;		 -> ?_sprintf(2), 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2    6[BANK0 ] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       3       0       0       0
  1288 ;;      Locals:         0       7       0       0       0
  1289 ;;      Temps:          0       3       0       0       0
  1290 ;;      Totals:         0      13       0       0       0
  1291 ;;Total ram usage:       13 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    2
  1294 ;; This function calls:
  1295 ;;		___lwdiv
  1296 ;;		___lwmod
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _sprintf
  1304  014D                     _sprintf:
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1308                           ;sprintf@sp stored from wreg
  1309  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1310  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1311  014F  00B1               	movwf	sprintf@sp
  1312  0150                     l2140:
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1315  0150  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1316  0151  00A9               	movwf	??_sprintf
  1317  0152  0829               	movf	??_sprintf,w
  1318  0153  00AC               	movwf	sprintf@ap
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1321  0154  2A20               	goto	l2192
  1322  0155                     l2142:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1325  0155  3025               	movlw	37
  1326  0156  0632               	xorwf	sprintf@c,w
  1327  0157  1903               	btfsc	3,2
  1328  0158  295A               	goto	u1611
  1329  0159  295B               	goto	u1610
  1330  015A                     u1611:
  1331  015A  2967               	goto	l2148
  1332  015B                     u1610:
  1333  015B                     l2144:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1336  015B  0832               	movf	sprintf@c,w
  1337  015C  00A9               	movwf	??_sprintf
  1338  015D  0831               	movf	sprintf@sp,w
  1339  015E  0084               	movwf	4
  1340  015F  0829               	movf	??_sprintf,w
  1341  0160  1383               	bcf	3,7	;select IRP bank0
  1342  0161  0080               	movwf	0
  1343  0162                     l2146:
  1344  0162  3001               	movlw	1
  1345  0163  00A9               	movwf	??_sprintf
  1346  0164  0829               	movf	??_sprintf,w
  1347  0165  07B1               	addwf	sprintf@sp,f
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1350  0166  2A20               	goto	l2192
  1351  0167                     l2148:
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1354  0167  01AD               	clrf	sprintf@flag
  1355  0168                     l2152:	
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1357                           
  1358  0168  3001               	movlw	1
  1359  0169  07A6               	addwf	sprintf@f,f
  1360  016A  30FF               	movlw	-1
  1361  016B  0726               	addwf	sprintf@f,w
  1362  016C  0084               	movwf	4
  1363  016D  120A  118A  26C4  120A  118A  	fcall	stringdir
  1364  0172  00B2               	movwf	sprintf@c
  1365  0173  00A9               	movwf	??_sprintf
  1366  0174  01AA               	clrf	??_sprintf+1
  1367                           
  1368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 1, Range of values is 0 to 0
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte            4     3 (average)
  1374                           ; direct_byte           11     8 (fixed)
  1375                           ; jumptable            260     6 (fixed)
  1376                           ;	Chosen strategy is simple_byte
  1377  0175  082A               	movf	??_sprintf+1,w
  1378  0176  3A00               	xorlw	0	; case 0
  1379  0177  1903               	skipnz
  1380  0178  297A               	goto	l2320
  1381  0179  2A20               	goto	l2192
  1382  017A                     l2320:
  1383                           
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 3, Range of values is 0 to 105
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte           10     6 (average)
  1389                           ; jumptable            260     6 (fixed)
  1390                           ;	Chosen strategy is simple_byte
  1391  017A  0829               	movf	??_sprintf,w
  1392  017B  3A00               	xorlw	0	; case 0
  1393  017C  1903               	skipnz
  1394  017D  2A32               	goto	l2194
  1395  017E  3A64               	xorlw	100	; case 100
  1396  017F  1903               	skipnz
  1397  0180  2985               	goto	l2154
  1398  0181  3A0D               	xorlw	13	; case 105
  1399  0182  1903               	skipnz
  1400  0183  2985               	goto	l2154
  1401  0184  2A20               	goto	l2192
  1402  0185                     l2154:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1405  0185  082C               	movf	sprintf@ap,w
  1406  0186  0084               	movwf	4
  1407  0187  1383               	bcf	3,7	;select IRP bank0
  1408  0188  0800               	movf	0,w
  1409  0189  00AF               	movwf	sprintf@val
  1410  018A  0A84               	incf	4,f
  1411  018B  0800               	movf	0,w
  1412  018C  00B0               	movwf	sprintf@val+1
  1413  018D                     l2156:
  1414  018D  3002               	movlw	2
  1415  018E  00A9               	movwf	??_sprintf
  1416  018F  0829               	movf	??_sprintf,w
  1417  0190  07AC               	addwf	sprintf@ap,f
  1418  0191                     l2158:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1421  0191  1FB0               	btfss	sprintf@val+1,7
  1422  0192  2994               	goto	u1621
  1423  0193  2995               	goto	u1620
  1424  0194                     u1621:
  1425  0194  299E               	goto	l2164
  1426  0195                     u1620:
  1427  0195                     l2160:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1430  0195  3003               	movlw	3
  1431  0196  00A9               	movwf	??_sprintf
  1432  0197  0829               	movf	??_sprintf,w
  1433  0198  04AD               	iorwf	sprintf@flag,f
  1434  0199                     l2162:
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1437  0199  09AF               	comf	sprintf@val,f
  1438  019A  09B0               	comf	sprintf@val+1,f
  1439  019B  0AAF               	incf	sprintf@val,f
  1440  019C  1903               	skipnz
  1441  019D  0AB0               	incf	sprintf@val+1,f
  1442  019E                     l2164:
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1445  019E  01B2               	clrf	sprintf@c
  1446  019F  0AB2               	incf	sprintf@c,f
  1447  01A0                     l2170:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1450  01A0  0832               	movf	sprintf@c,w
  1451  01A1  00A9               	movwf	??_sprintf
  1452  01A2  0729               	addwf	??_sprintf,w
  1453  01A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1454  01A4  0084               	movwf	4
  1455  01A5  120A  118A  26C4  120A  118A  	fcall	stringdir
  1456  01AA  00AA               	movwf	??_sprintf+1
  1457  01AB  120A  118A  26C4  120A  118A  	fcall	stringdir
  1458  01B0  00AB               	movwf	??_sprintf+2
  1459  01B1  082B               	movf	??_sprintf+2,w
  1460  01B2  0230               	subwf	sprintf@val+1,w
  1461  01B3  1D03               	skipz
  1462  01B4  29B7               	goto	u1635
  1463  01B5  082A               	movf	??_sprintf+1,w
  1464  01B6  022F               	subwf	sprintf@val,w
  1465  01B7                     u1635:
  1466  01B7  1803               	skipnc
  1467  01B8  29BA               	goto	u1631
  1468  01B9  29BB               	goto	u1630
  1469  01BA                     u1631:
  1470  01BA  29BC               	goto	l2174
  1471  01BB                     u1630:
  1472  01BB  29C6               	goto	l2176
  1473  01BC                     l2174:
  1474  01BC  3001               	movlw	1
  1475  01BD  00A9               	movwf	??_sprintf
  1476  01BE  0829               	movf	??_sprintf,w
  1477  01BF  07B2               	addwf	sprintf@c,f
  1478  01C0  3005               	movlw	5
  1479  01C1  0632               	xorwf	sprintf@c,w
  1480  01C2  1D03               	btfss	3,2
  1481  01C3  29C5               	goto	u1641
  1482  01C4  29C6               	goto	u1640
  1483  01C5                     u1641:
  1484  01C5  29A0               	goto	l2170
  1485  01C6                     u1640:
  1486  01C6                     l2176:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1489  01C6  082D               	movf	sprintf@flag,w
  1490  01C7  3903               	andlw	3
  1491  01C8  1903               	btfsc	3,2
  1492  01C9  29CB               	goto	u1651
  1493  01CA  29CC               	goto	u1650
  1494  01CB                     u1651:
  1495  01CB  29D7               	goto	l2182
  1496  01CC                     u1650:
  1497  01CC                     l2178:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1500  01CC  302D               	movlw	45
  1501  01CD  00A9               	movwf	??_sprintf
  1502  01CE  0831               	movf	sprintf@sp,w
  1503  01CF  0084               	movwf	4
  1504  01D0  0829               	movf	??_sprintf,w
  1505  01D1  1383               	bcf	3,7	;select IRP bank0
  1506  01D2  0080               	movwf	0
  1507  01D3                     l2180:
  1508  01D3  3001               	movlw	1
  1509  01D4  00A9               	movwf	??_sprintf
  1510  01D5  0829               	movf	??_sprintf,w
  1511  01D6  07B1               	addwf	sprintf@sp,f
  1512  01D7                     l2182:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1515  01D7  0832               	movf	sprintf@c,w
  1516  01D8  00A9               	movwf	??_sprintf
  1517  01D9  0829               	movf	??_sprintf,w
  1518  01DA  00AE               	movwf	sprintf@prec
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1521  01DB  2A17               	goto	l2190
  1522  01DC                     l2184:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1525  01DC  300A               	movlw	10
  1526  01DD  00A0               	movwf	___lwmod@divisor
  1527  01DE  3000               	movlw	0
  1528  01DF  00A1               	movwf	___lwmod@divisor+1
  1529  01E0  082E               	movf	sprintf@prec,w
  1530  01E1  00A9               	movwf	??_sprintf
  1531  01E2  0729               	addwf	??_sprintf,w
  1532  01E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1533  01E4  0084               	movwf	4
  1534  01E5  120A  118A  26C4  120A  118A  	fcall	stringdir
  1535  01EA  00F2               	movwf	___lwdiv@divisor
  1536  01EB  120A  118A  26C4  120A  118A  	fcall	stringdir
  1537  01F0  00F3               	movwf	___lwdiv@divisor+1
  1538  01F1  0830               	movf	sprintf@val+1,w
  1539  01F2  00F5               	movwf	___lwdiv@dividend+1
  1540  01F3  082F               	movf	sprintf@val,w
  1541  01F4  00F4               	movwf	___lwdiv@dividend
  1542  01F5  120A  118A  25C9  120A  118A  	fcall	___lwdiv
  1543  01FA  0873               	movf	?___lwdiv+1,w
  1544  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1545  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1546  01FD  00A3               	movwf	___lwmod@dividend+1
  1547  01FE  0872               	movf	?___lwdiv,w
  1548  01FF  00A2               	movwf	___lwmod@dividend
  1549  0200  120A  118A  260D  120A  118A  	fcall	___lwmod
  1550  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0207  0820               	movf	?___lwmod,w
  1553  0208  3E30               	addlw	48
  1554  0209  00AA               	movwf	??_sprintf+1
  1555  020A  082A               	movf	??_sprintf+1,w
  1556  020B  00B2               	movwf	sprintf@c
  1557  020C                     l2186:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1560  020C  0832               	movf	sprintf@c,w
  1561  020D  00A9               	movwf	??_sprintf
  1562  020E  0831               	movf	sprintf@sp,w
  1563  020F  0084               	movwf	4
  1564  0210  0829               	movf	??_sprintf,w
  1565  0211  1383               	bcf	3,7	;select IRP bank0
  1566  0212  0080               	movwf	0
  1567  0213                     l2188:
  1568  0213  3001               	movlw	1
  1569  0214  00A9               	movwf	??_sprintf
  1570  0215  0829               	movf	??_sprintf,w
  1571  0216  07B1               	addwf	sprintf@sp,f
  1572  0217                     l2190:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1575  0217  30FF               	movlw	255
  1576  0218  00A9               	movwf	??_sprintf
  1577  0219  0829               	movf	??_sprintf,w
  1578  021A  07AE               	addwf	sprintf@prec,f
  1579  021B  0A2E               	incf	sprintf@prec,w
  1580  021C  1D03               	btfss	3,2
  1581  021D  2A1F               	goto	u1661
  1582  021E  2A20               	goto	u1660
  1583  021F                     u1661:
  1584  021F  29DC               	goto	l2184
  1585  0220                     u1660:
  1586  0220                     l2192:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1589  0220  3001               	movlw	1
  1590  0221  07A6               	addwf	sprintf@f,f
  1591  0222  30FF               	movlw	-1
  1592  0223  0726               	addwf	sprintf@f,w
  1593  0224  0084               	movwf	4
  1594  0225  120A  118A  26C4  120A  118A  	fcall	stringdir
  1595  022A  00A9               	movwf	??_sprintf
  1596  022B  0829               	movf	??_sprintf,w
  1597  022C  00B2               	movwf	sprintf@c
  1598  022D  0832               	movf	sprintf@c,w
  1599  022E  1D03               	btfss	3,2
  1600  022F  2A31               	goto	u1671
  1601  0230  2A32               	goto	u1670
  1602  0231                     u1671:
  1603  0231  2955               	goto	l2142
  1604  0232                     u1670:
  1605  0232                     l2194:
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1608  0232  0831               	movf	sprintf@sp,w
  1609  0233  0084               	movwf	4
  1610  0234  1383               	bcf	3,7	;select IRP bank0
  1611  0235  0180               	clrf	0
  1612  0236                     l364:
  1613  0236  0008               	return
  1614  0237                     __end_of_sprintf:
  1615                           
  1616                           	psect	text2
  1617  060D                     __ptext2:	
  1618 ;; *************** function ___lwmod *****************
  1619 ;; Defined at:
  1620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  divisor         2    0[BANK0 ] unsigned int 
  1623 ;;  dividend        2    2[BANK0 ] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  counter         1    5[BANK0 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    0[BANK0 ] unsigned int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       1       0       0       0
  1637 ;;      Temps:          0       1       0       0       0
  1638 ;;      Totals:         0       6       0       0       0
  1639 ;;Total ram usage:        6 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_sprintf
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function ___lwmod
  1651  060D                     ___lwmod:
  1652  060D                     l2058:	
  1653                           ;incstack = 0
  1654                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1655                           
  1656  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1657  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1658  060F  0820               	movf	___lwmod@divisor,w
  1659  0610  0421               	iorwf	___lwmod@divisor+1,w
  1660  0611  1903               	btfsc	3,2
  1661  0612  2E14               	goto	u1521
  1662  0613  2E15               	goto	u1520
  1663  0614                     u1521:
  1664  0614  2E44               	goto	l2076
  1665  0615                     u1520:
  1666  0615                     l2060:
  1667  0615  01A5               	clrf	___lwmod@counter
  1668  0616  0AA5               	incf	___lwmod@counter,f
  1669  0617  2E23               	goto	l2066
  1670  0618                     l2062:
  1671  0618  3001               	movlw	1
  1672  0619                     u1535:
  1673  0619  1003               	clrc
  1674  061A  0DA0               	rlf	___lwmod@divisor,f
  1675  061B  0DA1               	rlf	___lwmod@divisor+1,f
  1676  061C  3EFF               	addlw	-1
  1677  061D  1D03               	skipz
  1678  061E  2E19               	goto	u1535
  1679  061F                     l2064:
  1680  061F  3001               	movlw	1
  1681  0620  00A4               	movwf	??___lwmod
  1682  0621  0824               	movf	??___lwmod,w
  1683  0622  07A5               	addwf	___lwmod@counter,f
  1684  0623                     l2066:
  1685  0623  1FA1               	btfss	___lwmod@divisor+1,7
  1686  0624  2E26               	goto	u1541
  1687  0625  2E27               	goto	u1540
  1688  0626                     u1541:
  1689  0626  2E18               	goto	l2062
  1690  0627                     u1540:
  1691  0627                     l2068:
  1692  0627  0821               	movf	___lwmod@divisor+1,w
  1693  0628  0223               	subwf	___lwmod@dividend+1,w
  1694  0629  1D03               	skipz
  1695  062A  2E2D               	goto	u1555
  1696  062B  0820               	movf	___lwmod@divisor,w
  1697  062C  0222               	subwf	___lwmod@dividend,w
  1698  062D                     u1555:
  1699  062D  1C03               	skipc
  1700  062E  2E30               	goto	u1551
  1701  062F  2E31               	goto	u1550
  1702  0630                     u1551:
  1703  0630  2E37               	goto	l2072
  1704  0631                     u1550:
  1705  0631                     l2070:
  1706  0631  0820               	movf	___lwmod@divisor,w
  1707  0632  02A2               	subwf	___lwmod@dividend,f
  1708  0633  0821               	movf	___lwmod@divisor+1,w
  1709  0634  1C03               	skipc
  1710  0635  03A3               	decf	___lwmod@dividend+1,f
  1711  0636  02A3               	subwf	___lwmod@dividend+1,f
  1712  0637                     l2072:
  1713  0637  3001               	movlw	1
  1714  0638                     u1565:
  1715  0638  1003               	clrc
  1716  0639  0CA1               	rrf	___lwmod@divisor+1,f
  1717  063A  0CA0               	rrf	___lwmod@divisor,f
  1718  063B  3EFF               	addlw	-1
  1719  063C  1D03               	skipz
  1720  063D  2E38               	goto	u1565
  1721  063E                     l2074:
  1722  063E  3001               	movlw	1
  1723  063F  02A5               	subwf	___lwmod@counter,f
  1724  0640  1D03               	btfss	3,2
  1725  0641  2E43               	goto	u1571
  1726  0642  2E44               	goto	u1570
  1727  0643                     u1571:
  1728  0643  2E27               	goto	l2068
  1729  0644                     u1570:
  1730  0644                     l2076:
  1731  0644  0823               	movf	___lwmod@dividend+1,w
  1732  0645  00A1               	movwf	?___lwmod+1
  1733  0646  0822               	movf	___lwmod@dividend,w
  1734  0647  00A0               	movwf	?___lwmod
  1735  0648                     l650:
  1736  0648  0008               	return
  1737  0649                     __end_of___lwmod:
  1738                           
  1739                           	psect	text3
  1740  05C9                     __ptext3:	
  1741 ;; *************** function ___lwdiv *****************
  1742 ;; Defined at:
  1743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  divisor         2    2[COMMON] unsigned int 
  1746 ;;  dividend        2    4[COMMON] unsigned int 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  quotient        2    7[COMMON] unsigned int 
  1749 ;;  counter         1    9[COMMON] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  2    2[COMMON] unsigned int 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         4       0       0       0       0
  1760 ;;      Locals:         3       0       0       0       0
  1761 ;;      Temps:          1       0       0       0       0
  1762 ;;      Totals:         8       0       0       0       0
  1763 ;;Total ram usage:        8 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_sprintf
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function ___lwdiv
  1775  05C9                     ___lwdiv:
  1776  05C9                     l1602:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1779                           
  1780  05C9  01F7               	clrf	___lwdiv@quotient
  1781  05CA  01F8               	clrf	___lwdiv@quotient+1
  1782  05CB                     l1604:
  1783  05CB  0872               	movf	___lwdiv@divisor,w
  1784  05CC  0473               	iorwf	___lwdiv@divisor+1,w
  1785  05CD  1903               	btfsc	3,2
  1786  05CE  2DD0               	goto	u1021
  1787  05CF  2DD1               	goto	u1020
  1788  05D0                     u1021:
  1789  05D0  2E08               	goto	l1624
  1790  05D1                     u1020:
  1791  05D1                     l1606:
  1792  05D1  01F9               	clrf	___lwdiv@counter
  1793  05D2  0AF9               	incf	___lwdiv@counter,f
  1794  05D3  2DDF               	goto	l1612
  1795  05D4                     l1608:
  1796  05D4  3001               	movlw	1
  1797  05D5                     u1035:
  1798  05D5  1003               	clrc
  1799  05D6  0DF2               	rlf	___lwdiv@divisor,f
  1800  05D7  0DF3               	rlf	___lwdiv@divisor+1,f
  1801  05D8  3EFF               	addlw	-1
  1802  05D9  1D03               	skipz
  1803  05DA  2DD5               	goto	u1035
  1804  05DB                     l1610:
  1805  05DB  3001               	movlw	1
  1806  05DC  00F6               	movwf	??___lwdiv
  1807  05DD  0876               	movf	??___lwdiv,w
  1808  05DE  07F9               	addwf	___lwdiv@counter,f
  1809  05DF                     l1612:
  1810  05DF  1FF3               	btfss	___lwdiv@divisor+1,7
  1811  05E0  2DE2               	goto	u1041
  1812  05E1  2DE3               	goto	u1040
  1813  05E2                     u1041:
  1814  05E2  2DD4               	goto	l1608
  1815  05E3                     u1040:
  1816  05E3                     l1614:
  1817  05E3  3001               	movlw	1
  1818  05E4                     u1055:
  1819  05E4  1003               	clrc
  1820  05E5  0DF7               	rlf	___lwdiv@quotient,f
  1821  05E6  0DF8               	rlf	___lwdiv@quotient+1,f
  1822  05E7  3EFF               	addlw	-1
  1823  05E8  1D03               	skipz
  1824  05E9  2DE4               	goto	u1055
  1825  05EA  0873               	movf	___lwdiv@divisor+1,w
  1826  05EB  0275               	subwf	___lwdiv@dividend+1,w
  1827  05EC  1D03               	skipz
  1828  05ED  2DF0               	goto	u1065
  1829  05EE  0872               	movf	___lwdiv@divisor,w
  1830  05EF  0274               	subwf	___lwdiv@dividend,w
  1831  05F0                     u1065:
  1832  05F0  1C03               	skipc
  1833  05F1  2DF3               	goto	u1061
  1834  05F2  2DF4               	goto	u1060
  1835  05F3                     u1061:
  1836  05F3  2DFB               	goto	l1620
  1837  05F4                     u1060:
  1838  05F4                     l1616:
  1839  05F4  0872               	movf	___lwdiv@divisor,w
  1840  05F5  02F4               	subwf	___lwdiv@dividend,f
  1841  05F6  0873               	movf	___lwdiv@divisor+1,w
  1842  05F7  1C03               	skipc
  1843  05F8  03F5               	decf	___lwdiv@dividend+1,f
  1844  05F9  02F5               	subwf	___lwdiv@dividend+1,f
  1845  05FA                     l1618:
  1846  05FA  1477               	bsf	___lwdiv@quotient,0
  1847  05FB                     l1620:
  1848  05FB  3001               	movlw	1
  1849  05FC                     u1075:
  1850  05FC  1003               	clrc
  1851  05FD  0CF3               	rrf	___lwdiv@divisor+1,f
  1852  05FE  0CF2               	rrf	___lwdiv@divisor,f
  1853  05FF  3EFF               	addlw	-1
  1854  0600  1D03               	skipz
  1855  0601  2DFC               	goto	u1075
  1856  0602                     l1622:
  1857  0602  3001               	movlw	1
  1858  0603  02F9               	subwf	___lwdiv@counter,f
  1859  0604  1D03               	btfss	3,2
  1860  0605  2E07               	goto	u1081
  1861  0606  2E08               	goto	u1080
  1862  0607                     u1081:
  1863  0607  2DE3               	goto	l1614
  1864  0608                     u1080:
  1865  0608                     l1624:
  1866  0608  0878               	movf	___lwdiv@quotient+1,w
  1867  0609  00F3               	movwf	?___lwdiv+1
  1868  060A  0877               	movf	___lwdiv@quotient,w
  1869  060B  00F2               	movwf	?___lwdiv
  1870  060C                     l640:
  1871  060C  0008               	return
  1872  060D                     __end_of___lwdiv:
  1873                           
  1874                           	psect	text4
  1875  0536                     __ptext4:	
  1876 ;; *************** function _setup *****************
  1877 ;; Defined at:
  1878 ;;		line 135 in file "main_master.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    3
  1899 ;; This function calls:
  1900 ;;		_I2C_Master_Init
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _setup
  1908  0536                     _setup:
  1909  0536                     l2080:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1912                           
  1913                           
  1914                           ;main_master.c: 137:     RCSTAbits.CREN = 1;
  1915  0536  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0537  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0538  120F               	bcf	15,4	;volatile
  1918                           
  1919                           ;main_master.c: 138:     TXSTAbits.TX9 = 0;
  1920  0539  168F               	bsf	15,5	;volatile
  1921                           
  1922                           ;main_master.c: 139: 
  1923  053A  170F               	bsf	15,6	;volatile
  1924                           
  1925                           ;main_master.c: 140:     TXSTAbits.TXEN = 1;
  1926  053B  140F               	bsf	15,0	;volatile
  1927  053C                     l2082:
  1928                           
  1929                           ;main_master.c: 143:     PIR1bits.TXIF = 0;
  1930  053C  1683               	bsf	3,5	;RP0=1, select bank3
  1931  053D  1703               	bsf	3,6	;RP1=1, select bank3
  1932  053E  0188               	clrf	8	;volatile
  1933                           
  1934                           ;main_master.c: 144: 
  1935  053F  0189               	clrf	9	;volatile
  1936  0540                     l2084:
  1937                           
  1938                           ;main_master.c: 147:     INTCONbits.PEIE = 1;
  1939  0540  1683               	bsf	3,5	;RP0=1, select bank1
  1940  0541  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0542  1406               	bsf	6,0	;volatile
  1942  0543                     l2086:
  1943                           
  1944                           ;main_master.c: 148:     PIE1bits.RCIE = 0;
  1945  0543  1007               	bcf	7,0	;volatile
  1946                           
  1947                           ;main_master.c: 149:     PIE1bits.TXIE = 0;
  1948  0544  0188               	clrf	8	;volatile
  1949                           
  1950                           ;main_master.c: 150:     INTCONbits.RBIF = 1;
  1951  0545  0185               	clrf	5	;volatile
  1952                           
  1953                           ;main_master.c: 153: 
  1954  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0548  0185               	clrf	5	;volatile
  1957                           
  1958                           ;main_master.c: 154:     I2C_Master_Init(100000);
  1959  0549  0186               	clrf	6	;volatile
  1960                           
  1961                           ;main_master.c: 155: }
  1962  054A  0187               	clrf	7	;volatile
  1963                           
  1964                           ;main_master.c: 156: 
  1965  054B  0188               	clrf	8	;volatile
  1966                           
  1967                           ;main_master.c: 157: 
  1968  054C  0189               	clrf	9	;volatile
  1969  054D                     l2088:
  1970                           
  1971                           ;main_master.c: 160:      division(cont);
  1972  054D  1683               	bsf	3,5	;RP0=1, select bank1
  1973  054E  1303               	bcf	3,6	;RP1=0, select bank1
  1974  054F  1381               	bcf	1,7	;volatile
  1975  0550                     l2090:
  1976                           
  1977                           ;main_master.c: 161:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1978  0550  3001               	movlw	1
  1979  0551  0095               	movwf	21	;volatile
  1980  0552                     l2092:
  1981                           
  1982                           ;main_master.c: 162:     TXREG = decenas;
  1983  0552  1416               	bsf	22,0	;volatile
  1984  0553                     l2094:
  1985                           
  1986                           ;main_master.c: 165:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1987  0553  1218               	bcf	24,4	;volatile
  1988  0554                     l2096:
  1989                           
  1990                           ;main_master.c: 166: 
  1991  0554  1518               	bsf	24,2	;volatile
  1992  0555                     l2098:
  1993                           
  1994                           ;main_master.c: 167: 
  1995  0555  1683               	bsf	3,5	;RP0=1, select bank3
  1996  0556  1703               	bsf	3,6	;RP1=1, select bank3
  1997  0557  1187               	bcf	7,3	;volatile
  1998  0558                     l2100:
  1999                           
  2000                           ;main_master.c: 169:     division(stat);
  2001  0558  3019               	movlw	25
  2002  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2003  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2004  055B  0099               	movwf	25	;volatile
  2005  055C                     l2102:
  2006                           
  2007                           ;main_master.c: 170: 
  2008  055C  3001               	movlw	1
  2009  055D  009A               	movwf	26	;volatile
  2010  055E                     l2104:
  2011                           
  2012                           ;main_master.c: 172:     TXREG = unidades;
  2013  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2014  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0560  1798               	bsf	24,7	;volatile
  2016  0561                     l2106:
  2017                           
  2018                           ;main_master.c: 173:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2019  0561  1318               	bcf	24,6	;volatile
  2020  0562                     l2108:
  2021                           
  2022                           ;main_master.c: 174: 
  2023  0562  1618               	bsf	24,4	;volatile
  2024  0563                     l2110:
  2025                           
  2026                           ;main_master.c: 175: 
  2027  0563  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0564  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0565  1318               	bcf	24,6	;volatile
  2030  0566                     l2112:
  2031                           
  2032                           ;main_master.c: 177:      division(temp);
  2033  0566  1698               	bsf	24,5	;volatile
  2034  0567                     l2114:
  2035                           
  2036                           ;main_master.c: 179:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2037  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0569  128C               	bcf	12,5	;volatile
  2040  056A                     l2116:
  2041                           
  2042                           ;main_master.c: 180:     TXREG = centenas;
  2043  056A  120C               	bcf	12,4	;volatile
  2044  056B                     l2118:
  2045                           
  2046                           ;main_master.c: 183:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2047  056B  178B               	bsf	11,7	;volatile
  2048  056C                     l2120:
  2049                           
  2050                           ;main_master.c: 184:     TXREG = unidades;
  2051  056C  170B               	bsf	11,6	;volatile
  2052  056D                     l2122:
  2053                           
  2054                           ;main_master.c: 185:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2055  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2056  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2057  056F  128C               	bcf	12,5	;volatile
  2058  0570                     l2124:
  2059                           
  2060                           ;main_master.c: 186: 
  2061  0570  120C               	bcf	12,4	;volatile
  2062  0571                     l2126:
  2063                           
  2064                           ;main_master.c: 187: }
  2065  0571  140B               	bsf	11,0	;volatile
  2066  0572                     l2128:
  2067                           
  2068                           ;main_master.c: 188: 
  2069  0572  158B               	bsf	11,3	;volatile
  2070  0573                     l2130:
  2071                           
  2072                           ;main_master.c: 191:     centenas = valor/100;
  2073  0573  3000               	movlw	0
  2074  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0576  00A9               	movwf	I2C_Master_Init@c+3
  2077  0577  3001               	movlw	1
  2078  0578  00A8               	movwf	I2C_Master_Init@c+2
  2079  0579  3086               	movlw	134
  2080  057A  00A7               	movwf	I2C_Master_Init@c+1
  2081  057B  30A0               	movlw	160
  2082  057C  00A6               	movwf	I2C_Master_Init@c
  2083  057D  120A  118A  2682  120A  118A  	fcall	_I2C_Master_Init
  2084  0582                     l132:
  2085  0582  0008               	return
  2086  0583                     __end_of_setup:
  2087                           
  2088                           	psect	text5
  2089  0682                     __ptext5:	
  2090 ;; *************** function _I2C_Master_Init *****************
  2091 ;; Defined at:
  2092 ;;		line 16 in file "I2C.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  c               4    6[BANK0 ] const unsigned long 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       4       0       0       0
  2107 ;;      Locals:         0       0       0       0       0
  2108 ;;      Temps:          0       4       0       0       0
  2109 ;;      Totals:         0       8       0       0       0
  2110 ;;Total ram usage:        8 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    2
  2113 ;; This function calls:
  2114 ;;		___lldiv
  2115 ;; This function is called by:
  2116 ;;		_setup
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _I2C_Master_Init
  2122  0682                     _I2C_Master_Init:
  2123  0682                     l2038:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2126                           
  2127                           
  2128                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2129  0682  3028               	movlw	40
  2130  0683  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0684  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0685  0094               	movwf	20	;volatile
  2133  0686                     l2040:
  2134                           
  2135                           ;I2C.c: 19:     SSPCON2 = 0;
  2136  0686  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0687  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0688  0191               	clrf	17	;volatile
  2139  0689                     l2042:
  2140                           
  2141                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2142  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2143  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2144  068B  0826               	movf	I2C_Master_Init@c,w
  2145  068C  00AA               	movwf	??_I2C_Master_Init
  2146  068D  0827               	movf	I2C_Master_Init@c+1,w
  2147  068E  00AB               	movwf	??_I2C_Master_Init+1
  2148  068F  0828               	movf	I2C_Master_Init@c+2,w
  2149  0690  00AC               	movwf	??_I2C_Master_Init+2
  2150  0691  0829               	movf	I2C_Master_Init@c+3,w
  2151  0692  00AD               	movwf	??_I2C_Master_Init+3
  2152  0693  3002               	movlw	2
  2153  0694                     u1515:
  2154  0694  1003               	clrc
  2155  0695  0DAA               	rlf	??_I2C_Master_Init,f
  2156  0696  0DAB               	rlf	??_I2C_Master_Init+1,f
  2157  0697  0DAC               	rlf	??_I2C_Master_Init+2,f
  2158  0698  0DAD               	rlf	??_I2C_Master_Init+3,f
  2159  0699                     u1510:
  2160  0699  3EFF               	addlw	-1
  2161  069A  1D03               	skipz
  2162  069B  2E94               	goto	u1515
  2163  069C  082D               	movf	??_I2C_Master_Init+3,w
  2164  069D  00F5               	movwf	___lldiv@divisor+3
  2165  069E  082C               	movf	??_I2C_Master_Init+2,w
  2166  069F  00F4               	movwf	___lldiv@divisor+2
  2167  06A0  082B               	movf	??_I2C_Master_Init+1,w
  2168  06A1  00F3               	movwf	___lldiv@divisor+1
  2169  06A2  082A               	movf	??_I2C_Master_Init,w
  2170  06A3  00F2               	movwf	___lldiv@divisor
  2171  06A4  3000               	movlw	0
  2172  06A5  00F9               	movwf	___lldiv@dividend+3
  2173  06A6  307A               	movlw	122
  2174  06A7  00F8               	movwf	___lldiv@dividend+2
  2175  06A8  3012               	movlw	18
  2176  06A9  00F7               	movwf	___lldiv@dividend+1
  2177  06AA  3000               	movlw	0
  2178  06AB  00F6               	movwf	___lldiv@dividend
  2179  06AC  120A  118A  23C0  120A  118A  	fcall	___lldiv
  2180  06B1  0872               	movf	?___lldiv,w
  2181  06B2  3EFF               	addlw	255
  2182  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2183  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2184  06B5  0093               	movwf	19	;volatile
  2185  06B6                     l2044:
  2186                           
  2187                           ;I2C.c: 21:     SSPSTAT = 0;
  2188  06B6  0194               	clrf	20	;volatile
  2189  06B7                     l2046:
  2190                           
  2191                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2192  06B7  1587               	bsf	7,3	;volatile
  2193  06B8                     l2048:
  2194                           
  2195                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2196  06B8  1607               	bsf	7,4	;volatile
  2197  06B9                     l173:
  2198  06B9  0008               	return
  2199  06BA                     __end_of_I2C_Master_Init:
  2200                           
  2201                           	psect	text6
  2202  03C0                     __ptext6:	
  2203 ;; *************** function ___lldiv *****************
  2204 ;; Defined at:
  2205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  divisor         4    2[COMMON] unsigned long 
  2208 ;;  dividend        4    6[COMMON] unsigned long 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  quotient        4    1[BANK0 ] unsigned long 
  2211 ;;  counter         1    5[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  4    2[COMMON] unsigned long 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         8       0       0       0       0
  2222 ;;      Locals:         0       5       0       0       0
  2223 ;;      Temps:          0       1       0       0       0
  2224 ;;      Totals:         8       6       0       0       0
  2225 ;;Total ram usage:       14 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_I2C_Master_Init
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function ___lldiv
  2237  03C0                     ___lldiv:
  2238  03C0                     l1970:	
  2239                           ;incstack = 0
  2240                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2241                           
  2242  03C0  3000               	movlw	0
  2243  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2244  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2245  03C3  00A4               	movwf	___lldiv@quotient+3
  2246  03C4  3000               	movlw	0
  2247  03C5  00A3               	movwf	___lldiv@quotient+2
  2248  03C6  3000               	movlw	0
  2249  03C7  00A2               	movwf	___lldiv@quotient+1
  2250  03C8  3000               	movlw	0
  2251  03C9  00A1               	movwf	___lldiv@quotient
  2252  03CA  0875               	movf	___lldiv@divisor+3,w
  2253  03CB  0474               	iorwf	___lldiv@divisor+2,w
  2254  03CC  0473               	iorwf	___lldiv@divisor+1,w
  2255  03CD  0472               	iorwf	___lldiv@divisor,w
  2256  03CE  1903               	skipnz
  2257  03CF  2BD1               	goto	u1341
  2258  03D0  2BD2               	goto	u1340
  2259  03D1                     u1341:
  2260  03D1  2C1F               	goto	l1990
  2261  03D2                     u1340:
  2262  03D2                     l1972:
  2263  03D2  01A5               	clrf	___lldiv@counter
  2264  03D3  0AA5               	incf	___lldiv@counter,f
  2265  03D4  2BE2               	goto	l1976
  2266  03D5                     l1974:
  2267  03D5  3001               	movlw	1
  2268  03D6  00A0               	movwf	??___lldiv
  2269  03D7                     u1355:
  2270  03D7  1003               	clrc
  2271  03D8  0DF2               	rlf	___lldiv@divisor,f
  2272  03D9  0DF3               	rlf	___lldiv@divisor+1,f
  2273  03DA  0DF4               	rlf	___lldiv@divisor+2,f
  2274  03DB  0DF5               	rlf	___lldiv@divisor+3,f
  2275  03DC  0BA0               	decfsz	??___lldiv,f
  2276  03DD  2BD7               	goto	u1355
  2277  03DE  3001               	movlw	1
  2278  03DF  00A0               	movwf	??___lldiv
  2279  03E0  0820               	movf	??___lldiv,w
  2280  03E1  07A5               	addwf	___lldiv@counter,f
  2281  03E2                     l1976:
  2282  03E2  1FF5               	btfss	___lldiv@divisor+3,7
  2283  03E3  2BE5               	goto	u1361
  2284  03E4  2BE6               	goto	u1360
  2285  03E5                     u1361:
  2286  03E5  2BD5               	goto	l1974
  2287  03E6                     u1360:
  2288  03E6                     l1978:
  2289  03E6  3001               	movlw	1
  2290  03E7  00A0               	movwf	??___lldiv
  2291  03E8                     u1375:
  2292  03E8  1003               	clrc
  2293  03E9  0DA1               	rlf	___lldiv@quotient,f
  2294  03EA  0DA2               	rlf	___lldiv@quotient+1,f
  2295  03EB  0DA3               	rlf	___lldiv@quotient+2,f
  2296  03EC  0DA4               	rlf	___lldiv@quotient+3,f
  2297  03ED  0BA0               	decfsz	??___lldiv,f
  2298  03EE  2BE8               	goto	u1375
  2299  03EF                     l1980:
  2300  03EF  0875               	movf	___lldiv@divisor+3,w
  2301  03F0  0279               	subwf	___lldiv@dividend+3,w
  2302  03F1  1D03               	skipz
  2303  03F2  2BFD               	goto	u1385
  2304  03F3  0874               	movf	___lldiv@divisor+2,w
  2305  03F4  0278               	subwf	___lldiv@dividend+2,w
  2306  03F5  1D03               	skipz
  2307  03F6  2BFD               	goto	u1385
  2308  03F7  0873               	movf	___lldiv@divisor+1,w
  2309  03F8  0277               	subwf	___lldiv@dividend+1,w
  2310  03F9  1D03               	skipz
  2311  03FA  2BFD               	goto	u1385
  2312  03FB  0872               	movf	___lldiv@divisor,w
  2313  03FC  0276               	subwf	___lldiv@dividend,w
  2314  03FD                     u1385:
  2315  03FD  1C03               	skipc
  2316  03FE  2C00               	goto	u1381
  2317  03FF  2C01               	goto	u1380
  2318  0400                     u1381:
  2319  0400  2C10               	goto	l1986
  2320  0401                     u1380:
  2321  0401                     l1982:
  2322  0401  0872               	movf	___lldiv@divisor,w
  2323  0402  02F6               	subwf	___lldiv@dividend,f
  2324  0403  0873               	movf	___lldiv@divisor+1,w
  2325  0404  1C03               	skipc
  2326  0405  0F73               	incfsz	___lldiv@divisor+1,w
  2327  0406  02F7               	subwf	___lldiv@dividend+1,f
  2328  0407  0874               	movf	___lldiv@divisor+2,w
  2329  0408  1C03               	skipc
  2330  0409  0F74               	incfsz	___lldiv@divisor+2,w
  2331  040A  02F8               	subwf	___lldiv@dividend+2,f
  2332  040B  0875               	movf	___lldiv@divisor+3,w
  2333  040C  1C03               	skipc
  2334  040D  0F75               	incfsz	___lldiv@divisor+3,w
  2335  040E  02F9               	subwf	___lldiv@dividend+3,f
  2336  040F                     l1984:
  2337  040F  1421               	bsf	___lldiv@quotient,0
  2338  0410                     l1986:
  2339  0410  3001               	movlw	1
  2340  0411                     u1395:
  2341  0411  1003               	clrc
  2342  0412  0CF5               	rrf	___lldiv@divisor+3,f
  2343  0413  0CF4               	rrf	___lldiv@divisor+2,f
  2344  0414  0CF3               	rrf	___lldiv@divisor+1,f
  2345  0415  0CF2               	rrf	___lldiv@divisor,f
  2346  0416  3EFF               	addlw	-1
  2347  0417  1D03               	skipz
  2348  0418  2C11               	goto	u1395
  2349  0419                     l1988:
  2350  0419  3001               	movlw	1
  2351  041A  02A5               	subwf	___lldiv@counter,f
  2352  041B  1D03               	btfss	3,2
  2353  041C  2C1E               	goto	u1401
  2354  041D  2C1F               	goto	u1400
  2355  041E                     u1401:
  2356  041E  2BE6               	goto	l1978
  2357  041F                     u1400:
  2358  041F                     l1990:
  2359  041F  0824               	movf	___lldiv@quotient+3,w
  2360  0420  00F5               	movwf	?___lldiv+3
  2361  0421  0823               	movf	___lldiv@quotient+2,w
  2362  0422  00F4               	movwf	?___lldiv+2
  2363  0423  0822               	movf	___lldiv@quotient+1,w
  2364  0424  00F3               	movwf	?___lldiv+1
  2365  0425  0821               	movf	___lldiv@quotient,w
  2366  0426  00F2               	movwf	?___lldiv
  2367  0427                     l404:
  2368  0427  0008               	return
  2369  0428                     __end_of___lldiv:
  2370                           
  2371                           	psect	text7
  2372  0237                     __ptext7:	
  2373 ;; *************** function _Text *****************
  2374 ;; Defined at:
  2375 ;;		line 195 in file "main_master.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          0       2       0       0       0
  2392 ;;      Totals:         0       2       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    3
  2396 ;; This function calls:
  2397 ;;		_division
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _Text
  2405  0237                     _Text:
  2406  0237                     l2202:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _Text: [wreg+status,2+status,0+pclath+cstack]
  2409                           
  2410                           
  2411                           ;main_master.c: 196:     centenas = centenas + 48;
  2412  0237  3041               	movlw	65
  2413  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2415  023A  00A8               	movwf	??_Text+1
  2416  023B  30ED               	movlw	237
  2417  023C  00A7               	movwf	??_Text
  2418  023D                     u1727:
  2419  023D  0BA7               	decfsz	??_Text,f
  2420  023E  2A3D               	goto	u1727
  2421  023F  0BA8               	decfsz	??_Text+1,f
  2422  0240  2A3D               	goto	u1727
  2423  0241  2A42               	nop2
  2424  0242                     l2204:
  2425                           
  2426                           ;main_master.c: 197:     decenas = decenas + 48;
  2427  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0244  0867               	movf	_cont,w
  2430  0245  120A  118A  22EC  120A  118A  	fcall	_division
  2431  024A                     l2206:
  2432                           
  2433                           ;main_master.c: 198:     unidades = unidades + 48;
  2434  024A  3041               	movlw	65
  2435  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2436  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2437  024D  00A8               	movwf	??_Text+1
  2438  024E  30ED               	movlw	237
  2439  024F  00A7               	movwf	??_Text
  2440  0250                     u1737:
  2441  0250  0BA7               	decfsz	??_Text,f
  2442  0251  2A50               	goto	u1737
  2443  0252  0BA8               	decfsz	??_Text+1,f
  2444  0253  2A50               	goto	u1737
  2445  0254  2A55               	nop2
  2446  0255                     l2208:
  2447                           
  2448                           ;main_master.c: 199: }
  2449  0255  087B               	movf	_decenas,w
  2450  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0258  0099               	movwf	25	;volatile
  2453  0259                     l2210:
  2454                           
  2455                           ;main_master.c: 200: 
  2456  0259  3041               	movlw	65
  2457  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2458  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2459  025C  00A8               	movwf	??_Text+1
  2460  025D  30ED               	movlw	237
  2461  025E  00A7               	movwf	??_Text
  2462  025F                     u1747:
  2463  025F  0BA7               	decfsz	??_Text,f
  2464  0260  2A5F               	goto	u1747
  2465  0261  0BA8               	decfsz	??_Text+1,f
  2466  0262  2A5F               	goto	u1747
  2467  0263  2A64               	nop2
  2468  0264                     l2212:
  2469                           
  2470                           ;main_master.c: 201: 
  2471  0264  087A               	movf	_unidades,w
  2472  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0267  0099               	movwf	25	;volatile
  2475  0268                     l2214:
  2476                           
  2477                           ;main_master.c: 202: void putch(char data){
  2478  0268  3041               	movlw	65
  2479  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2480  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2481  026B  00A8               	movwf	??_Text+1
  2482  026C  30ED               	movlw	237
  2483  026D  00A7               	movwf	??_Text
  2484  026E                     u1757:
  2485  026E  0BA7               	decfsz	??_Text,f
  2486  026F  2A6E               	goto	u1757
  2487  0270  0BA8               	decfsz	??_Text+1,f
  2488  0271  2A6E               	goto	u1757
  2489  0272  2A73               	nop2
  2490  0273                     l2216:
  2491                           
  2492                           ;main_master.c: 205:     return;
  2493  0273  3041               	movlw	65
  2494  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0276  00A8               	movwf	??_Text+1
  2497  0277  30ED               	movlw	237
  2498  0278  00A7               	movwf	??_Text
  2499  0279                     u1767:
  2500  0279  0BA7               	decfsz	??_Text,f
  2501  027A  2A79               	goto	u1767
  2502  027B  0BA8               	decfsz	??_Text+1,f
  2503  027C  2A79               	goto	u1767
  2504  027D  2A7E               	nop2
  2505  027E                     l2218:
  2506                           
  2507                           ;main_master.c: 206: }
  2508  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2509  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0280  0868               	movf	_stat,w
  2511  0281  120A  118A  22EC  120A  118A  	fcall	_division
  2512  0286  3041               	movlw	65
  2513  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0289  00A8               	movwf	??_Text+1
  2516  028A  30ED               	movlw	237
  2517  028B  00A7               	movwf	??_Text
  2518  028C                     u1777:
  2519  028C  0BA7               	decfsz	??_Text,f
  2520  028D  2A8C               	goto	u1777
  2521  028E  0BA8               	decfsz	??_Text+1,f
  2522  028F  2A8C               	goto	u1777
  2523  0290  2A91               	nop2
  2524  0291  087A               	movf	_unidades,w
  2525  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0294  0099               	movwf	25	;volatile
  2528  0295  3041               	movlw	65
  2529  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0298  00A8               	movwf	??_Text+1
  2532  0299  30ED               	movlw	237
  2533  029A  00A7               	movwf	??_Text
  2534  029B                     u1787:
  2535  029B  0BA7               	decfsz	??_Text,f
  2536  029C  2A9B               	goto	u1787
  2537  029D  0BA8               	decfsz	??_Text+1,f
  2538  029E  2A9B               	goto	u1787
  2539  029F  2AA0               	nop2
  2540  02A0  3041               	movlw	65
  2541  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2542  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2543  02A3  00A8               	movwf	??_Text+1
  2544  02A4  30ED               	movlw	237
  2545  02A5  00A7               	movwf	??_Text
  2546  02A6                     u1797:
  2547  02A6  0BA7               	decfsz	??_Text,f
  2548  02A7  2AA6               	goto	u1797
  2549  02A8  0BA8               	decfsz	??_Text+1,f
  2550  02A9  2AA6               	goto	u1797
  2551  02AA  2AAB               	nop2
  2552  02AB                     l2220:
  2553  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2554  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2555  02AD  0869               	movf	_temp,w
  2556  02AE  120A  118A  22EC  120A  118A  	fcall	_division
  2557  02B3                     l2222:
  2558  02B3  3041               	movlw	65
  2559  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2560  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2561  02B6  00A8               	movwf	??_Text+1
  2562  02B7  30ED               	movlw	237
  2563  02B8  00A7               	movwf	??_Text
  2564  02B9                     u1807:
  2565  02B9  0BA7               	decfsz	??_Text,f
  2566  02BA  2AB9               	goto	u1807
  2567  02BB  0BA8               	decfsz	??_Text+1,f
  2568  02BC  2AB9               	goto	u1807
  2569  02BD  2ABE               	nop2
  2570  02BE                     l2224:
  2571  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2572  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2573  02C0  0865               	movf	_centenas,w
  2574  02C1  0099               	movwf	25	;volatile
  2575  02C2                     l2226:
  2576  02C2  3041               	movlw	65
  2577  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2578  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2579  02C5  00A8               	movwf	??_Text+1
  2580  02C6  30ED               	movlw	237
  2581  02C7  00A7               	movwf	??_Text
  2582  02C8                     u1817:
  2583  02C8  0BA7               	decfsz	??_Text,f
  2584  02C9  2AC8               	goto	u1817
  2585  02CA  0BA8               	decfsz	??_Text+1,f
  2586  02CB  2AC8               	goto	u1817
  2587  02CC  2ACD               	nop2
  2588  02CD                     l2228:
  2589  02CD  087B               	movf	_decenas,w
  2590  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2591  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2592  02D0  0099               	movwf	25	;volatile
  2593  02D1                     l2230:
  2594  02D1  3041               	movlw	65
  2595  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2596  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2597  02D4  00A8               	movwf	??_Text+1
  2598  02D5  30ED               	movlw	237
  2599  02D6  00A7               	movwf	??_Text
  2600  02D7                     u1827:
  2601  02D7  0BA7               	decfsz	??_Text,f
  2602  02D8  2AD7               	goto	u1827
  2603  02D9  0BA8               	decfsz	??_Text+1,f
  2604  02DA  2AD7               	goto	u1827
  2605  02DB  2ADC               	nop2
  2606  02DC                     l2232:
  2607  02DC  087A               	movf	_unidades,w
  2608  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2609  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2610  02DF  0099               	movwf	25	;volatile
  2611  02E0                     l2234:
  2612  02E0  3041               	movlw	65
  2613  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2614  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2615  02E3  00A8               	movwf	??_Text+1
  2616  02E4  30ED               	movlw	237
  2617  02E5  00A7               	movwf	??_Text
  2618  02E6                     u1837:
  2619  02E6  0BA7               	decfsz	??_Text,f
  2620  02E7  2AE6               	goto	u1837
  2621  02E8  0BA8               	decfsz	??_Text+1,f
  2622  02E9  2AE6               	goto	u1837
  2623  02EA  2AEB               	nop2
  2624  02EB                     l135:
  2625  02EB  0008               	return
  2626  02EC                     __end_of_Text:
  2627                           
  2628                           	psect	text8
  2629  02EC                     __ptext8:	
  2630 ;; *************** function _division *****************
  2631 ;; Defined at:
  2632 ;;		line 227 in file "main_master.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  valor           1    wreg     unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  valor           1    9[COMMON] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      unsigned char 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         0       0       0       0       0
  2647 ;;      Locals:         1       0       0       0       0
  2648 ;;      Temps:          0       3       0       0       0
  2649 ;;      Totals:         1       3       0       0       0
  2650 ;;Total ram usage:        4 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    2
  2653 ;; This function calls:
  2654 ;;		___awdiv
  2655 ;;		___awmod
  2656 ;; This function is called by:
  2657 ;;		_Text
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _division
  2663  02EC                     _division:
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2667                           ;division@valor stored from wreg
  2668  02EC  00F9               	movwf	division@valor
  2669  02ED                     l2050:
  2670  02ED  3064               	movlw	100
  2671  02EE  00F2               	movwf	___awdiv@divisor
  2672  02EF  3000               	movlw	0
  2673  02F0  00F3               	movwf	___awdiv@divisor+1
  2674  02F1  0879               	movf	division@valor,w
  2675  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2676  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2677  02F4  00A4               	movwf	??_division
  2678  02F5  01A5               	clrf	??_division+1
  2679  02F6  0824               	movf	??_division,w
  2680  02F7  00F4               	movwf	___awdiv@dividend
  2681  02F8  0825               	movf	??_division+1,w
  2682  02F9  00F5               	movwf	___awdiv@dividend+1
  2683  02FA  120A  118A  2357  120A  118A  	fcall	___awdiv
  2684  02FF  0872               	movf	?___awdiv,w
  2685  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0302  00A6               	movwf	??_division+2
  2688  0303  0826               	movf	??_division+2,w
  2689  0304  00E5               	movwf	_centenas
  2690  0305  3064               	movlw	100
  2691  0306  00F2               	movwf	___awmod@divisor
  2692  0307  3000               	movlw	0
  2693  0308  00F3               	movwf	___awmod@divisor+1
  2694  0309  0879               	movf	division@valor,w
  2695  030A  00A4               	movwf	??_division
  2696  030B  01A5               	clrf	??_division+1
  2697  030C  0824               	movf	??_division,w
  2698  030D  00F4               	movwf	___awmod@dividend
  2699  030E  0825               	movf	??_division+1,w
  2700  030F  00F5               	movwf	___awmod@dividend+1
  2701  0310  120A  118A  2485  120A  118A  	fcall	___awmod
  2702  0315  0872               	movf	?___awmod,w
  2703  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0318  00A6               	movwf	??_division+2
  2706  0319  0826               	movf	??_division+2,w
  2707  031A  00E4               	movwf	_residuo
  2708  031B  300A               	movlw	10
  2709  031C  00F2               	movwf	___awdiv@divisor
  2710  031D  3000               	movlw	0
  2711  031E  00F3               	movwf	___awdiv@divisor+1
  2712  031F  0864               	movf	_residuo,w
  2713  0320  00A4               	movwf	??_division
  2714  0321  01A5               	clrf	??_division+1
  2715  0322  0824               	movf	??_division,w
  2716  0323  00F4               	movwf	___awdiv@dividend
  2717  0324  0825               	movf	??_division+1,w
  2718  0325  00F5               	movwf	___awdiv@dividend+1
  2719  0326  120A  118A  2357  120A  118A  	fcall	___awdiv
  2720  032B  0872               	movf	?___awdiv,w
  2721  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2722  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2723  032E  00A6               	movwf	??_division+2
  2724  032F  0826               	movf	??_division+2,w
  2725  0330  00FB               	movwf	_decenas
  2726  0331  300A               	movlw	10
  2727  0332  00F2               	movwf	___awmod@divisor
  2728  0333  3000               	movlw	0
  2729  0334  00F3               	movwf	___awmod@divisor+1
  2730  0335  0864               	movf	_residuo,w
  2731  0336  00A4               	movwf	??_division
  2732  0337  01A5               	clrf	??_division+1
  2733  0338  0824               	movf	??_division,w
  2734  0339  00F4               	movwf	___awmod@dividend
  2735  033A  0825               	movf	??_division+1,w
  2736  033B  00F5               	movwf	___awmod@dividend+1
  2737  033C  120A  118A  2485  120A  118A  	fcall	___awmod
  2738  0341  0872               	movf	?___awmod,w
  2739  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0344  00A6               	movwf	??_division+2
  2742  0345  0826               	movf	??_division+2,w
  2743  0346  00FA               	movwf	_unidades
  2744  0347                     l2052:
  2745  0347  0865               	movf	_centenas,w
  2746  0348  3E30               	addlw	48
  2747  0349  00A4               	movwf	??_division
  2748  034A  0824               	movf	??_division,w
  2749  034B  00E5               	movwf	_centenas
  2750  034C                     l2054:
  2751  034C  087B               	movf	_decenas,w
  2752  034D  3E30               	addlw	48
  2753  034E  00A4               	movwf	??_division
  2754  034F  0824               	movf	??_division,w
  2755  0350  00FB               	movwf	_decenas
  2756  0351                     l2056:
  2757  0351  087A               	movf	_unidades,w
  2758  0352  3E30               	addlw	48
  2759  0353  00A4               	movwf	??_division
  2760  0354  0824               	movf	??_division,w
  2761  0355  00FA               	movwf	_unidades
  2762  0356                     l138:
  2763  0356  0008               	return
  2764  0357                     __end_of_division:
  2765                           
  2766                           	psect	text9
  2767  0485                     __ptext9:	
  2768 ;; *************** function ___awmod *****************
  2769 ;; Defined at:
  2770 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  divisor         2    2[COMMON] int 
  2773 ;;  dividend        2    4[COMMON] int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  sign            1    8[COMMON] unsigned char 
  2776 ;;  counter         1    7[COMMON] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2    2[COMMON] int 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         4       0       0       0       0
  2787 ;;      Locals:         2       0       0       0       0
  2788 ;;      Temps:          1       0       0       0       0
  2789 ;;      Totals:         7       0       0       0       0
  2790 ;;Total ram usage:        7 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    1
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_division
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function ___awmod
  2802  0485                     ___awmod:
  2803  0485                     l1510:	
  2804                           ;incstack = 0
  2805                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2806                           
  2807  0485  01F8               	clrf	___awmod@sign
  2808  0486                     l1512:
  2809  0486  1FF5               	btfss	___awmod@dividend+1,7
  2810  0487  2C89               	goto	u891
  2811  0488  2C8A               	goto	u890
  2812  0489                     u891:
  2813  0489  2C91               	goto	l1518
  2814  048A                     u890:
  2815  048A                     l1514:
  2816  048A  09F4               	comf	___awmod@dividend,f
  2817  048B  09F5               	comf	___awmod@dividend+1,f
  2818  048C  0AF4               	incf	___awmod@dividend,f
  2819  048D  1903               	skipnz
  2820  048E  0AF5               	incf	___awmod@dividend+1,f
  2821  048F                     l1516:
  2822  048F  01F8               	clrf	___awmod@sign
  2823  0490  0AF8               	incf	___awmod@sign,f
  2824  0491                     l1518:
  2825  0491  1FF3               	btfss	___awmod@divisor+1,7
  2826  0492  2C94               	goto	u901
  2827  0493  2C95               	goto	u900
  2828  0494                     u901:
  2829  0494  2C9A               	goto	l1522
  2830  0495                     u900:
  2831  0495                     l1520:
  2832  0495  09F2               	comf	___awmod@divisor,f
  2833  0496  09F3               	comf	___awmod@divisor+1,f
  2834  0497  0AF2               	incf	___awmod@divisor,f
  2835  0498  1903               	skipnz
  2836  0499  0AF3               	incf	___awmod@divisor+1,f
  2837  049A                     l1522:
  2838  049A  0872               	movf	___awmod@divisor,w
  2839  049B  0473               	iorwf	___awmod@divisor+1,w
  2840  049C  1903               	btfsc	3,2
  2841  049D  2C9F               	goto	u911
  2842  049E  2CA0               	goto	u910
  2843  049F                     u911:
  2844  049F  2CCF               	goto	l1540
  2845  04A0                     u910:
  2846  04A0                     l1524:
  2847  04A0  01F7               	clrf	___awmod@counter
  2848  04A1  0AF7               	incf	___awmod@counter,f
  2849  04A2  2CAE               	goto	l1530
  2850  04A3                     l1526:
  2851  04A3  3001               	movlw	1
  2852  04A4                     u925:
  2853  04A4  1003               	clrc
  2854  04A5  0DF2               	rlf	___awmod@divisor,f
  2855  04A6  0DF3               	rlf	___awmod@divisor+1,f
  2856  04A7  3EFF               	addlw	-1
  2857  04A8  1D03               	skipz
  2858  04A9  2CA4               	goto	u925
  2859  04AA                     l1528:
  2860  04AA  3001               	movlw	1
  2861  04AB  00F6               	movwf	??___awmod
  2862  04AC  0876               	movf	??___awmod,w
  2863  04AD  07F7               	addwf	___awmod@counter,f
  2864  04AE                     l1530:
  2865  04AE  1FF3               	btfss	___awmod@divisor+1,7
  2866  04AF  2CB1               	goto	u931
  2867  04B0  2CB2               	goto	u930
  2868  04B1                     u931:
  2869  04B1  2CA3               	goto	l1526
  2870  04B2                     u930:
  2871  04B2                     l1532:
  2872  04B2  0873               	movf	___awmod@divisor+1,w
  2873  04B3  0275               	subwf	___awmod@dividend+1,w
  2874  04B4  1D03               	skipz
  2875  04B5  2CB8               	goto	u945
  2876  04B6  0872               	movf	___awmod@divisor,w
  2877  04B7  0274               	subwf	___awmod@dividend,w
  2878  04B8                     u945:
  2879  04B8  1C03               	skipc
  2880  04B9  2CBB               	goto	u941
  2881  04BA  2CBC               	goto	u940
  2882  04BB                     u941:
  2883  04BB  2CC2               	goto	l1536
  2884  04BC                     u940:
  2885  04BC                     l1534:
  2886  04BC  0872               	movf	___awmod@divisor,w
  2887  04BD  02F4               	subwf	___awmod@dividend,f
  2888  04BE  0873               	movf	___awmod@divisor+1,w
  2889  04BF  1C03               	skipc
  2890  04C0  03F5               	decf	___awmod@dividend+1,f
  2891  04C1  02F5               	subwf	___awmod@dividend+1,f
  2892  04C2                     l1536:
  2893  04C2  3001               	movlw	1
  2894  04C3                     u955:
  2895  04C3  1003               	clrc
  2896  04C4  0CF3               	rrf	___awmod@divisor+1,f
  2897  04C5  0CF2               	rrf	___awmod@divisor,f
  2898  04C6  3EFF               	addlw	-1
  2899  04C7  1D03               	skipz
  2900  04C8  2CC3               	goto	u955
  2901  04C9                     l1538:
  2902  04C9  3001               	movlw	1
  2903  04CA  02F7               	subwf	___awmod@counter,f
  2904  04CB  1D03               	btfss	3,2
  2905  04CC  2CCE               	goto	u961
  2906  04CD  2CCF               	goto	u960
  2907  04CE                     u961:
  2908  04CE  2CB2               	goto	l1532
  2909  04CF                     u960:
  2910  04CF                     l1540:
  2911  04CF  0878               	movf	___awmod@sign,w
  2912  04D0  1903               	btfsc	3,2
  2913  04D1  2CD3               	goto	u971
  2914  04D2  2CD4               	goto	u970
  2915  04D3                     u971:
  2916  04D3  2CD9               	goto	l1544
  2917  04D4                     u970:
  2918  04D4                     l1542:
  2919  04D4  09F4               	comf	___awmod@dividend,f
  2920  04D5  09F5               	comf	___awmod@dividend+1,f
  2921  04D6  0AF4               	incf	___awmod@dividend,f
  2922  04D7  1903               	skipnz
  2923  04D8  0AF5               	incf	___awmod@dividend+1,f
  2924  04D9                     l1544:
  2925  04D9  0875               	movf	___awmod@dividend+1,w
  2926  04DA  00F3               	movwf	?___awmod+1
  2927  04DB  0874               	movf	___awmod@dividend,w
  2928  04DC  00F2               	movwf	?___awmod
  2929  04DD                     l534:
  2930  04DD  0008               	return
  2931  04DE                     __end_of___awmod:
  2932                           
  2933                           	psect	text10
  2934  0357                     __ptext10:	
  2935 ;; *************** function ___awdiv *****************
  2936 ;; Defined at:
  2937 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  divisor         2    2[COMMON] int 
  2940 ;;  dividend        2    4[COMMON] int 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  quotient        2    2[BANK0 ] int 
  2943 ;;  sign            1    1[BANK0 ] unsigned char 
  2944 ;;  counter         1    0[BANK0 ] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    2[COMMON] int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         4       0       0       0       0
  2955 ;;      Locals:         0       4       0       0       0
  2956 ;;      Temps:          1       0       0       0       0
  2957 ;;      Totals:         5       4       0       0       0
  2958 ;;Total ram usage:        9 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_division
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function ___awdiv
  2970  0357                     ___awdiv:
  2971  0357                     l1994:	
  2972                           ;incstack = 0
  2973                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2974                           
  2975  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0359  01A1               	clrf	___awdiv@sign
  2978  035A                     l1996:
  2979  035A  1FF3               	btfss	___awdiv@divisor+1,7
  2980  035B  2B5D               	goto	u1411
  2981  035C  2B5E               	goto	u1410
  2982  035D                     u1411:
  2983  035D  2B65               	goto	l2002
  2984  035E                     u1410:
  2985  035E                     l1998:
  2986  035E  09F2               	comf	___awdiv@divisor,f
  2987  035F  09F3               	comf	___awdiv@divisor+1,f
  2988  0360  0AF2               	incf	___awdiv@divisor,f
  2989  0361  1903               	skipnz
  2990  0362  0AF3               	incf	___awdiv@divisor+1,f
  2991  0363                     l2000:
  2992  0363  01A1               	clrf	___awdiv@sign
  2993  0364  0AA1               	incf	___awdiv@sign,f
  2994  0365                     l2002:
  2995  0365  1FF5               	btfss	___awdiv@dividend+1,7
  2996  0366  2B68               	goto	u1421
  2997  0367  2B69               	goto	u1420
  2998  0368                     u1421:
  2999  0368  2B72               	goto	l2008
  3000  0369                     u1420:
  3001  0369                     l2004:
  3002  0369  09F4               	comf	___awdiv@dividend,f
  3003  036A  09F5               	comf	___awdiv@dividend+1,f
  3004  036B  0AF4               	incf	___awdiv@dividend,f
  3005  036C  1903               	skipnz
  3006  036D  0AF5               	incf	___awdiv@dividend+1,f
  3007  036E                     l2006:
  3008  036E  3001               	movlw	1
  3009  036F  00F6               	movwf	??___awdiv
  3010  0370  0876               	movf	??___awdiv,w
  3011  0371  06A1               	xorwf	___awdiv@sign,f
  3012  0372                     l2008:
  3013  0372  01A2               	clrf	___awdiv@quotient
  3014  0373  01A3               	clrf	___awdiv@quotient+1
  3015  0374                     l2010:
  3016  0374  0872               	movf	___awdiv@divisor,w
  3017  0375  0473               	iorwf	___awdiv@divisor+1,w
  3018  0376  1903               	btfsc	3,2
  3019  0377  2B79               	goto	u1431
  3020  0378  2B7A               	goto	u1430
  3021  0379                     u1431:
  3022  0379  2BB1               	goto	l2030
  3023  037A                     u1430:
  3024  037A                     l2012:
  3025  037A  01A0               	clrf	___awdiv@counter
  3026  037B  0AA0               	incf	___awdiv@counter,f
  3027  037C  2B88               	goto	l2018
  3028  037D                     l2014:
  3029  037D  3001               	movlw	1
  3030  037E                     u1445:
  3031  037E  1003               	clrc
  3032  037F  0DF2               	rlf	___awdiv@divisor,f
  3033  0380  0DF3               	rlf	___awdiv@divisor+1,f
  3034  0381  3EFF               	addlw	-1
  3035  0382  1D03               	skipz
  3036  0383  2B7E               	goto	u1445
  3037  0384                     l2016:
  3038  0384  3001               	movlw	1
  3039  0385  00F6               	movwf	??___awdiv
  3040  0386  0876               	movf	??___awdiv,w
  3041  0387  07A0               	addwf	___awdiv@counter,f
  3042  0388                     l2018:
  3043  0388  1FF3               	btfss	___awdiv@divisor+1,7
  3044  0389  2B8B               	goto	u1451
  3045  038A  2B8C               	goto	u1450
  3046  038B                     u1451:
  3047  038B  2B7D               	goto	l2014
  3048  038C                     u1450:
  3049  038C                     l2020:
  3050  038C  3001               	movlw	1
  3051  038D                     u1465:
  3052  038D  1003               	clrc
  3053  038E  0DA2               	rlf	___awdiv@quotient,f
  3054  038F  0DA3               	rlf	___awdiv@quotient+1,f
  3055  0390  3EFF               	addlw	-1
  3056  0391  1D03               	skipz
  3057  0392  2B8D               	goto	u1465
  3058  0393  0873               	movf	___awdiv@divisor+1,w
  3059  0394  0275               	subwf	___awdiv@dividend+1,w
  3060  0395  1D03               	skipz
  3061  0396  2B99               	goto	u1475
  3062  0397  0872               	movf	___awdiv@divisor,w
  3063  0398  0274               	subwf	___awdiv@dividend,w
  3064  0399                     u1475:
  3065  0399  1C03               	skipc
  3066  039A  2B9C               	goto	u1471
  3067  039B  2B9D               	goto	u1470
  3068  039C                     u1471:
  3069  039C  2BA4               	goto	l2026
  3070  039D                     u1470:
  3071  039D                     l2022:
  3072  039D  0872               	movf	___awdiv@divisor,w
  3073  039E  02F4               	subwf	___awdiv@dividend,f
  3074  039F  0873               	movf	___awdiv@divisor+1,w
  3075  03A0  1C03               	skipc
  3076  03A1  03F5               	decf	___awdiv@dividend+1,f
  3077  03A2  02F5               	subwf	___awdiv@dividend+1,f
  3078  03A3                     l2024:
  3079  03A3  1422               	bsf	___awdiv@quotient,0
  3080  03A4                     l2026:
  3081  03A4  3001               	movlw	1
  3082  03A5                     u1485:
  3083  03A5  1003               	clrc
  3084  03A6  0CF3               	rrf	___awdiv@divisor+1,f
  3085  03A7  0CF2               	rrf	___awdiv@divisor,f
  3086  03A8  3EFF               	addlw	-1
  3087  03A9  1D03               	skipz
  3088  03AA  2BA5               	goto	u1485
  3089  03AB                     l2028:
  3090  03AB  3001               	movlw	1
  3091  03AC  02A0               	subwf	___awdiv@counter,f
  3092  03AD  1D03               	btfss	3,2
  3093  03AE  2BB0               	goto	u1491
  3094  03AF  2BB1               	goto	u1490
  3095  03B0                     u1491:
  3096  03B0  2B8C               	goto	l2020
  3097  03B1                     u1490:
  3098  03B1                     l2030:
  3099  03B1  0821               	movf	___awdiv@sign,w
  3100  03B2  1903               	btfsc	3,2
  3101  03B3  2BB5               	goto	u1501
  3102  03B4  2BB6               	goto	u1500
  3103  03B5                     u1501:
  3104  03B5  2BBB               	goto	l2034
  3105  03B6                     u1500:
  3106  03B6                     l2032:
  3107  03B6  09A2               	comf	___awdiv@quotient,f
  3108  03B7  09A3               	comf	___awdiv@quotient+1,f
  3109  03B8  0AA2               	incf	___awdiv@quotient,f
  3110  03B9  1903               	skipnz
  3111  03BA  0AA3               	incf	___awdiv@quotient+1,f
  3112  03BB                     l2034:
  3113  03BB  0823               	movf	___awdiv@quotient+1,w
  3114  03BC  00F3               	movwf	?___awdiv+1
  3115  03BD  0822               	movf	___awdiv@quotient,w
  3116  03BE  00F2               	movwf	?___awdiv
  3117  03BF                     l521:
  3118  03BF  0008               	return
  3119  03C0                     __end_of___awdiv:
  3120                           
  3121                           	psect	text11
  3122  0583                     __ptext11:	
  3123 ;; *************** function _Lcd_Write_String *****************
  3124 ;; Defined at:
  3125 ;;		line 98 in file "LCD.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  a               2    7[COMMON] PTR unsigned char 
  3128 ;;		 -> STR_5(4), STR_4(3), main@buffer2(20), main@buffer(20), 
  3129 ;;		 -> STR_1(18), 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  i               2    3[BANK0 ] int 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         2       0       0       0       0
  3142 ;;      Locals:         0       2       0       0       0
  3143 ;;      Temps:          0       3       0       0       0
  3144 ;;      Totals:         2       5       0       0       0
  3145 ;;Total ram usage:        7 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    3
  3148 ;; This function calls:
  3149 ;;		_Lcd_Write_Char
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _Lcd_Write_String
  3157  0583                     _Lcd_Write_String:
  3158  0583                     l2132:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3161                           
  3162                           
  3163                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3164  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0584  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0585  01A3               	clrf	Lcd_Write_String@i
  3167  0586  01A4               	clrf	Lcd_Write_String@i+1
  3168  0587  2DAC               	goto	l2138
  3169  0588                     l2134:
  3170                           
  3171                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3172  0588  0823               	movf	Lcd_Write_String@i,w
  3173  0589  0777               	addwf	Lcd_Write_String@a,w
  3174  058A  00A1               	movwf	??_Lcd_Write_String+1
  3175  058B  0878               	movf	Lcd_Write_String@a+1,w
  3176  058C  00A0               	movwf	??_Lcd_Write_String
  3177  058D  1803               	skipnc
  3178  058E  0AA0               	incf	??_Lcd_Write_String,f
  3179  058F  1FA3               	btfss	Lcd_Write_String@i,7
  3180  0590  2D92               	goto	u1580
  3181  0591  03A0               	decf	??_Lcd_Write_String,f
  3182  0592                     u1580:
  3183  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0593  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0594  0820               	movf	??_Lcd_Write_String,w
  3186  0595  00A2               	movwf	??_Lcd_Write_String+2
  3187  0596  0822               	movf	??_Lcd_Write_String+2,w
  3188  0597  00FF               	movwf	btemp+1
  3189  0598  0821               	movf	??_Lcd_Write_String+1,w
  3190  0599  0084               	movwf	4
  3191  059A  120A  118A  26BA  120A  118A  	fcall	stringtab
  3192  059F  120A  118A  2649  120A  118A  	fcall	_Lcd_Write_Char
  3193  05A4                     l2136:
  3194  05A4  3001               	movlw	1
  3195  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3196  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3197  05A7  07A3               	addwf	Lcd_Write_String@i,f
  3198  05A8  1803               	skipnc
  3199  05A9  0AA4               	incf	Lcd_Write_String@i+1,f
  3200  05AA  3000               	movlw	0
  3201  05AB  07A4               	addwf	Lcd_Write_String@i+1,f
  3202  05AC                     l2138:
  3203  05AC  0823               	movf	Lcd_Write_String@i,w
  3204  05AD  0777               	addwf	Lcd_Write_String@a,w
  3205  05AE  00A1               	movwf	??_Lcd_Write_String+1
  3206  05AF  0878               	movf	Lcd_Write_String@a+1,w
  3207  05B0  00A0               	movwf	??_Lcd_Write_String
  3208  05B1  1803               	skipnc
  3209  05B2  0AA0               	incf	??_Lcd_Write_String,f
  3210  05B3  1FA3               	btfss	Lcd_Write_String@i,7
  3211  05B4  2DB6               	goto	u1590
  3212  05B5  03A0               	decf	??_Lcd_Write_String,f
  3213  05B6                     u1590:
  3214  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3215  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3216  05B8  0820               	movf	??_Lcd_Write_String,w
  3217  05B9  00A2               	movwf	??_Lcd_Write_String+2
  3218  05BA  0822               	movf	??_Lcd_Write_String+2,w
  3219  05BB  00FF               	movwf	btemp+1
  3220  05BC  0821               	movf	??_Lcd_Write_String+1,w
  3221  05BD  0084               	movwf	4
  3222  05BE  120A  118A  26BA  120A  118A  	fcall	stringtab
  3223  05C3  3A00               	xorlw	0
  3224  05C4  1D03               	skipz
  3225  05C5  2DC7               	goto	u1601
  3226  05C6  2DC8               	goto	u1600
  3227  05C7                     u1601:
  3228  05C7  2D88               	goto	l2134
  3229  05C8                     u1600:
  3230  05C8                     l248:
  3231  05C8  0008               	return
  3232  05C9                     __end_of_Lcd_Write_String:
  3233                           
  3234                           	psect	text12
  3235  0649                     __ptext12:	
  3236 ;; *************** function _Lcd_Write_Char *****************
  3237 ;; Defined at:
  3238 ;;		line 83 in file "LCD.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  a               1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  a               1    6[COMMON] unsigned char 
  3243 ;;  y               1    5[COMMON] unsigned char 
  3244 ;;  temp            1    4[COMMON] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       0       0       0
  3255 ;;      Locals:         3       0       0       0       0
  3256 ;;      Temps:          1       0       0       0       0
  3257 ;;      Totals:         4       0       0       0       0
  3258 ;;Total ram usage:        4 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		_Lcd_Port
  3263 ;; This function is called by:
  3264 ;;		_Lcd_Write_String
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _Lcd_Write_Char
  3270  0649                     _Lcd_Write_Char:
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3274                           ;Lcd_Write_Char@a stored from wreg
  3275  0649  00F6               	movwf	Lcd_Write_Char@a
  3276  064A                     l1582:
  3277                           
  3278                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3279  064A  0876               	movf	Lcd_Write_Char@a,w
  3280  064B  390F               	andlw	15
  3281  064C  00F3               	movwf	??_Lcd_Write_Char
  3282  064D  0873               	movf	??_Lcd_Write_Char,w
  3283  064E  00F4               	movwf	Lcd_Write_Char@temp
  3284                           
  3285                           ;LCD.c: 86:     y = a & 0xF0;
  3286  064F  0876               	movf	Lcd_Write_Char@a,w
  3287  0650  39F0               	andlw	240
  3288  0651  00F3               	movwf	??_Lcd_Write_Char
  3289  0652  0873               	movf	??_Lcd_Write_Char,w
  3290  0653  00F5               	movwf	Lcd_Write_Char@y
  3291  0654                     l1584:
  3292                           
  3293                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3294  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0656  1508               	bsf	8,2	;volatile
  3297  0657                     l1586:
  3298                           
  3299                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3300  0657  0875               	movf	Lcd_Write_Char@y,w
  3301  0658  00F3               	movwf	??_Lcd_Write_Char
  3302  0659  3004               	movlw	4
  3303  065A                     u1015:
  3304  065A  1003               	clrc
  3305  065B  0CF3               	rrf	??_Lcd_Write_Char,f
  3306  065C  3EFF               	addlw	-1
  3307  065D  1D03               	skipz
  3308  065E  2E5A               	goto	u1015
  3309  065F  0873               	movf	??_Lcd_Write_Char,w
  3310  0660  120A  118A  271F  120A  118A  	fcall	_Lcd_Port
  3311  0665                     l1588:
  3312                           
  3313                           ;LCD.c: 89:     RD3 = 1;
  3314  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0667  1588               	bsf	8,3	;volatile
  3317  0668                     l1590:
  3318                           
  3319                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3320  0668  301A               	movlw	26
  3321  0669  00F3               	movwf	??_Lcd_Write_Char
  3322  066A                     u1847:
  3323  066A  0BF3               	decfsz	??_Lcd_Write_Char,f
  3324  066B  2E6A               	goto	u1847
  3325  066C  0000               	nop
  3326  066D                     l1592:
  3327                           
  3328                           ;LCD.c: 91:     RD3 = 0;
  3329  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3330  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3331  066F  1188               	bcf	8,3	;volatile
  3332  0670                     l1594:
  3333                           
  3334                           ;LCD.c: 92:     Lcd_Port(temp);
  3335  0670  0874               	movf	Lcd_Write_Char@temp,w
  3336  0671  120A  118A  271F  120A  118A  	fcall	_Lcd_Port
  3337  0676                     l1596:
  3338                           
  3339                           ;LCD.c: 93:     RD3 = 1;
  3340  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0677  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0678  1588               	bsf	8,3	;volatile
  3343  0679                     l1598:
  3344                           
  3345                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3346  0679  301A               	movlw	26
  3347  067A  00F3               	movwf	??_Lcd_Write_Char
  3348  067B                     u1857:
  3349  067B  0BF3               	decfsz	??_Lcd_Write_Char,f
  3350  067C  2E7B               	goto	u1857
  3351  067D  0000               	nop
  3352  067E                     l1600:
  3353                           
  3354                           ;LCD.c: 95:     RD3 = 0;
  3355  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3356  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0680  1188               	bcf	8,3	;volatile
  3358  0681                     l242:
  3359  0681  0008               	return
  3360  0682                     __end_of_Lcd_Write_Char:
  3361                           
  3362                           	psect	text13
  3363  04DE                     __ptext13:	
  3364 ;; *************** function _Lcd_Set_Cursor *****************
  3365 ;; Defined at:
  3366 ;;		line 48 in file "LCD.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  a               1    wreg     unsigned char 
  3369 ;;  b               1    6[COMMON] unsigned char 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  a               1    0[BANK0 ] unsigned char 
  3372 ;;  temp            1    3[BANK0 ] unsigned char 
  3373 ;;  y               1    2[BANK0 ] unsigned char 
  3374 ;;  z               1    1[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         1       0       0       0       0
  3385 ;;      Locals:         0       4       0       0       0
  3386 ;;      Temps:          2       0       0       0       0
  3387 ;;      Totals:         3       4       0       0       0
  3388 ;;Total ram usage:        7 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    3
  3391 ;; This function calls:
  3392 ;;		_Lcd_Cmd
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _Lcd_Set_Cursor
  3400  04DE                     _Lcd_Set_Cursor:
  3401                           
  3402                           ;incstack = 0
  3403                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3404                           ;Lcd_Set_Cursor@a stored from wreg
  3405  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3406  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3407  04E0  00A0               	movwf	Lcd_Set_Cursor@a
  3408  04E1                     l1714:
  3409                           
  3410                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3411  04E1  0320               	decf	Lcd_Set_Cursor@a,w
  3412  04E2  1D03               	btfss	3,2
  3413  04E3  2CE5               	goto	u1151
  3414  04E4  2CE6               	goto	u1150
  3415  04E5                     u1151:
  3416  04E5  2D0B               	goto	l1724
  3417  04E6                     u1150:
  3418  04E6                     l1716:
  3419                           
  3420                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3421  04E6  0876               	movf	Lcd_Set_Cursor@b,w
  3422  04E7  3E7F               	addlw	127
  3423  04E8  00F7               	movwf	??_Lcd_Set_Cursor
  3424  04E9  0877               	movf	??_Lcd_Set_Cursor,w
  3425  04EA  00A3               	movwf	Lcd_Set_Cursor@temp
  3426                           
  3427                           ;LCD.c: 52:         z = temp >> 4;
  3428  04EB  0823               	movf	Lcd_Set_Cursor@temp,w
  3429  04EC  00F7               	movwf	??_Lcd_Set_Cursor
  3430  04ED  3004               	movlw	4
  3431  04EE                     u1165:
  3432  04EE  1003               	clrc
  3433  04EF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3434  04F0  3EFF               	addlw	-1
  3435  04F1  1D03               	skipz
  3436  04F2  2CEE               	goto	u1165
  3437  04F3  0877               	movf	??_Lcd_Set_Cursor,w
  3438  04F4  00F8               	movwf	??_Lcd_Set_Cursor+1
  3439  04F5  0878               	movf	??_Lcd_Set_Cursor+1,w
  3440  04F6  00A1               	movwf	Lcd_Set_Cursor@z
  3441  04F7                     l1718:
  3442                           
  3443                           ;LCD.c: 53:         y = temp & 0x0F;
  3444  04F7  0823               	movf	Lcd_Set_Cursor@temp,w
  3445  04F8  390F               	andlw	15
  3446  04F9  00F7               	movwf	??_Lcd_Set_Cursor
  3447  04FA  0877               	movf	??_Lcd_Set_Cursor,w
  3448  04FB  00A2               	movwf	Lcd_Set_Cursor@y
  3449  04FC                     l1720:
  3450                           
  3451                           ;LCD.c: 54:         Lcd_Cmd(z);
  3452  04FC  0821               	movf	Lcd_Set_Cursor@z,w
  3453  04FD  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3454  0502                     l1722:
  3455                           
  3456                           ;LCD.c: 55:         Lcd_Cmd(y);
  3457  0502  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0503  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0504  0822               	movf	Lcd_Set_Cursor@y,w
  3460  0505  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3461                           
  3462                           ;LCD.c: 56:     } else if (a == 2) {
  3463  050A  2D35               	goto	l236
  3464  050B                     l1724:
  3465  050B  3002               	movlw	2
  3466  050C  0620               	xorwf	Lcd_Set_Cursor@a,w
  3467  050D  1D03               	btfss	3,2
  3468  050E  2D10               	goto	u1171
  3469  050F  2D11               	goto	u1170
  3470  0510                     u1171:
  3471  0510  2D35               	goto	l236
  3472  0511                     u1170:
  3473  0511                     l1726:
  3474                           
  3475                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3476  0511  0876               	movf	Lcd_Set_Cursor@b,w
  3477  0512  3EBF               	addlw	191
  3478  0513  00F7               	movwf	??_Lcd_Set_Cursor
  3479  0514  0877               	movf	??_Lcd_Set_Cursor,w
  3480  0515  00A3               	movwf	Lcd_Set_Cursor@temp
  3481                           
  3482                           ;LCD.c: 58:         z = temp >> 4;
  3483  0516  0823               	movf	Lcd_Set_Cursor@temp,w
  3484  0517  00F7               	movwf	??_Lcd_Set_Cursor
  3485  0518  3004               	movlw	4
  3486  0519                     u1185:
  3487  0519  1003               	clrc
  3488  051A  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3489  051B  3EFF               	addlw	-1
  3490  051C  1D03               	skipz
  3491  051D  2D19               	goto	u1185
  3492  051E  0877               	movf	??_Lcd_Set_Cursor,w
  3493  051F  00F8               	movwf	??_Lcd_Set_Cursor+1
  3494  0520  0878               	movf	??_Lcd_Set_Cursor+1,w
  3495  0521  00A1               	movwf	Lcd_Set_Cursor@z
  3496  0522                     l1728:
  3497                           
  3498                           ;LCD.c: 59:         y = temp & 0x0F;
  3499  0522  0823               	movf	Lcd_Set_Cursor@temp,w
  3500  0523  390F               	andlw	15
  3501  0524  00F7               	movwf	??_Lcd_Set_Cursor
  3502  0525  0877               	movf	??_Lcd_Set_Cursor,w
  3503  0526  00A2               	movwf	Lcd_Set_Cursor@y
  3504  0527                     l1730:
  3505                           
  3506                           ;LCD.c: 60:         Lcd_Cmd(z);
  3507  0527  0821               	movf	Lcd_Set_Cursor@z,w
  3508  0528  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3509  052D                     l1732:
  3510                           
  3511                           ;LCD.c: 61:         Lcd_Cmd(y);
  3512  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3513  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3514  052F  0822               	movf	Lcd_Set_Cursor@y,w
  3515  0530  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3516  0535                     l236:
  3517  0535  0008               	return
  3518  0536                     __end_of_Lcd_Set_Cursor:
  3519                           
  3520                           	psect	text14
  3521  0428                     __ptext14:	
  3522 ;; *************** function _Lcd_Init *****************
  3523 ;; Defined at:
  3524 ;;		line 65 in file "LCD.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3538 ;;      Params:         0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0
  3540 ;;      Temps:          2       0       0       0       0
  3541 ;;      Totals:         2       0       0       0       0
  3542 ;;Total ram usage:        2 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    3
  3545 ;; This function calls:
  3546 ;;		_Lcd_Cmd
  3547 ;;		_Lcd_Port
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _Lcd_Init
  3555  0428                     _Lcd_Init:
  3556  0428                     l1702:	
  3557                           ;incstack = 0
  3558                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3559                           
  3560                           
  3561                           ;LCD.c: 66:     Lcd_Port(0x00);
  3562  0428  3000               	movlw	0
  3563  0429  120A  118A  271F  120A  118A  	fcall	_Lcd_Port
  3564  042E                     l1704:
  3565                           
  3566                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3567  042E  3034               	movlw	52
  3568  042F  00F7               	movwf	??_Lcd_Init+1
  3569  0430  30F1               	movlw	241
  3570  0431  00F6               	movwf	??_Lcd_Init
  3571  0432                     u1867:
  3572  0432  0BF6               	decfsz	??_Lcd_Init,f
  3573  0433  2C32               	goto	u1867
  3574  0434  0BF7               	decfsz	??_Lcd_Init+1,f
  3575  0435  2C32               	goto	u1867
  3576  0436  2C37               	nop2
  3577  0437                     l1706:
  3578                           
  3579                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3580  0437  3003               	movlw	3
  3581  0438  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3582                           
  3583                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3584  043D  300D               	movlw	13
  3585  043E  00F7               	movwf	??_Lcd_Init+1
  3586  043F  30FB               	movlw	251
  3587  0440  00F6               	movwf	??_Lcd_Init
  3588  0441                     u1877:
  3589  0441  0BF6               	decfsz	??_Lcd_Init,f
  3590  0442  2C41               	goto	u1877
  3591  0443  0BF7               	decfsz	??_Lcd_Init+1,f
  3592  0444  2C41               	goto	u1877
  3593  0445  2C46               	nop2
  3594  0446                     l1708:
  3595                           
  3596                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3597  0446  3003               	movlw	3
  3598  0447  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3599  044C                     l1710:
  3600                           
  3601                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3602  044C  301D               	movlw	29
  3603  044D  00F7               	movwf	??_Lcd_Init+1
  3604  044E  3091               	movlw	145
  3605  044F  00F6               	movwf	??_Lcd_Init
  3606  0450                     u1887:
  3607  0450  0BF6               	decfsz	??_Lcd_Init,f
  3608  0451  2C50               	goto	u1887
  3609  0452  0BF7               	decfsz	??_Lcd_Init+1,f
  3610  0453  2C50               	goto	u1887
  3611                           
  3612                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3613  0454  3003               	movlw	3
  3614  0455  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3615                           
  3616                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3617  045A  3002               	movlw	2
  3618  045B  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3619                           
  3620                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3621  0460  3002               	movlw	2
  3622  0461  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3623                           
  3624                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3625  0466  3008               	movlw	8
  3626  0467  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3627                           
  3628                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3629  046C  3000               	movlw	0
  3630  046D  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3631                           
  3632                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3633  0472  300C               	movlw	12
  3634  0473  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3635                           
  3636                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3637  0478  3000               	movlw	0
  3638  0479  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3639                           
  3640                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3641  047E  3006               	movlw	6
  3642  047F  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3643  0484                     l239:
  3644  0484  0008               	return
  3645  0485                     __end_of_Lcd_Init:
  3646                           
  3647                           	psect	text15
  3648  0777                     __ptext15:	
  3649 ;; *************** function _Lcd_Clear *****************
  3650 ;; Defined at:
  3651 ;;		line 43 in file "LCD.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0
  3668 ;;      Totals:         0       0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    3
  3672 ;; This function calls:
  3673 ;;		_Lcd_Cmd
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           
  3680                           ;psect for function _Lcd_Clear
  3681  0777                     _Lcd_Clear:
  3682  0777                     l1712:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3685                           
  3686                           
  3687                           ;LCD.c: 44:     Lcd_Cmd(0);
  3688  0777  3000               	movlw	0
  3689  0778  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3690                           
  3691                           ;LCD.c: 45:     Lcd_Cmd(1);
  3692  077D  3001               	movlw	1
  3693  077E  120A  118A  275D  120A  118A  	fcall	_Lcd_Cmd
  3694  0783                     l230:
  3695  0783  0008               	return
  3696  0784                     __end_of_Lcd_Clear:
  3697                           
  3698                           	psect	text16
  3699  075D                     __ptext16:	
  3700 ;; *************** function _Lcd_Cmd *****************
  3701 ;; Defined at:
  3702 ;;		line 35 in file "LCD.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  a               1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  a               1    5[COMMON] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         0       0       0       0       0
  3717 ;;      Locals:         1       0       0       0       0
  3718 ;;      Temps:          2       0       0       0       0
  3719 ;;      Totals:         3       0       0       0       0
  3720 ;;Total ram usage:        3 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    2
  3723 ;; This function calls:
  3724 ;;		_Lcd_Port
  3725 ;; This function is called by:
  3726 ;;		_Lcd_Clear
  3727 ;;		_Lcd_Set_Cursor
  3728 ;;		_Lcd_Init
  3729 ;;		_Lcd_Shift_Right
  3730 ;;		_Lcd_Shift_Left
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           
  3735                           ;psect for function _Lcd_Cmd
  3736  075D                     _Lcd_Cmd:
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3740                           ;Lcd_Cmd@a stored from wreg
  3741  075D  00F5               	movwf	Lcd_Cmd@a
  3742  075E                     l1572:
  3743                           
  3744                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3745  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3746  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0760  1108               	bcf	8,2	;volatile
  3748  0761                     l1574:
  3749                           
  3750                           ;LCD.c: 37:     Lcd_Port(a);
  3751  0761  0875               	movf	Lcd_Cmd@a,w
  3752  0762  120A  118A  271F  120A  118A  	fcall	_Lcd_Port
  3753  0767                     l1576:
  3754                           
  3755                           ;LCD.c: 38:     RD3 = 1;
  3756  0767  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0768  1303               	bcf	3,6	;RP1=0, select bank0
  3758  0769  1588               	bsf	8,3	;volatile
  3759  076A                     l1578:
  3760                           
  3761                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3762  076A  300B               	movlw	11
  3763  076B  00F4               	movwf	??_Lcd_Cmd+1
  3764  076C  3062               	movlw	98
  3765  076D  00F3               	movwf	??_Lcd_Cmd
  3766  076E                     u1897:
  3767  076E  0BF3               	decfsz	??_Lcd_Cmd,f
  3768  076F  2F6E               	goto	u1897
  3769  0770  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3770  0771  2F6E               	goto	u1897
  3771  0772  0000               	nop
  3772  0773                     l1580:
  3773                           
  3774                           ;LCD.c: 40:     RD3 = 0;
  3775  0773  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0774  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0775  1188               	bcf	8,3	;volatile
  3778  0776                     l227:
  3779  0776  0008               	return
  3780  0777                     __end_of_Lcd_Cmd:
  3781                           
  3782                           	psect	text17
  3783  071F                     __ptext17:	
  3784 ;; *************** function _Lcd_Port *****************
  3785 ;; Defined at:
  3786 ;;		line 13 in file "LCD.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  a               1    wreg     unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  a               1    2[COMMON] unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3800 ;;      Params:         0       0       0       0       0
  3801 ;;      Locals:         1       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0
  3803 ;;      Totals:         1       0       0       0       0
  3804 ;;Total ram usage:        1 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_Lcd_Cmd
  3811 ;;		_Lcd_Init
  3812 ;;		_Lcd_Write_Char
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _Lcd_Port
  3818  071F                     _Lcd_Port:
  3819                           
  3820                           ;incstack = 0
  3821                           ; Regs used in _Lcd_Port: [wreg]
  3822                           ;Lcd_Port@a stored from wreg
  3823  071F  00F2               	movwf	Lcd_Port@a
  3824  0720                     l1432:
  3825                           
  3826                           ;LCD.c: 14:     if (a & 1)
  3827  0720  1C72               	btfss	Lcd_Port@a,0
  3828  0721  2F23               	goto	u681
  3829  0722  2F24               	goto	u680
  3830  0723                     u681:
  3831  0723  2F28               	goto	l216
  3832  0724                     u680:
  3833  0724                     l1434:
  3834                           
  3835                           ;LCD.c: 15:         RD4 = 1;
  3836  0724  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0725  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0726  1608               	bsf	8,4	;volatile
  3839  0727  2F2B               	goto	l217
  3840  0728                     l216:	
  3841                           ;LCD.c: 16:     else
  3842                           
  3843                           
  3844                           ;LCD.c: 17:         RD4 = 0;
  3845  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0729  1303               	bcf	3,6	;RP1=0, select bank0
  3847  072A  1208               	bcf	8,4	;volatile
  3848  072B                     l217:
  3849                           
  3850                           ;LCD.c: 19:     if (a & 2)
  3851  072B  1CF2               	btfss	Lcd_Port@a,1
  3852  072C  2F2E               	goto	u691
  3853  072D  2F2F               	goto	u690
  3854  072E                     u691:
  3855  072E  2F31               	goto	l218
  3856  072F                     u690:
  3857  072F                     l1436:
  3858                           
  3859                           ;LCD.c: 20:         RD5 = 1;
  3860  072F  1688               	bsf	8,5	;volatile
  3861  0730  2F32               	goto	l219
  3862  0731                     l218:	
  3863                           ;LCD.c: 21:     else
  3864                           
  3865                           
  3866                           ;LCD.c: 22:         RD5 = 0;
  3867  0731  1288               	bcf	8,5	;volatile
  3868  0732                     l219:
  3869                           
  3870                           ;LCD.c: 24:     if (a & 4)
  3871  0732  1D72               	btfss	Lcd_Port@a,2
  3872  0733  2F35               	goto	u701
  3873  0734  2F36               	goto	u700
  3874  0735                     u701:
  3875  0735  2F38               	goto	l220
  3876  0736                     u700:
  3877  0736                     l1438:
  3878                           
  3879                           ;LCD.c: 25:         RD6 = 1;
  3880  0736  1708               	bsf	8,6	;volatile
  3881  0737  2F39               	goto	l221
  3882  0738                     l220:	
  3883                           ;LCD.c: 26:     else
  3884                           
  3885                           
  3886                           ;LCD.c: 27:         RD6 = 0;
  3887  0738  1308               	bcf	8,6	;volatile
  3888  0739                     l221:
  3889                           
  3890                           ;LCD.c: 29:     if (a & 8)
  3891  0739  1DF2               	btfss	Lcd_Port@a,3
  3892  073A  2F3C               	goto	u711
  3893  073B  2F3D               	goto	u710
  3894  073C                     u711:
  3895  073C  2F3F               	goto	l222
  3896  073D                     u710:
  3897  073D                     l1440:
  3898                           
  3899                           ;LCD.c: 30:         RD7 = 1;
  3900  073D  1788               	bsf	8,7	;volatile
  3901  073E  2F40               	goto	l224
  3902  073F                     l222:	
  3903                           ;LCD.c: 31:     else
  3904                           
  3905                           
  3906                           ;LCD.c: 32:         RD7 = 0;
  3907  073F  1388               	bcf	8,7	;volatile
  3908  0740                     l224:
  3909  0740  0008               	return
  3910  0741                     __end_of_Lcd_Port:
  3911                           
  3912                           	psect	text18
  3913  0791                     __ptext18:	
  3914 ;; *************** function _I2C_Master_Write *****************
  3915 ;; Defined at:
  3916 ;;		line 65 in file "I2C.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  d               2    2[COMMON] unsigned int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         2       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         2       0       0       0       0
  3934 ;;Total ram usage:        2 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    2
  3937 ;; This function calls:
  3938 ;;		_I2C_Master_Wait
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _I2C_Master_Write
  3946  0791                     _I2C_Master_Write:
  3947  0791                     l1808:	
  3948                           ;incstack = 0
  3949                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3950                           
  3951                           
  3952                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3953  0791  120A  118A  2784  120A  118A  	fcall	_I2C_Master_Wait
  3954  0796                     l1810:
  3955                           
  3956                           ;I2C.c: 68:     SSPBUF = d;
  3957  0796  0872               	movf	I2C_Master_Write@d,w
  3958  0797  1283               	bcf	3,5	;RP0=0, select bank0
  3959  0798  1303               	bcf	3,6	;RP1=0, select bank0
  3960  0799  0093               	movwf	19	;volatile
  3961  079A                     l191:
  3962  079A  0008               	return
  3963  079B                     __end_of_I2C_Master_Write:
  3964                           
  3965                           	psect	text19
  3966  079B                     __ptext19:	
  3967 ;; *************** function _I2C_Master_Stop *****************
  3968 ;; Defined at:
  3969 ;;		line 55 in file "I2C.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3983 ;;      Params:         0       0       0       0       0
  3984 ;;      Locals:         0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0
  3986 ;;      Totals:         0       0       0       0       0
  3987 ;;Total ram usage:        0 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    2
  3990 ;; This function calls:
  3991 ;;		_I2C_Master_Wait
  3992 ;; This function is called by:
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _I2C_Master_Stop
  3999  079B                     _I2C_Master_Stop:
  4000  079B                     l1828:	
  4001                           ;incstack = 0
  4002                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4003                           
  4004                           
  4005                           ;I2C.c: 57:     I2C_Master_Wait();
  4006  079B  120A  118A  2784  120A  118A  	fcall	_I2C_Master_Wait
  4007  07A0                     l1830:
  4008                           
  4009                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4010  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  4011  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  4012  07A2  1511               	bsf	17,2	;volatile
  4013  07A3                     l188:
  4014  07A3  0008               	return
  4015  07A4                     __end_of_I2C_Master_Stop:
  4016                           
  4017                           	psect	text20
  4018  07A4                     __ptext20:	
  4019 ;; *************** function _I2C_Master_Start *****************
  4020 ;; Defined at:
  4021 ;;		line 39 in file "I2C.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4035 ;;      Params:         0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0
  4038 ;;      Totals:         0       0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    2
  4042 ;; This function calls:
  4043 ;;		_I2C_Master_Wait
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _I2C_Master_Start
  4051  07A4                     _I2C_Master_Start:
  4052  07A4                     l1804:	
  4053                           ;incstack = 0
  4054                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4055                           
  4056                           
  4057                           ;I2C.c: 41:     I2C_Master_Wait();
  4058  07A4  120A  118A  2784  120A  118A  	fcall	_I2C_Master_Wait
  4059  07A9                     l1806:
  4060                           
  4061                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4062  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  4063  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  4064  07AB  1411               	bsf	17,0	;volatile
  4065  07AC                     l182:
  4066  07AC  0008               	return
  4067  07AD                     __end_of_I2C_Master_Start:
  4068                           
  4069                           	psect	text21
  4070  06F1                     __ptext21:	
  4071 ;; *************** function _I2C_Master_Read *****************
  4072 ;; Defined at:
  4073 ;;		line 74 in file "I2C.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  a               2    2[COMMON] unsigned short 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  temp            2    6[COMMON] unsigned short 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2    2[COMMON] unsigned short 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         2       0       0       0       0
  4088 ;;      Locals:         2       0       0       0       0
  4089 ;;      Temps:          2       0       0       0       0
  4090 ;;      Totals:         6       0       0       0       0
  4091 ;;Total ram usage:        6 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    2
  4094 ;; This function calls:
  4095 ;;		_I2C_Master_Wait
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function _I2C_Master_Read
  4103  06F1                     _I2C_Master_Read:
  4104  06F1                     l1812:	
  4105                           ;incstack = 0
  4106                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4107                           
  4108                           
  4109                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4110  06F1  120A  118A  2784  120A  118A  	fcall	_I2C_Master_Wait
  4111  06F6                     l1814:
  4112                           
  4113                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4114  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  4115  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  4116  06F8  1591               	bsf	17,3	;volatile
  4117                           
  4118                           ;I2C.c: 79:     I2C_Master_Wait();
  4119  06F9  120A  118A  2784  120A  118A  	fcall	_I2C_Master_Wait
  4120  06FE                     l1816:
  4121                           
  4122                           ;I2C.c: 80:     temp = SSPBUF;
  4123  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  4124  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0700  0813               	movf	19,w	;volatile
  4126  0701  00F4               	movwf	??_I2C_Master_Read
  4127  0702  01F5               	clrf	??_I2C_Master_Read+1
  4128  0703  0874               	movf	??_I2C_Master_Read,w
  4129  0704  00F6               	movwf	I2C_Master_Read@temp
  4130  0705  0875               	movf	??_I2C_Master_Read+1,w
  4131  0706  00F7               	movwf	I2C_Master_Read@temp+1
  4132  0707                     l1818:
  4133                           
  4134                           ;I2C.c: 81:     I2C_Master_Wait();
  4135  0707  120A  118A  2784  120A  118A  	fcall	_I2C_Master_Wait
  4136  070C                     l1820:
  4137                           
  4138                           ;I2C.c: 82:     if(a == 1){
  4139  070C  0372               	decf	I2C_Master_Read@a,w
  4140  070D  0473               	iorwf	I2C_Master_Read@a+1,w
  4141  070E  1D03               	btfss	3,2
  4142  070F  2F11               	goto	u1291
  4143  0710  2F12               	goto	u1290
  4144  0711                     u1291:
  4145  0711  2F16               	goto	l194
  4146  0712                     u1290:
  4147  0712                     l1822:
  4148                           
  4149                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4150  0712  1683               	bsf	3,5	;RP0=1, select bank1
  4151  0713  1303               	bcf	3,6	;RP1=0, select bank1
  4152  0714  1291               	bcf	17,5	;volatile
  4153                           
  4154                           ;I2C.c: 84:     }else{
  4155  0715  2F19               	goto	l195
  4156  0716                     l194:
  4157                           
  4158                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4159  0716  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0717  1303               	bcf	3,6	;RP1=0, select bank1
  4161  0718  1691               	bsf	17,5	;volatile
  4162  0719                     l195:	
  4163                           ;I2C.c: 86:     }
  4164                           
  4165                           
  4166                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4167  0719  1611               	bsf	17,4	;volatile
  4168  071A                     l1824:
  4169                           
  4170                           ;I2C.c: 88:     return temp;
  4171  071A  0877               	movf	I2C_Master_Read@temp+1,w
  4172  071B  00F3               	movwf	?_I2C_Master_Read+1
  4173  071C  0876               	movf	I2C_Master_Read@temp,w
  4174  071D  00F2               	movwf	?_I2C_Master_Read
  4175  071E                     l196:
  4176  071E  0008               	return
  4177  071F                     __end_of_I2C_Master_Read:
  4178                           
  4179                           	psect	text22
  4180  0784                     __ptext22:	
  4181 ;; *************** function _I2C_Master_Wait *****************
  4182 ;; Defined at:
  4183 ;;		line 32 in file "I2C.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4197 ;;      Params:         0       0       0       0       0
  4198 ;;      Locals:         0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0
  4200 ;;      Totals:         0       0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_I2C_Master_Start
  4208 ;;		_I2C_Master_Stop
  4209 ;;		_I2C_Master_Write
  4210 ;;		_I2C_Master_Read
  4211 ;;		_I2C_Master_RepeatedStart
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _I2C_Master_Wait
  4217  0784                     _I2C_Master_Wait:
  4218  0784                     l1568:	
  4219                           ;incstack = 0
  4220                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4221                           
  4222  0784                     l176:	
  4223                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4224                           
  4225  0784  1683               	bsf	3,5	;RP0=1, select bank1
  4226  0785  1303               	bcf	3,6	;RP1=0, select bank1
  4227  0786  1914               	btfsc	20,2	;volatile
  4228  0787  2F89               	goto	u991
  4229  0788  2F8A               	goto	u990
  4230  0789                     u991:
  4231  0789  2F84               	goto	l176
  4232  078A                     u990:
  4233  078A                     l1570:
  4234  078A  0811               	movf	17,w	;volatile
  4235  078B  391F               	andlw	31
  4236  078C  1D03               	btfss	3,2
  4237  078D  2F8F               	goto	u1001
  4238  078E  2F90               	goto	u1000
  4239  078F                     u1001:
  4240  078F  2F84               	goto	l176
  4241  0790                     u1000:
  4242  0790                     l179:
  4243  0790  0008               	return
  4244  0791                     __end_of_I2C_Master_Wait:
  4245                           
  4246                           	psect	text23
  4247  0741                     __ptext23:	
  4248 ;; *************** function _isr *****************
  4249 ;; Defined at:
  4250 ;;		line 55 in file "main_master.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		status,2
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0
  4266 ;;      Temps:          2       0       0       0       0
  4267 ;;      Totals:         2       0       0       0       0
  4268 ;;Total ram usage:        2 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		Interrupt level 1
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _isr
  4279  0741                     _isr:
  4280  0741                     i1l1866:
  4281                           
  4282                           ;main_master.c: 57:         Lcd_Set_Cursor(1,1);
  4283  0741  1C0B               	btfss	11,0	;volatile
  4284  0742  2F44               	goto	u130_21
  4285  0743  2F45               	goto	u130_20
  4286  0744                     u130_21:
  4287  0744  2F56               	goto	i1l119
  4288  0745                     u130_20:
  4289  0745                     i1l1868:
  4290                           
  4291                           ;main_master.c: 58:         Lcd_Write_String("CONT: STAT: TEMP:");;main_master.c: 59:   
      +                                sprintf(buffer, "%d ", val);
  4292  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0746  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0747  1806               	btfsc	6,0	;volatile
  4295  0748  2F4A               	goto	u131_21
  4296  0749  2F4B               	goto	u131_20
  4297  074A                     u131_21:
  4298  074A  2F4F               	goto	i1l116
  4299  074B                     u131_20:
  4300  074B                     i1l1870:
  4301                           
  4302                           ;main_master.c: 60:         sprintf(buffer2, "%d ", val2);;main_master.c: 61:         Lc
      +                          d_Set_Cursor(2,2);
  4303  074B  1408               	bsf	8,0	;volatile
  4304                           
  4305                           ;main_master.c: 62:         Lcd_Write_String(buffer);
  4306  074C  01E8               	clrf	_stat
  4307  074D  0AE8               	incf	_stat,f
  4308                           
  4309                           ;main_master.c: 63:         Lcd_Set_Cursor(2,14);
  4310  074E  2F55               	goto	i1l1876
  4311  074F                     i1l116:	
  4312                           ;main_master.c: 64:         Lcd_Write_String(buffer2);
  4313                           
  4314  074F  1C06               	btfss	6,0	;volatile
  4315  0750  2F52               	goto	u132_21
  4316  0751  2F53               	goto	u132_20
  4317  0752                     u132_21:
  4318  0752  2F55               	goto	i1l1876
  4319  0753                     u132_20:
  4320  0753                     i1l1872:
  4321                           
  4322                           ;main_master.c: 65: ;main_master.c: 66:         if (val1==1){
  4323  0753  1008               	bcf	8,0	;volatile
  4324  0754                     i1l1874:
  4325                           
  4326                           ;main_master.c: 67:             Lcd_Set_Cursor(2,8);
  4327  0754  01E8               	clrf	_stat
  4328  0755                     i1l1876:
  4329                           
  4330                           ;main_master.c: 69:         }
  4331  0755  100B               	bcf	11,0	;volatile
  4332  0756                     i1l119:
  4333  0756  0871               	movf	??_isr+1,w
  4334  0757  008A               	movwf	10
  4335  0758  0E70               	swapf	??_isr,w
  4336  0759  0083               	movwf	3
  4337  075A  0EFE               	swapf	btemp,f
  4338  075B  0E7E               	swapf	btemp,w
  4339  075C  0009               	retfie
  4340  075D                     __end_of_isr:
  4341  007E                     btemp	set	126	;btemp
  4342  007E                     wtemp0	set	126
  4343                           
  4344                           	psect	intentry
  4345  0004                     __pintentry:	
  4346                           ;incstack = 0
  4347                           ; Regs used in _isr: [status,2]
  4348                           
  4349  0004                     interrupt_function:
  4350  007E                     saved_w	set	btemp
  4351  0004  00FE               	movwf	btemp
  4352  0005  0E03               	swapf	3,w
  4353  0006  00F0               	movwf	??_isr
  4354  0007  080A               	movf	10,w
  4355  0008  00F1               	movwf	??_isr+1
  4356  0009  120A  118A  2F41   	ljmp	_isr
  4357                           
  4358                           	psect	config
  4359                           
  4360                           ;Config register CONFIG1 @ 0x2007
  4361                           ;	Oscillator Selection bits
  4362                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4363                           ;	Watchdog Timer Enable bit
  4364                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4365                           ;	Power-up Timer Enable bit
  4366                           ;	PWRTE = OFF, PWRT disabled
  4367                           ;	RE3/MCLR pin function select bit
  4368                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4369                           ;	Code Protection bit
  4370                           ;	CP = OFF, Program memory code protection is disabled
  4371                           ;	Data Code Protection bit
  4372                           ;	CPD = OFF, Data memory code protection is disabled
  4373                           ;	Brown Out Reset Selection bits
  4374                           ;	BOREN = OFF, BOR disabled
  4375                           ;	Internal External Switchover bit
  4376                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4377                           ;	Fail-Safe Clock Monitor Enabled bit
  4378                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4379                           ;	Low Voltage Programming Enable bit
  4380                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4381                           ;	In-Circuit Debugger Mode bit
  4382                           ;	DEBUG = 0x1, unprogrammed default
  4383  2007                     	org	8199
  4384  2007  20D4               	dw	8404
  4385                           
  4386                           ;Config register CONFIG2 @ 0x2008
  4387                           ;	Brown-out Reset Selection bit
  4388                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4389                           ;	Flash Program Memory Self Write Enable bits
  4390                           ;	WRT = OFF, Write protection off
  4391  2008                     	org	8200
  4392  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[4]), STR_4(CODE[3]), main@buffer2(BANK0[20]), main@buffer(BANK0[20]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Text->_division
    _division->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Text->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    6166
                                             19 BANK0     46    46      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _Text
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1674
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Text                                                 2     2      0    1467
                                              7 BANK0      2     2      0
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     758
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     760
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Text
     _division
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      58      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 15:24:58 2021

                        pc 0002                         _R1 006B                         _R2 006A  
             ___awdiv@sign 0021                         fsr 0004                        l220 0738  
                      l132 0582                        l221 0739                        l222 073F  
                      l230 0783                        l135 02EB                        l224 0740  
                      l216 0728                        l217 072B                        l218 0731  
                      l242 0681                        l138 0356                        l219 0732  
                      l227 0776                        l236 0535                        l404 0427  
                      l173 06B9                        l182 07AC                        l191 079A  
                      l239 0484                        l176 0784                        l248 05C8  
                      l521 03BF                        l194 0716                        l179 0790  
                      l195 0719                        l196 071E                        l188 07A3  
                      l364 0236                        l534 04DD                        l640 060C  
                      l650 0648                        _GIE 005F                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u700 0736                        u701 0735  
                      u710 073D                        u711 073C                        u900 0495  
                      u901 0494                        u910 04A0                        u911 049F  
                      u680 0724                        u681 0723                        u690 072F  
                      u930 04B2                        u691 072E                        u931 04B1  
                      u940 04BC                        u941 04BB                        u925 04A4  
                      u960 04CF                        u961 04CE                        u945 04B8  
                      u970 04D4                        u890 048A                        u971 04D3  
                      u955 04C3                        u891 0489                        u990 078A  
                      u991 0789                        _dec 0062                        _cen 0063  
                      _isr 0741                        fsr0 0004                        _uni 0061  
                      indf 0000               ___awmod@sign 0078                main@buffer2 004A  
                     l2000 0363                       l2010 0374                       l2002 0365  
                     l2020 038C                       l2012 037A                       l2004 0369  
                     l2100 0558                       l2022 039D                       l2014 037D  
                     l2030 03B1                       l2006 036E                       l2110 0563  
                     l2102 055C                       l2032 03B6                       l2024 03A3  
                     l2016 0384                       l2008 0372                       l2040 0686  
                     l2120 056C                       l2112 0566                       l2104 055E  
                     l2034 03BB                       l2026 03A4                       l2018 0388  
                     l2050 02ED                       l2210 0259                       l2202 0237  
                     l2042 0689                       l2130 0573                       l2122 056D  
                     l2114 0567                       l2106 0561                       l2132 0583  
                     l2028 03AB                       l2052 0347                       l2220 02AB  
                     l2212 0264                       l2204 0242                       l2044 06B6  
                     l2124 0570                       l2116 056A                       l2108 0562  
                     l2060 0615                       l2140 0150                       l2134 0588  
                     l1510 0485                       l2054 034C                       l2230 02D1  
                     l2222 02B3                       l2214 0268                       l2206 024A  
                     l2046 06B7                       l2038 0682                       l2126 0571  
                     l2118 056B                       l2070 0631                       l2062 0618  
                     l2142 0155                       l1440 073D                       l1432 0720  
                     l1600 067E                       l2136 05A4                       l1520 0495  
                     l1512 0486                       l2056 0351                       l2232 02DC  
                     l2224 02BE                       l2216 0273                       l2208 0255  
                     l2048 06B8                       l2128 0572                       l2080 0536  
                     l2072 0637                       l2064 061F                       l2160 0195  
                     l2320 017A                       l2152 0168                       l2144 015B  
                     l2240 0032                       l1434 0724                       l2138 05AC  
                     l1530 04AE                       l1522 049A                       l1514 048A  
                     l2234 02E0                       l2226 02C2                       l2218 027E  
                     l2090 0550                       l2082 053C                       l1610 05DB  
                     l1602 05C9                       l2074 063E                       l2066 0623  
                     l2058 060D                       l2170 01A0                       l2162 0199  
                     l2154 0185                       l2146 0162                       l2250 0047  
                     l2242 0036                       l1436 072F                       l1532 04B2  
                     l1524 04A0                       l1540 04CF                       l1516 048F  
                     l2228 02CD                       l2092 0552                       l2084 0540  
                     l1620 05FB                       l1612 05DF                       l1604 05CB  
                     l2068 0627                       l2076 0644                       l2180 01D3  
                     l2164 019E                       l2156 018D                       l2148 0167  
                     l2260 008A                       l2252 004F                       l2244 003A  
                     l2236 0022                       l1438 0736                       l1710 044C  
                     l1702 0428                       l1542 04D4                       l1534 04BC  
                     l1526 04A3                       l1518 0491                       l2094 0553  
                     l2086 0543                       l1622 0602                       l1614 05E3  
                     l1606 05D1                       l2190 0217                       l2182 01D7  
                     l2174 01BC                       l2158 0191                       l2270 00B9  
                     l2262 0093                       l2254 0058                       l2246 003E  
                     l2238 002C                       l1712 0777                       l1704 042E  
                     l1720 04FC                       l1544 04D9                       l1536 04C2  
                     l1528 04AA                       l2096 0554                       l2088 054D  
                     l1616 05F4                       l1608 05D4                       l1624 0608  
                     l2184 01DC                       l2176 01C6                       l2192 0220  
                     l2280 00E9                       l2272 00C3                       l2264 009F  
                     l2256 006B                       l2248 0042                       l1570 078A  
                     l1810 0796                       l1706 0437                       l1730 0527  
                     l1722 0502                       l1714 04E1                       l1538 04C9  
                     l2098 0555                       l1618 05FA                       l2186 020C  
                     l2178 01CC                       l2194 0232                       l2290 0119  
                     l2282 00F2                       l2274 00CD                       l2266 00A8  
                     l2258 007E                       l1820 070C                       l1812 06F1  
                     l1804 07A4                       l1580 0773                       l1572 075E  
                     l1708 0446                       l1732 052D                       l1716 04E6  
                     l1724 050B                       l2188 0213                       l2292 0122  
                     l2284 0100                       l2276 00D6                       l2268 00AF  
                     l1822 0712                       l1814 06F6                       l1806 07A9  
                     l1830 07A0                       l1574 0761                       l1726 0511  
                     l1718 04F7                       l1590 0668                       l1582 064A  
                     l2294 0130                       l2286 0105                       l2278 00E4  
                     l1568 0784                       l1824 071A                       l1816 06FE  
                     l1808 0791                       l1576 0767                       l1728 0522  
                     l1592 066D                       l1584 0654                       l2296 0135  
                     l2288 0114                       l1818 0707                       l1578 076A  
                     l1594 0670                       l1586 0657                       l2298 0144  
                     l1828 079B                       l1596 0676                       l1588 0665  
                     l1598 0679                       l1970 03C0                       l1980 03EF  
                     l1972 03D2                       l1982 0401                       l1974 03D5  
                     l1990 041F                       l1984 040F                       l1976 03E2  
                     l1994 0357                       l1986 0410                       l1978 03E6  
                     l1996 035A                       l1988 0419                       l1998 035E  
                     ?_isr 0070                       STR_1 06D4                       STR_2 06E6  
                     STR_3 06E6                       STR_4 06EE                       STR_5 06EA  
                     u1000 0790                       u1001 078F                       u1020 05D1  
                     u1021 05D0                       u1015 065A                       u1040 05E3  
                     u1041 05E2                       u1035 05D5                       u1060 05F4  
                     u1061 05F3                       u1150 04E6                       u1151 04E5  
                     u1055 05E4                       u1400 041F                       u1080 0608  
                     u1401 041E                       u1081 0607                       u1065 05F0  
                     u1170 0511                       u1410 035E                       u1171 0510  
                     u1411 035D                       u1075 05FC                       u1500 03B6  
                     u1420 0369                       u1340 03D2                       u1165 04EE  
                     u1501 03B5                       u1421 0368                       u1341 03D1  
                     u1430 037A                       u1510 0699                       u1431 0379  
                     u1600 05C8                       u1360 03E6                       u1520 0615  
                     u1185 0519                       u1601 05C7                       u1361 03E5  
                     u1521 0614                       u1290 0712                       u1450 038C  
                     u1610 015B                       u1291 0711                       u1451 038B  
                     u1355 03D7                       u1515 0694                       u1611 015A  
                     u1380 0401                       u1540 0627                       u1620 0195  
                     u1445 037E                       u1381 0400                       u1541 0626  
                     u1621 0194                       u1470 039D                       u1550 0631  
                     u1630 01BB                       u1471 039C                       u1375 03E8  
                     u1551 0630                       u1535 0619                       u1631 01BA  
                     u1640 01C6                       u1465 038D                       u1385 03FD  
                     u1641 01C5                       u1490 03B1                       u1570 0644  
                     u1650 01CC                       u1491 03B0                       u1475 0399  
                     u1395 0411                       u1571 0643                       u1555 062D  
                     u1651 01CB                       u1635 01B7                       u1707 010D  
                     u1580 0592                       u1660 0220                       u1485 03A5  
                     u1565 0638                       u1661 021F                       u1717 013D  
                     u1590 05B6                       u1670 0232                       u1807 02B9  
                     u1727 023D                       u1671 0231                       u1680 00AF  
                     u1817 02C8                       u1737 0250                       u1681 00AE  
                     u1827 02D7                       u1747 025F                       u1837 02E6  
                     u1757 026E                       u1847 066A                       u1767 0279  
                     u1857 067B                       u1777 028C                       u1697 00DE  
                     u1867 0432                       u1787 029B                       _PEIE 005E  
                     u1877 0441                       u1797 02A6                       u1887 0450  
                     _RBIF 0058                       u1897 076E                       _TXIF 0064  
                     _WPUB 0095                       _Text 0237          ?_Lcd_Write_String 0077  
                     _cont 0067                       _main 0022                       _temp 0069  
                     _stat 0068                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 0777                      ??_isr 0070  
         ?_I2C_Master_Init 0026           ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_Text 0070                      ?_main 0070  
          __end_of___awdiv 03C0            __end_of___awmod 04DE                      _ANSEL 0188  
          __end_of___lldiv 0428            ___awdiv@divisor 0072            __end_of___lwdiv 060D  
                    i1l116 074F                      i1l119 0756            __end_of___lwmod 0649  
          ___awdiv@counter 0020                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019            __end_of_dpowers 06D4                      _valor 0066  
                    _setup 0536                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0237           __end_of_Lcd_Init 0485  
         __end_of_Lcd_Port 0741            __initialization 000F               __end_of_Text 02EC  
             __end_of_main 014D                     ??_Text 0027                     ??_main 0033  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074           ___awdiv@dividend 0074  
                   ?_setup 0070                     _ANSELH 0189                     u130_20 0745  
                   u130_21 0744                     i1l1870 074B                     i1l1872 0753  
                   u131_20 074B                     u131_21 074A                     i1l1874 0754  
                   i1l1866 0741                     i1l1876 0755                     i1l1868 0745  
                   u132_20 0753                     u132_21 0752                  ??_Lcd_Cmd 0073  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0039                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of_division 0357                  ??___awdiv 0076  
                ??___awmod 0076                  ??___lldiv 0020                  ??___lwdiv 0076  
                ??___lwmod 0024           ___awdiv@quotient 0022            ___awmod@divisor 0072  
          ___awmod@counter 0077                     saved_w 007E                  ??_sprintf 0029  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021    __end_of__initialization 001E          __end_of_Lcd_Clear 0784  
           __pcstackCOMMON 0070              __end_of_setup 0583              division@valor 0079  
           _Lcd_Set_Cursor 04DE             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 007A                 __pbssBANK0 0061  
               __pmaintext 0022                 __pintentry 0004  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 0536                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 06BA  
                ?_division 0070             _Lcd_Write_Char 0649                    _Lcd_Cmd 075D  
                  ___awdiv 0357                    ___awmod 0485                    ___lldiv 03C0  
                  ___lwdiv 05C9                    ___lwmod 060D                    _decenas 007B  
          ?_Lcd_Set_Cursor 0076                    __ptext1 014D                    __ptext2 060D  
                  __ptext3 05C9                    __ptext4 0536                    __ptext5 0682  
                  __ptext6 03C0                    __ptext7 0237                    __ptext8 02EC  
                  __ptext9 0485                    _dpowers 06CA               __size_of_isr 001C  
         ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
                  _residuo 0064   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 014D                    main@val 0060     __end_of_Lcd_Write_Char 0682  
     end_of_initialization 001E                 ??_division 0024  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0025  
                _RCSTAbits 0018           I2C_Master_Init@c 0026           I2C_Master_Read@a 0072  
                Lcd_Port@a 0072                  _PORTBbits 0006                  _PORTDbits 0008  
                _TRISBbits 0086                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0023                 main@buffer 0036  
                _TXSTAbits 0098                  _Lcd_Clear 0777           _Lcd_Write_String 0583  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 075D  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022          ??_I2C_Master_Init 002A  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070                sprintf@flag 002D          __size_of_division 006B  
              sprintf@prec 002E           _I2C_Master_Start 07A4           _I2C_Master_Write 0791  
         ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072  
                 ?___awmod 0072                   ?___lldiv 0072                   ?___lwdiv 0072  
                 ?___lwmod 0020                  __pstrings 06BA           ___lwdiv@quotient 0077  
                 ?_sprintf 0026             __size_of_setup 004D          interrupt_function 0004  
                 _IOCBbits 0096                   _PIE1bits 008C                   Lcd_Cmd@a 0075  
                 _PIR1bits 000C                ??_Lcd_Clear 0076                __stringbase 06C9  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 0428                   _Lcd_Port 071F  
      I2C_Master_Read@temp 0076   __end_of_Lcd_Write_String 05C9           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0069           __size_of___awmod 0059           __size_of___lldiv 0068  
         __size_of___lwdiv 0044           __size_of___lwmod 003C         __end_of__stringtab 06CA  
               sprintf@val 002F            _I2C_Master_Init 0682            _I2C_Master_Read 06F1  
          _I2C_Master_Wait 0784            _I2C_Master_Stop 079B            ___lwdiv@divisor 0072  
                 _centenas 0065            ___lwdiv@counter 0079                   __ptext10 0357  
                 __ptext11 0583                   __ptext20 07A4                   __ptext12 0649  
                 __ptext21 06F1                   __ptext13 04DE                   __ptext22 0784  
                 __ptext14 0428                   __ptext23 0741                   __ptext15 0777  
                 __ptext16 075D                   __ptext17 071F                   __ptext18 0791  
                 __ptext19 079B                   _division 02EC           __size_of_sprintf 00EA  
            __size_of_Text 00B5              __size_of_main 012B                   _unidades 007A  
                 main@val1 005F                   main@val2 005E   __end_of_I2C_Master_Start 07AD  
 __end_of_I2C_Master_Write 079B                 _INTCONbits 000B         Lcd_Write_Char@temp 0074  
                 intlevel1 0000                  sprintf@ap 002C                  sprintf@sp 0031  
         ___lwmod@dividend 0022           ___lldiv@dividend 0076                  stringcode 06C4  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 06BA    __end_of_I2C_Master_Read 071F  
  __end_of_I2C_Master_Wait 0791    __end_of_I2C_Master_Stop 07A4         Lcd_Set_Cursor@temp 0023  
                 sprintf@c 0032                   sprintf@f 0026           ___lldiv@quotient 0021  
        I2C_Master_Write@d 0072            ___lwmod@divisor 0020            ___lwmod@counter 0025  
                 stringdir 06C4                   stringtab 06BA                _SSPCON2bits 0091  
