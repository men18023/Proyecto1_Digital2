

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 31 22:25:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	functab,global,class=ENTRY,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390                           
   391                           	psect	strings
   392  0400                     __pstrings:
   393  0400                     stringtab:
   394  0400                     __stringtab:
   395                           
   396                           ;	String table - string pointers are 1 byte each
   397  0400  1BFF               	btfsc	btemp+1,7
   398  0401  2C0A               	ljmp	stringcode
   399  0402  1383               	bcf	3,7
   400  0403  187F               	btfsc	btemp+1,0
   401  0404  1783               	bsf	3,7
   402  0405  0800               	movf	0,w
   403  0406  0A84               	incf	4,f
   404  0407  1903               	skipnz
   405  0408  0AFF               	incf	btemp+1,f
   406  0409  0008               	return
   407  040A                     stringcode:
   408  040A                     stringdir:
   409  040A  3004               	movlw	high stringdir
   410  040B  008A               	movwf	10
   411  040C  0804               	movf	4,w
   412  040D  0A84               	incf	4,f
   413  040E  0782               	addwf	2,f
   414  040F                     __stringbase:
   415  040F  3400               	retlw	0
   416  0410                     __end_of__stringtab:
   417  0410                     _dpowers:
   418  0410  3401               	retlw	1
   419  0411  3400               	retlw	0
   420  0412  340A               	retlw	10
   421  0413  3400               	retlw	0
   422  0414  3464               	retlw	100
   423  0415  3400               	retlw	0
   424  0416  34E8               	retlw	232
   425  0417  3403               	retlw	3
   426  0418  3410               	retlw	16
   427  0419  3427               	retlw	39
   428  041A                     __end_of_dpowers:
   429  0013                     _SSPBUF	set	19
   430  0014                     _SSPCON	set	20
   431  0019                     _TXREG	set	25
   432  000C                     _PIR1bits	set	12
   433  0018                     _RCSTAbits	set	24
   434  0009                     _PORTE	set	9
   435  0008                     _PORTD	set	8
   436  0007                     _PORTC	set	7
   437  0006                     _PORTB	set	6
   438  0005                     _PORTA	set	5
   439  000B                     _INTCONbits	set	11
   440  0008                     _PORTDbits	set	8
   441  0006                     _PORTBbits	set	6
   442  0043                     _RD3	set	67
   443  0047                     _RD7	set	71
   444  0046                     _RD6	set	70
   445  0045                     _RD5	set	69
   446  0044                     _RD4	set	68
   447  0063                     _SSPIF	set	99
   448  005E                     _PEIE	set	94
   449  005F                     _GIE	set	95
   450  0064                     _TXIF	set	100
   451  0058                     _RBIF	set	88
   452  0091                     _SSPCON2bits	set	145
   453  0094                     _SSPSTAT	set	148
   454  0093                     _SSPADD	set	147
   455  0091                     _SSPCON2	set	145
   456  008C                     _PIE1bits	set	140
   457  009A                     _SPBRGH	set	154
   458  0099                     _SPBRG	set	153
   459  0098                     _TXSTAbits	set	152
   460  0096                     _IOCBbits	set	150
   461  0095                     _WPUB	set	149
   462  0081                     _OPTION_REGbits	set	129
   463  0085                     _TRISA	set	133
   464  0088                     _TRISD	set	136
   465  0087                     _TRISCbits	set	135
   466  0086                     _TRISBbits	set	134
   467  008F                     _OSCCONbits	set	143
   468  0463                     _SSPIE	set	1123
   469  043C                     _TRISC4	set	1084
   470  043B                     _TRISC3	set	1083
   471  0187                     _BAUDCTLbits	set	391
   472  0189                     _ANSELH	set	393
   473  0188                     _ANSEL	set	392
   474  041A                     STR_10:
   475  041A  3456               	retlw	86	;'V'
   476  041B  3461               	retlw	97	;'a'
   477  041C  346C               	retlw	108	;'l'
   478  041D  346F               	retlw	111	;'o'
   479  041E  3472               	retlw	114	;'r'
   480  041F  3420               	retlw	32	;' '
   481  0420  3464               	retlw	100	;'d'
   482  0421  3465               	retlw	101	;'e'
   483  0422  346C               	retlw	108	;'l'
   484  0423  3420               	retlw	32	;' '
   485  0424  3474               	retlw	116	;'t'
   486  0425  3465               	retlw	101	;'e'
   487  0426  346D               	retlw	109	;'m'
   488  0427  3470               	retlw	112	;'p'
   489  0428  3465               	retlw	101	;'e'
   490  0429  3472               	retlw	114	;'r'
   491  042A  3461               	retlw	97	;'a'
   492  042B  3474               	retlw	116	;'t'
   493  042C  3475               	retlw	117	;'u'
   494  042D  3472               	retlw	114	;'r'
   495  042E  3461               	retlw	97	;'a'
   496  042F  343A               	retlw	58	;':'
   497  0430  340D               	retlw	13
   498  0431  3400               	retlw	0
   499  0432                     STR_6:
   500  0432  3456               	retlw	86	;'V'
   501  0433  3461               	retlw	97	;'a'
   502  0434  346C               	retlw	108	;'l'
   503  0435  346F               	retlw	111	;'o'
   504  0436  3472               	retlw	114	;'r'
   505  0437  3420               	retlw	32	;' '
   506  0438  3464               	retlw	100	;'d'
   507  0439  3465               	retlw	101	;'e'
   508  043A  346C               	retlw	108	;'l'
   509  043B  3420               	retlw	32	;' '
   510  043C  3463               	retlw	99	;'c'
   511  043D  346F               	retlw	111	;'o'
   512  043E  346E               	retlw	110	;'n'
   513  043F  3474               	retlw	116	;'t'
   514  0440  3461               	retlw	97	;'a'
   515  0441  3464               	retlw	100	;'d'
   516  0442  346F               	retlw	111	;'o'
   517  0443  3472               	retlw	114	;'r'
   518  0444  343A               	retlw	58	;':'
   519  0445  340D               	retlw	13
   520  0446  3400               	retlw	0
   521  0447                     STR_1:
   522  0447  3443               	retlw	67	;'C'
   523  0448  344F               	retlw	79	;'O'
   524  0449  344E               	retlw	78	;'N'
   525  044A  3454               	retlw	84	;'T'
   526  044B  343A               	retlw	58	;':'
   527  044C  3420               	retlw	32	;' '
   528  044D  3453               	retlw	83	;'S'
   529  044E  3454               	retlw	84	;'T'
   530  044F  3441               	retlw	65	;'A'
   531  0450  3454               	retlw	84	;'T'
   532  0451  343A               	retlw	58	;':'
   533  0452  3420               	retlw	32	;' '
   534  0453  3454               	retlw	84	;'T'
   535  0454  3445               	retlw	69	;'E'
   536  0455  344D               	retlw	77	;'M'
   537  0456  3450               	retlw	80	;'P'
   538  0457  343A               	retlw	58	;':'
   539  0458  3400               	retlw	0
   540  0459                     STR_8:
   541  0459  3456               	retlw	86	;'V'
   542  045A  3461               	retlw	97	;'a'
   543  045B  346C               	retlw	108	;'l'
   544  045C  346F               	retlw	111	;'o'
   545  045D  3472               	retlw	114	;'r'
   546  045E  3420               	retlw	32	;' '
   547  045F  3464               	retlw	100	;'d'
   548  0460  3465               	retlw	101	;'e'
   549  0461  346C               	retlw	108	;'l'
   550  0462  3420               	retlw	32	;' '
   551  0463  3461               	retlw	97	;'a'
   552  0464  3467               	retlw	103	;'g'
   553  0465  3475               	retlw	117	;'u'
   554  0466  3461               	retlw	97	;'a'
   555  0467  343A               	retlw	58	;':'
   556  0468  340D               	retlw	13
   557  0469  3400               	retlw	0
   558  046A                     STR_2:
   559  046A  3425               	retlw	37	;'%'
   560  046B  3464               	retlw	100	;'d'
   561  046C  3420               	retlw	32	;' '
   562  046D  3400               	retlw	0
   563  046E                     STR_5:
   564  046E  344F               	retlw	79	;'O'
   565  046F  3446               	retlw	70	;'F'
   566  0470  3446               	retlw	70	;'F'
   567  0471  3400               	retlw	0
   568  0472                     STR_4:
   569  0472  344F               	retlw	79	;'O'
   570  0473  344E               	retlw	78	;'N'
   571  0474  3400               	retlw	0
   572  0430                     
   573                           	psect	cinit
   574  000F                     start_initialization:	
   575                           ; #config settings
   576                           
   577  000F                     __initialization:
   578                           
   579                           ; Clear objects allocated to COMMON
   580  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   581  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   582                           
   583                           ; Clear objects allocated to BANK0
   584  0011  1283               	bcf	3,5	;RP0=0, select bank0
   585  0012  1303               	bcf	3,6	;RP1=0, select bank0
   586  0013  01BD               	clrf	__pbssBANK0& (0+127)
   587  0014  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   588  0015  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   589  0016  01C0               	clrf	(__pbssBANK0+3)& (0+127)
   590  0017  01C1               	clrf	(__pbssBANK0+4)& (0+127)
   591  0018  01C2               	clrf	(__pbssBANK0+5)& (0+127)
   592  0019  01C3               	clrf	(__pbssBANK0+6)& (0+127)
   593  001A  01C4               	clrf	(__pbssBANK0+7)& (0+127)
   594  001B  01C5               	clrf	(__pbssBANK0+8)& (0+127)
   595  001C  01C6               	clrf	(__pbssBANK0+9)& (0+127)
   596                           
   597                           ; Clear objects allocated to BANK1
   598  001D  1683               	bsf	3,5	;RP0=1, select bank1
   599  001E  1303               	bcf	3,6	;RP1=0, select bank1
   600  001F  01CB               	clrf	__pbssBANK1& (0+127)
   601  0020                     end_of_initialization:	
   602                           ;End of C runtime variable initialization code
   603                           
   604  0020                     __end_of__initialization:
   605  0020  0183               	clrf	3
   606  0021  120A  118A  282D   	ljmp	_main	;jump to C main() function
   607                           
   608                           	psect	bssCOMMON
   609  007A                     __pbssCOMMON:
   610  007A                     _residuo:
   611  007A                     	ds	1
   612  007B                     _valor:
   613  007B                     	ds	1
   614                           
   615                           	psect	bssBANK0
   616  003D                     __pbssBANK0:
   617  003D                     _dec:
   618  003D                     	ds	1
   619  003E                     _cen:
   620  003E                     	ds	1
   621  003F                     _unidades:
   622  003F                     	ds	1
   623  0040                     _decenas:
   624  0040                     	ds	1
   625  0041                     _centenas:
   626  0041                     	ds	1
   627  0042                     _cont:
   628  0042                     	ds	1
   629  0043                     _stat:
   630  0043                     	ds	1
   631  0044                     _temp:
   632  0044                     	ds	1
   633  0045                     _R2:
   634  0045                     	ds	1
   635  0046                     _R1:
   636  0046                     	ds	1
   637                           
   638                           	psect	bssBANK1
   639  00CB                     __pbssBANK1:
   640  00CB                     _uni:
   641  00CB                     	ds	1
   642                           
   643                           	psect	cstackBANK1
   644  00A0                     __pcstackBANK1:
   645  00A0                     main@buffer:
   646                           
   647                           ; 20 bytes @ 0x0
   648  00A0                     	ds	20
   649  00B4                     main@buffer2:
   650                           
   651                           ; 20 bytes @ 0x14
   652  00B4                     	ds	20
   653  00C8                     main@val2:
   654                           
   655                           ; 1 bytes @ 0x28
   656  00C8                     	ds	1
   657  00C9                     main@val1:
   658                           
   659                           ; 1 bytes @ 0x29
   660  00C9                     	ds	1
   661  00CA                     main@val:
   662                           
   663                           ; 1 bytes @ 0x2A
   664  00CA                     	ds	1
   665                           
   666                           	psect	cstackCOMMON
   667  0070                     __pcstackCOMMON:
   668  0070                     ?_setup:
   669  0070                     ?_Lcd_Init:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Clear:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_I2C_Master_Start:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_I2C_Master_Stop:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Text:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_division:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_isr:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ??_isr:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_main:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_I2C_Master_Wait:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_Lcd_Port:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Lcd_Cmd:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_Lcd_Write_Char:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_printf:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 2 bytes @ 0x0
   713  0070                     	ds	2
   714  0072                     ??_I2C_Master_Start:
   715  0072                     ?_I2C_Master_Write:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ??_I2C_Master_Stop:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ?_putch:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_I2C_Master_Wait:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_Lcd_Port:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ?_I2C_Master_Read:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ?___awdiv:	
   734                           ; 2 bytes @ 0x2
   735                           
   736  0072                     ?___awmod:	
   737                           ; 2 bytes @ 0x2
   738                           
   739  0072                     ?___lwdiv:	
   740                           ; 2 bytes @ 0x2
   741                           
   742  0072                     ?___lldiv:	
   743                           ; 2 bytes @ 0x2
   744                           
   745  0072                     putch@data:	
   746                           ; 4 bytes @ 0x2
   747                           
   748  0072                     Lcd_Port@a:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     I2C_Master_Write@d:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     I2C_Master_Read@a:	
   755                           ; 2 bytes @ 0x2
   756                           
   757  0072                     ___awdiv@divisor:	
   758                           ; 2 bytes @ 0x2
   759                           
   760  0072                     ___awmod@divisor:	
   761                           ; 2 bytes @ 0x2
   762                           
   763  0072                     ___lwdiv@divisor:	
   764                           ; 2 bytes @ 0x2
   765                           
   766  0072                     ___lldiv@divisor:	
   767                           ; 2 bytes @ 0x2
   768                           
   769                           
   770                           ; 4 bytes @ 0x2
   771  0072                     	ds	1
   772  0073                     ??_putch:
   773  0073                     ??_Lcd_Cmd:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     ??_Lcd_Write_Char:	
   777                           ; 1 bytes @ 0x3
   778                           
   779                           
   780                           ; 1 bytes @ 0x3
   781  0073                     	ds	1
   782  0074                     ??_I2C_Master_Write:
   783  0074                     ??_I2C_Master_Read:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0074                     Lcd_Write_Char@temp:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0074                     ___awdiv@dividend:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ___awmod@dividend:	
   793                           ; 2 bytes @ 0x4
   794                           
   795  0074                     ___lwdiv@dividend:	
   796                           ; 2 bytes @ 0x4
   797                           
   798                           
   799                           ; 2 bytes @ 0x4
   800  0074                     	ds	1
   801  0075                     Lcd_Cmd@a:
   802  0075                     Lcd_Write_Char@y:	
   803                           ; 1 bytes @ 0x5
   804                           
   805                           
   806                           ; 1 bytes @ 0x5
   807  0075                     	ds	1
   808  0076                     ??_Lcd_Init:
   809  0076                     ??_Lcd_Clear:	
   810                           ; 1 bytes @ 0x6
   811                           
   812  0076                     ?_Lcd_Set_Cursor:	
   813                           ; 1 bytes @ 0x6
   814                           
   815  0076                     ??___awdiv:	
   816                           ; 1 bytes @ 0x6
   817                           
   818  0076                     ??___awmod:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0076                     ??___lwdiv:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0076                     Lcd_Set_Cursor@b:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0076                     Lcd_Write_Char@a:	
   828                           ; 1 bytes @ 0x6
   829                           
   830  0076                     I2C_Master_Read@temp:	
   831                           ; 1 bytes @ 0x6
   832                           
   833  0076                     ___lldiv@dividend:	
   834                           ; 2 bytes @ 0x6
   835                           
   836                           
   837                           ; 4 bytes @ 0x6
   838  0076                     	ds	1
   839  0077                     ??_Lcd_Set_Cursor:
   840  0077                     ?_Lcd_Write_String:	
   841                           ; 1 bytes @ 0x7
   842                           
   843  0077                     ___awmod@counter:	
   844                           ; 1 bytes @ 0x7
   845                           
   846  0077                     ___lwdiv@counter:	
   847                           ; 1 bytes @ 0x7
   848                           
   849  0077                     Lcd_Write_String@a:	
   850                           ; 1 bytes @ 0x7
   851                           
   852                           
   853                           ; 2 bytes @ 0x7
   854  0077                     	ds	1
   855  0078                     ___awmod@sign:
   856  0078                     ___lwdiv@quotient:	
   857                           ; 1 bytes @ 0x8
   858                           
   859                           
   860                           ; 2 bytes @ 0x8
   861  0078                     	ds	1
   862  0079                     division@valor:
   863                           
   864                           ; 1 bytes @ 0x9
   865  0079                     	ds	1
   866  007A                     ??_setup:
   867                           
   868                           	psect	cstackBANK0
   869  0020                     __pcstackBANK0:	
   870                           ; 1 bytes @ 0xA
   871                           
   872  0020                     ??_Lcd_Write_String:
   873  0020                     ??___lldiv:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     ?___lwmod:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0020                     Lcd_Set_Cursor@a:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0020                     ___awdiv@counter:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0020                     ___lwmod@divisor:	
   886                           ; 1 bytes @ 0x0
   887                           
   888                           
   889                           ; 2 bytes @ 0x0
   890  0020                     	ds	1
   891  0021                     Lcd_Set_Cursor@z:
   892  0021                     ___awdiv@sign:	
   893                           ; 1 bytes @ 0x1
   894                           
   895  0021                     ___lldiv@quotient:	
   896                           ; 1 bytes @ 0x1
   897                           
   898                           
   899                           ; 4 bytes @ 0x1
   900  0021                     	ds	1
   901  0022                     Lcd_Set_Cursor@y:
   902  0022                     ___awdiv@quotient:	
   903                           ; 1 bytes @ 0x2
   904                           
   905  0022                     ___lwmod@dividend:	
   906                           ; 2 bytes @ 0x2
   907                           
   908                           
   909                           ; 2 bytes @ 0x2
   910  0022                     	ds	1
   911  0023                     Lcd_Set_Cursor@temp:
   912  0023                     Lcd_Write_String@i:	
   913                           ; 1 bytes @ 0x3
   914                           
   915                           
   916                           ; 2 bytes @ 0x3
   917  0023                     	ds	1
   918  0024                     ??_division:
   919  0024                     ??___lwmod:	
   920                           ; 1 bytes @ 0x4
   921                           
   922                           
   923                           ; 1 bytes @ 0x4
   924  0024                     	ds	1
   925  0025                     ___lldiv@counter:
   926  0025                     ___lwmod@counter:	
   927                           ; 1 bytes @ 0x5
   928                           
   929                           
   930                           ; 1 bytes @ 0x5
   931  0025                     	ds	1
   932  0026                     ?_I2C_Master_Init:
   933  0026                     ?__doprnt:	
   934                           ; 1 bytes @ 0x6
   935                           
   936  0026                     __doprnt@f:	
   937                           ; 2 bytes @ 0x6
   938                           
   939  0026                     I2C_Master_Init@c:	
   940                           ; 1 bytes @ 0x6
   941                           
   942                           
   943                           ; 4 bytes @ 0x6
   944  0026                     	ds	1
   945  0027                     __doprnt@ap:
   946                           
   947                           ; 1 bytes @ 0x7
   948  0027                     	ds	1
   949  0028                     ??__doprnt:
   950                           
   951                           ; 1 bytes @ 0x8
   952  0028                     	ds	2
   953  002A                     ??_I2C_Master_Init:
   954                           
   955                           ; 1 bytes @ 0xA
   956  002A                     	ds	1
   957  002B                     __doprnt@flag:
   958                           
   959                           ; 1 bytes @ 0xB
   960  002B                     	ds	1
   961  002C                     __doprnt@prec:
   962                           
   963                           ; 1 bytes @ 0xC
   964  002C                     	ds	1
   965  002D                     __doprnt@val:
   966                           
   967                           ; 2 bytes @ 0xD
   968  002D                     	ds	2
   969  002F                     __doprnt@c:
   970                           
   971                           ; 1 bytes @ 0xF
   972  002F                     	ds	1
   973  0030                     __doprnt@pb:
   974                           
   975                           ; 1 bytes @ 0x10
   976  0030                     	ds	1
   977  0031                     ??_printf:
   978  0031                     ?_sprintf:	
   979                           ; 1 bytes @ 0x11
   980                           
   981  0031                     sprintf@f:	
   982                           ; 2 bytes @ 0x11
   983                           
   984                           
   985                           ; 1 bytes @ 0x11
   986  0031                     	ds	2
   987  0033                     printf@ap:
   988                           
   989                           ; 1 bytes @ 0x13
   990  0033                     	ds	1
   991  0034                     ??_sprintf:
   992  0034                     printf@f:	
   993                           ; 1 bytes @ 0x14
   994                           
   995                           
   996                           ; 1 bytes @ 0x14
   997  0034                     	ds	1
   998  0035                     printf@pb:
   999                           
  1000                           ; 2 bytes @ 0x15
  1001  0035                     	ds	1
  1002  0036                     sprintf@wh:
  1003                           
  1004                           ; 1 bytes @ 0x16
  1005  0036                     	ds	1
  1006  0037                     ??_Text:
  1007  0037                     sprintf@ap:	
  1008                           ; 1 bytes @ 0x17
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0x17
  1012  0037                     	ds	1
  1013  0038                     sprintf@pb:
  1014                           
  1015                           ; 2 bytes @ 0x18
  1016  0038                     	ds	2
  1017  003A                     ??_main:
  1018                           
  1019                           ; 1 bytes @ 0x1A
  1020  003A                     	ds	3
  1021                           
  1022                           	psect	maintext
  1023  002D                     __pmaintext:	
  1024 ;;
  1025 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1026 ;;
  1027 ;; *************** function _main *****************
  1028 ;; Defined at:
  1029 ;;		line 75 in file "main_master.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  buffer2        20   20[BANK1 ] unsigned char [20]
  1034 ;;  buffer         20    0[BANK1 ] unsigned char [20]
  1035 ;;  buffer1        20    0        unsigned char [20]
  1036 ;;  val             1   42[BANK1 ] unsigned char 
  1037 ;;  val1            1   41[BANK1 ] unsigned char 
  1038 ;;  val2            1   40[BANK1 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : B00/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0      43       0       0
  1050 ;;      Temps:          0       3       0       0       0
  1051 ;;      Totals:         0       3      43       0       0
  1052 ;;Total ram usage:       46 bytes
  1053 ;; Hardware stack levels required when called:    5
  1054 ;; This function calls:
  1055 ;;		_I2C_Master_Read
  1056 ;;		_I2C_Master_Start
  1057 ;;		_I2C_Master_Stop
  1058 ;;		_I2C_Master_Write
  1059 ;;		_Lcd_Clear
  1060 ;;		_Lcd_Init
  1061 ;;		_Lcd_Set_Cursor
  1062 ;;		_Lcd_Write_String
  1063 ;;		_Text
  1064 ;;		_setup
  1065 ;;		_sprintf
  1066 ;; This function is called by:
  1067 ;;		Startup code after reset
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _main
  1073  002D                     _main:
  1074  002D                     l2594:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1077                           
  1078                           
  1079                           ;main_master.c: 77: 
  1080  002D  120A  118A  26BF  120A  118A  	fcall	_setup
  1081                           
  1082                           ;main_master.c: 78: 
  1083  0032  120A  118A  25B1  120A  118A  	fcall	_Lcd_Init
  1084  0037                     l2596:
  1085                           
  1086                           ;main_master.c: 87:         I2C_Master_Start();;main_master.c: 88:         I2C_Master_Wr
      +                          ite(0x61);
  1087  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0039  0845               	movf	_R2,w
  1090  003A  00BA               	movwf	??_main
  1091  003B  083A               	movf	??_main,w
  1092  003C  00C4               	movwf	_temp
  1093  003D                     l2598:
  1094                           
  1095                           ;main_master.c: 89:         R2 = I2C_Master_Read(0);
  1096  003D  0846               	movf	_R1,w
  1097  003E  00BA               	movwf	??_main
  1098  003F  083A               	movf	??_main,w
  1099  0040  00C2               	movwf	_cont
  1100  0041                     l2600:
  1101                           
  1102                           ;main_master.c: 90:         I2C_Master_Stop();
  1103  0041  0842               	movf	_cont,w
  1104  0042  00BA               	movwf	??_main
  1105  0043  083A               	movf	??_main,w
  1106  0044  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0045  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0046  00CA               	movwf	main@val^(0+128)
  1109  0047                     l2602:
  1110                           
  1111                           ;main_master.c: 91:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1112  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0049  0843               	movf	_stat,w
  1115  004A  00BA               	movwf	??_main
  1116  004B  083A               	movf	??_main,w
  1117  004C  1683               	bsf	3,5	;RP0=1, select bank1
  1118  004D  1303               	bcf	3,6	;RP1=0, select bank1
  1119  004E  00C9               	movwf	main@val1^(0+128)
  1120  004F                     l2604:
  1121                           
  1122                           ;main_master.c: 92: 
  1123  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0051  0844               	movf	_temp,w
  1126  0052  00BA               	movwf	??_main
  1127  0053  083A               	movf	??_main,w
  1128  0054  1683               	bsf	3,5	;RP0=1, select bank1
  1129  0055  1303               	bcf	3,6	;RP1=0, select bank1
  1130  0056  00C8               	movwf	main@val2^(0+128)
  1131  0057                     l2606:
  1132                           
  1133                           ;main_master.c: 94: 
  1134  0057  120A  158A  2749  120A  118A  	fcall	_Lcd_Clear
  1135  005C                     l2608:
  1136                           
  1137                           ;main_master.c: 95:     }
  1138  005C  01F6               	clrf	Lcd_Set_Cursor@b
  1139  005D  0AF6               	incf	Lcd_Set_Cursor@b,f
  1140  005E  3001               	movlw	1
  1141  005F  120A  118A  2667  120A  118A  	fcall	_Lcd_Set_Cursor
  1142  0064                     l2610:
  1143                           
  1144                           ;main_master.c: 96:     return;
  1145  0064  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1146  0065  00F7               	movwf	Lcd_Write_String@a
  1147  0066  3080               	movlw	128
  1148  0067  00F8               	movwf	Lcd_Write_String@a+1
  1149  0068  120A  118A  270C  120A  118A  	fcall	_Lcd_Write_String
  1150  006D                     l2612:
  1151                           
  1152                           ;main_master.c: 97: }
  1153  006D  305B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1154  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1155  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0070  00BA               	movwf	??_main
  1157  0071  083A               	movf	??_main,w
  1158  0072  00B1               	movwf	sprintf@f
  1159  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1160  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1161  0075  084A               	movf	main@val^(0+128),w
  1162  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0078  00BB               	movwf	??_main+1
  1165  0079  01BC               	clrf	??_main+2
  1166  007A  083B               	movf	??_main+1,w
  1167  007B  00B2               	movwf	?_sprintf+1
  1168  007C  083C               	movf	??_main+2,w
  1169  007D  00B3               	movwf	?_sprintf+2
  1170  007E  30A0               	movlw	(low (main@buffer| 0))& (0+255)
  1171  007F  120A  158A  27A7  120A  118A  	fcall	_sprintf
  1172  0084                     l2614:
  1173                           
  1174                           ;main_master.c: 98: 
  1175  0084  305B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1176  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0087  00BA               	movwf	??_main
  1179  0088  083A               	movf	??_main,w
  1180  0089  00B1               	movwf	sprintf@f
  1181  008A  1683               	bsf	3,5	;RP0=1, select bank1
  1182  008B  1303               	bcf	3,6	;RP1=0, select bank1
  1183  008C  0848               	movf	main@val2^(0+128),w
  1184  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1185  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1186  008F  00BB               	movwf	??_main+1
  1187  0090  01BC               	clrf	??_main+2
  1188  0091  083B               	movf	??_main+1,w
  1189  0092  00B2               	movwf	?_sprintf+1
  1190  0093  083C               	movf	??_main+2,w
  1191  0094  00B3               	movwf	?_sprintf+2
  1192  0095  30B4               	movlw	(low (main@buffer2| 0))& (0+255)
  1193  0096  120A  158A  27A7  120A  118A  	fcall	_sprintf
  1194  009B                     l2616:
  1195                           
  1196                           ;main_master.c: 99: 
  1197  009B  3002               	movlw	2
  1198  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1199  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1200  009E  00BA               	movwf	??_main
  1201  009F  083A               	movf	??_main,w
  1202  00A0  00F6               	movwf	Lcd_Set_Cursor@b
  1203  00A1  3002               	movlw	2
  1204  00A2  120A  118A  2667  120A  118A  	fcall	_Lcd_Set_Cursor
  1205  00A7                     l2618:
  1206                           
  1207                           ;main_master.c: 100: 
  1208  00A7  30A0               	movlw	(low (main@buffer| 0))& (0+255)
  1209  00A8  00F7               	movwf	Lcd_Write_String@a
  1210  00A9  3000               	movlw	0
  1211  00AA  00F8               	movwf	Lcd_Write_String@a+1
  1212  00AB  120A  118A  270C  120A  118A  	fcall	_Lcd_Write_String
  1213  00B0                     l2620:
  1214                           
  1215                           ;main_master.c: 101: void setup(void){
  1216  00B0  300E               	movlw	14
  1217  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1218  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1219  00B3  00BA               	movwf	??_main
  1220  00B4  083A               	movf	??_main,w
  1221  00B5  00F6               	movwf	Lcd_Set_Cursor@b
  1222  00B6  3002               	movlw	2
  1223  00B7  120A  118A  2667  120A  118A  	fcall	_Lcd_Set_Cursor
  1224  00BC                     l2622:
  1225                           
  1226                           ;main_master.c: 102: 
  1227  00BC  30B4               	movlw	(low (main@buffer2| 0))& (0+255)
  1228  00BD  00F7               	movwf	Lcd_Write_String@a
  1229  00BE  3000               	movlw	0
  1230  00BF  00F8               	movwf	Lcd_Write_String@a+1
  1231  00C0  120A  118A  270C  120A  118A  	fcall	_Lcd_Write_String
  1232  00C5                     l2624:
  1233                           
  1234                           ;main_master.c: 104:     OSCCONbits.IRCF1 = 1;
  1235  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1236  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1237  00C7  0349               	decf	main@val1^(0+128),w
  1238  00C8  1D03               	btfss	3,2
  1239  00C9  28CB               	goto	u2071
  1240  00CA  28CC               	goto	u2070
  1241  00CB                     u2071:
  1242  00CB  28E2               	goto	l2630
  1243  00CC                     u2070:
  1244  00CC                     l2626:
  1245                           
  1246                           ;main_master.c: 105:     OSCCONbits.IRCF2 = 1;
  1247  00CC  3008               	movlw	8
  1248  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1249  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1250  00CF  00BA               	movwf	??_main
  1251  00D0  083A               	movf	??_main,w
  1252  00D1  00F6               	movwf	Lcd_Set_Cursor@b
  1253  00D2  3002               	movlw	2
  1254  00D3  120A  118A  2667  120A  118A  	fcall	_Lcd_Set_Cursor
  1255  00D8                     l2628:
  1256                           
  1257                           ;main_master.c: 106:     OSCCONbits.SCS = 1;
  1258  00D8  3063               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1259  00D9  00F7               	movwf	Lcd_Write_String@a
  1260  00DA  3080               	movlw	128
  1261  00DB  00F8               	movwf	Lcd_Write_String@a+1
  1262  00DC  120A  118A  270C  120A  118A  	fcall	_Lcd_Write_String
  1263                           
  1264                           ;main_master.c: 107: 
  1265  00E1  28F7               	goto	l2634
  1266  00E2                     l2630:
  1267                           
  1268                           ;main_master.c: 109:     ANSEL = 0;
  1269  00E2  3008               	movlw	8
  1270  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1271  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1272  00E5  00BA               	movwf	??_main
  1273  00E6  083A               	movf	??_main,w
  1274  00E7  00F6               	movwf	Lcd_Set_Cursor@b
  1275  00E8  3002               	movlw	2
  1276  00E9  120A  118A  2667  120A  118A  	fcall	_Lcd_Set_Cursor
  1277  00EE                     l2632:
  1278                           
  1279                           ;main_master.c: 110:     ANSELH = 0;
  1280  00EE  305F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1281  00EF  00F7               	movwf	Lcd_Write_String@a
  1282  00F0  3080               	movlw	128
  1283  00F1  00F8               	movwf	Lcd_Write_String@a+1
  1284  00F2  120A  118A  270C  120A  118A  	fcall	_Lcd_Write_String
  1285  00F7                     l2634:
  1286                           
  1287                           ;main_master.c: 112: 
  1288  00F7  300B               	movlw	11
  1289  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1290  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1291  00FA  00BC               	movwf	??_main+2
  1292  00FB  3026               	movlw	38
  1293  00FC  00BB               	movwf	??_main+1
  1294  00FD  305D               	movlw	93
  1295  00FE  00BA               	movwf	??_main
  1296  00FF                     u2087:
  1297  00FF  0BBA               	decfsz	??_main,f
  1298  0100  28FF               	goto	u2087
  1299  0101  0BBB               	decfsz	??_main+1,f
  1300  0102  28FF               	goto	u2087
  1301  0103  0BBC               	decfsz	??_main+2,f
  1302  0104  28FF               	goto	u2087
  1303  0105                     l2636:
  1304                           
  1305                           ;main_master.c: 117: 
  1306  0105  120A  158A  2717  120A  118A  	fcall	_I2C_Master_Start
  1307  010A                     l2638:
  1308                           
  1309                           ;main_master.c: 118: 
  1310  010A  3051               	movlw	81
  1311  010B  00F2               	movwf	I2C_Master_Write@d
  1312  010C  3000               	movlw	0
  1313  010D  00F3               	movwf	I2C_Master_Write@d+1
  1314  010E  120A  158A  2732  120A  118A  	fcall	_I2C_Master_Write
  1315  0113                     l2640:
  1316                           
  1317                           ;main_master.c: 119:     PORTA = 0x00;
  1318  0113  3000               	movlw	0
  1319  0114  00F2               	movwf	I2C_Master_Read@a
  1320  0115  00F3               	movwf	I2C_Master_Read@a+1
  1321  0116  120A  118A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1322  011B  0872               	movf	?_I2C_Master_Read,w
  1323  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1324  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1325  011E  00BA               	movwf	??_main
  1326  011F  083A               	movf	??_main,w
  1327  0120  00C6               	movwf	_R1
  1328  0121                     l2642:
  1329                           
  1330                           ;main_master.c: 120:     PORTB = 0x00;
  1331  0121  120A  158A  2720  120A  118A  	fcall	_I2C_Master_Stop
  1332  0126                     l2644:
  1333                           
  1334                           ;main_master.c: 121:     PORTC = 0x00;
  1335  0126  3002               	movlw	2
  1336  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0129  00BC               	movwf	??_main+2
  1339  012A  3004               	movlw	4
  1340  012B  00BB               	movwf	??_main+1
  1341  012C  30B9               	movlw	185
  1342  012D  00BA               	movwf	??_main
  1343  012E                     u2097:
  1344  012E  0BBA               	decfsz	??_main,f
  1345  012F  292E               	goto	u2097
  1346  0130  0BBB               	decfsz	??_main+1,f
  1347  0131  292E               	goto	u2097
  1348  0132  0BBC               	decfsz	??_main+2,f
  1349  0133  292E               	goto	u2097
  1350  0134  2935               	nop2
  1351  0135                     l2646:
  1352                           
  1353                           ;main_master.c: 124: 
  1354  0135  120A  158A  2717  120A  118A  	fcall	_I2C_Master_Start
  1355  013A                     l2648:
  1356                           
  1357                           ;main_master.c: 125: 
  1358  013A  3061               	movlw	97
  1359  013B  00F2               	movwf	I2C_Master_Write@d
  1360  013C  3000               	movlw	0
  1361  013D  00F3               	movwf	I2C_Master_Write@d+1
  1362  013E  120A  158A  2732  120A  118A  	fcall	_I2C_Master_Write
  1363  0143                     l2650:
  1364                           
  1365                           ;main_master.c: 126:     OPTION_REGbits.nRBPU = 0;
  1366  0143  3000               	movlw	0
  1367  0144  00F2               	movwf	I2C_Master_Read@a
  1368  0145  00F3               	movwf	I2C_Master_Read@a+1
  1369  0146  120A  118A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1370  014B  0872               	movf	?_I2C_Master_Read,w
  1371  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1372  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1373  014E  00BA               	movwf	??_main
  1374  014F  083A               	movf	??_main,w
  1375  0150  00C5               	movwf	_R2
  1376  0151                     l2652:
  1377                           
  1378                           ;main_master.c: 127:     WPUB = 0b00000001;
  1379  0151  120A  158A  2720  120A  118A  	fcall	_I2C_Master_Stop
  1380  0156                     l2654:
  1381                           
  1382                           ;main_master.c: 128:     IOCBbits.IOCB0 = 1;
  1383  0156  3002               	movlw	2
  1384  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0159  00BC               	movwf	??_main+2
  1387  015A  3004               	movlw	4
  1388  015B  00BB               	movwf	??_main+1
  1389  015C  30B9               	movlw	185
  1390  015D  00BA               	movwf	??_main
  1391  015E                     u2107:
  1392  015E  0BBA               	decfsz	??_main,f
  1393  015F  295E               	goto	u2107
  1394  0160  0BBB               	decfsz	??_main+1,f
  1395  0161  295E               	goto	u2107
  1396  0162  0BBC               	decfsz	??_main+2,f
  1397  0163  295E               	goto	u2107
  1398  0164  2965               	nop2
  1399  0165                     l2656:
  1400                           
  1401                           ;main_master.c: 130: 
  1402  0165  120A  118A  22A4  120A  118A  	fcall	_Text
  1403  016A  2837               	goto	l2596
  1404  016B  120A  118A  280C   	ljmp	start
  1405  016E                     __end_of_main:
  1406                           
  1407                           	psect	text1
  1408  0FA7                     __ptext1:	
  1409 ;; *************** function _sprintf *****************
  1410 ;; Defined at:
  1411 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  wh              1    wreg     PTR unsigned char 
  1414 ;;		 -> main@buffer2(20), main@buffer(20), 
  1415 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  1416 ;;		 -> STR_3(4), STR_2(4), 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  1419 ;;		 -> main@buffer2(20), main@buffer(20), 
  1420 ;;  pb              2   24[BANK0 ] struct __prbuf
  1421 ;;  ap              1   23[BANK0 ] PTR void [1]
  1422 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2   17[BANK0 ] int 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       3       0       0       0
  1433 ;;      Locals:         0       4       0       0       0
  1434 ;;      Temps:          0       2       0       0       0
  1435 ;;      Totals:         0       9       0       0       0
  1436 ;;Total ram usage:        9 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		__doprnt
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _sprintf
  1448  0FA7                     _sprintf:
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1452                           ;sprintf@wh stored from wreg
  1453  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0FA9  00B6               	movwf	sprintf@wh
  1456  0FAA                     l2502:
  1457  0FAA  0836               	movf	sprintf@wh,w
  1458  0FAB  00B4               	movwf	??_sprintf
  1459  0FAC  0834               	movf	??_sprintf,w
  1460  0FAD  00B8               	movwf	sprintf@pb
  1461  0FAE                     l2504:
  1462  0FAE  01B9               	clrf	low ((sprintf@pb| 0+1))
  1463  0FAF                     l2506:
  1464  0FAF  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1465  0FB0  00B4               	movwf	??_sprintf
  1466  0FB1  0834               	movf	??_sprintf,w
  1467  0FB2  00B7               	movwf	sprintf@ap
  1468  0FB3                     l2508:
  1469  0FB3  0831               	movf	sprintf@f,w
  1470  0FB4  00B4               	movwf	??_sprintf
  1471  0FB5  0834               	movf	??_sprintf,w
  1472  0FB6  00A6               	movwf	__doprnt@f
  1473  0FB7  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  1474  0FB8  00B5               	movwf	??_sprintf+1
  1475  0FB9  0835               	movf	??_sprintf+1,w
  1476  0FBA  00A7               	movwf	__doprnt@ap
  1477  0FBB  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  1478  0FBC  120A  118A  216E  120A  158A  	fcall	__doprnt
  1479  0FC1                     l2510:
  1480  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0FC3  0838               	movf	sprintf@pb,w
  1483  0FC4  0084               	movwf	4
  1484  0FC5  1383               	bcf	3,7	;select IRP bank0
  1485  0FC6  0180               	clrf	0
  1486  0FC7                     l844:
  1487  0FC7  0008               	return
  1488  0FC8                     __end_of_sprintf:
  1489                           
  1490                           	psect	text2
  1491  06BF                     __ptext2:	
  1492 ;; *************** function _setup *****************
  1493 ;; Defined at:
  1494 ;;		line 138 in file "main_master.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    3
  1515 ;; This function calls:
  1516 ;;		_I2C_Master_Init
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _setup
  1524  06BF                     _setup:
  1525  06BF                     l2410:	
  1526                           ;incstack = 0
  1527                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1528                           
  1529                           
  1530                           ;main_master.c: 140:     RCSTAbits.CREN = 1;
  1531  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  1532  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  1533  06C1  120F               	bcf	15,4	;volatile
  1534                           
  1535                           ;main_master.c: 141:     TXSTAbits.TX9 = 0;
  1536  06C2  168F               	bsf	15,5	;volatile
  1537                           
  1538                           ;main_master.c: 142: 
  1539  06C3  170F               	bsf	15,6	;volatile
  1540                           
  1541                           ;main_master.c: 143:     TXSTAbits.TXEN = 1;
  1542  06C4  140F               	bsf	15,0	;volatile
  1543  06C5                     l2412:
  1544                           
  1545                           ;main_master.c: 146:     PIR1bits.TXIF = 0;
  1546  06C5  1683               	bsf	3,5	;RP0=1, select bank3
  1547  06C6  1703               	bsf	3,6	;RP1=1, select bank3
  1548  06C7  0188               	clrf	8	;volatile
  1549                           
  1550                           ;main_master.c: 147: 
  1551  06C8  0189               	clrf	9	;volatile
  1552  06C9                     l2414:
  1553                           
  1554                           ;main_master.c: 150:     INTCONbits.PEIE = 1;
  1555  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  1556  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  1557  06CB  1406               	bsf	6,0	;volatile
  1558  06CC                     l2416:
  1559                           
  1560                           ;main_master.c: 151:     PIE1bits.RCIE = 0;
  1561  06CC  1007               	bcf	7,0	;volatile
  1562                           
  1563                           ;main_master.c: 152:     PIE1bits.TXIE = 0;
  1564  06CD  0188               	clrf	8	;volatile
  1565                           
  1566                           ;main_master.c: 153:     INTCONbits.RBIF = 1;
  1567  06CE  0185               	clrf	5	;volatile
  1568                           
  1569                           ;main_master.c: 156: 
  1570  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1571  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1572  06D1  0185               	clrf	5	;volatile
  1573                           
  1574                           ;main_master.c: 157:     I2C_Master_Init(100000);
  1575  06D2  0186               	clrf	6	;volatile
  1576                           
  1577                           ;main_master.c: 158: }
  1578  06D3  0187               	clrf	7	;volatile
  1579                           
  1580                           ;main_master.c: 159: 
  1581  06D4  0188               	clrf	8	;volatile
  1582                           
  1583                           ;main_master.c: 160: 
  1584  06D5  0189               	clrf	9	;volatile
  1585  06D6                     l2418:
  1586                           
  1587                           ;main_master.c: 163:      division(cont);
  1588  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  1589  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  1590  06D8  1381               	bcf	1,7	;volatile
  1591  06D9                     l2420:
  1592                           
  1593                           ;main_master.c: 164:     printf("Valor del contador:\r");
  1594  06D9  3001               	movlw	1
  1595  06DA  0095               	movwf	21	;volatile
  1596  06DB                     l2422:
  1597                           
  1598                           ;main_master.c: 165:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1599  06DB  1416               	bsf	22,0	;volatile
  1600  06DC                     l2424:
  1601                           
  1602                           ;main_master.c: 168:     TXREG = decenas;
  1603  06DC  1218               	bcf	24,4	;volatile
  1604  06DD                     l2426:
  1605                           
  1606                           ;main_master.c: 169:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1607  06DD  1518               	bsf	24,2	;volatile
  1608  06DE                     l2428:
  1609                           
  1610                           ;main_master.c: 170:     TXREG = unidades;
  1611  06DE  1683               	bsf	3,5	;RP0=1, select bank3
  1612  06DF  1703               	bsf	3,6	;RP1=1, select bank3
  1613  06E0  1187               	bcf	7,3	;volatile
  1614  06E1                     l2430:
  1615                           
  1616                           ;main_master.c: 172:     printf("\r");
  1617  06E1  3019               	movlw	25
  1618  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  1619  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  1620  06E4  0099               	movwf	25	;volatile
  1621  06E5                     l2432:
  1622                           
  1623                           ;main_master.c: 173: 
  1624  06E5  3001               	movlw	1
  1625  06E6  009A               	movwf	26	;volatile
  1626  06E7                     l2434:
  1627                           
  1628                           ;main_master.c: 175:      division(stat);
  1629  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1630  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1631  06E9  1798               	bsf	24,7	;volatile
  1632  06EA                     l2436:
  1633                           
  1634                           ;main_master.c: 176:     printf("Valor del agua:\r");
  1635  06EA  1318               	bcf	24,6	;volatile
  1636  06EB                     l2438:
  1637                           
  1638                           ;main_master.c: 177:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1639  06EB  1618               	bsf	24,4	;volatile
  1640  06EC                     l2440:
  1641                           
  1642                           ;main_master.c: 178: 
  1643  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  1644  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  1645  06EE  1318               	bcf	24,6	;volatile
  1646  06EF                     l2442:
  1647                           
  1648                           ;main_master.c: 180: 
  1649  06EF  1698               	bsf	24,5	;volatile
  1650  06F0                     l2444:
  1651                           
  1652                           ;main_master.c: 182:     TXREG = unidades;
  1653  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1654  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1655  06F2  128C               	bcf	12,5	;volatile
  1656  06F3                     l2446:
  1657                           
  1658                           ;main_master.c: 183:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1659  06F3  120C               	bcf	12,4	;volatile
  1660  06F4                     l2448:
  1661                           
  1662                           ;main_master.c: 186:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1663  06F4  178B               	bsf	11,7	;volatile
  1664  06F5                     l2450:
  1665                           
  1666                           ;main_master.c: 187:      division(temp);
  1667  06F5  170B               	bsf	11,6	;volatile
  1668  06F6                     l2452:
  1669                           
  1670                           ;main_master.c: 188:     printf("Valor del temperatura:\r");
  1671  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1672  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1673  06F8  128C               	bcf	12,5	;volatile
  1674  06F9                     l2454:
  1675                           
  1676                           ;main_master.c: 189:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1677  06F9  120C               	bcf	12,4	;volatile
  1678  06FA                     l2456:
  1679                           
  1680                           ;main_master.c: 190:     TXREG = centenas;
  1681  06FA  140B               	bsf	11,0	;volatile
  1682  06FB                     l2458:
  1683                           
  1684                           ;main_master.c: 191:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1685  06FB  158B               	bsf	11,3	;volatile
  1686  06FC                     l2460:
  1687                           
  1688                           ;main_master.c: 194:     TXREG = unidades;
  1689  06FC  3000               	movlw	0
  1690  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1691  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1692  06FF  00A9               	movwf	I2C_Master_Init@c+3
  1693  0700  3001               	movlw	1
  1694  0701  00A8               	movwf	I2C_Master_Init@c+2
  1695  0702  3086               	movlw	134
  1696  0703  00A7               	movwf	I2C_Master_Init@c+1
  1697  0704  30A0               	movlw	160
  1698  0705  00A6               	movwf	I2C_Master_Init@c
  1699  0706  120A  158A  27C8  120A  118A  	fcall	_I2C_Master_Init
  1700  070B                     l134:
  1701  070B  0008               	return
  1702  070C                     __end_of_setup:
  1703                           
  1704                           	psect	text3
  1705  0FC8                     __ptext3:	
  1706 ;; *************** function _I2C_Master_Init *****************
  1707 ;; Defined at:
  1708 ;;		line 16 in file "I2C.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  c               4    6[BANK0 ] const unsigned long 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       4       0       0       0
  1723 ;;      Locals:         0       0       0       0       0
  1724 ;;      Temps:          0       4       0       0       0
  1725 ;;      Totals:         0       8       0       0       0
  1726 ;;Total ram usage:        8 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    2
  1729 ;; This function calls:
  1730 ;;		___lldiv
  1731 ;; This function is called by:
  1732 ;;		_setup
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _I2C_Master_Init
  1738  0FC8                     _I2C_Master_Init:
  1739  0FC8                     l2346:	
  1740                           ;incstack = 0
  1741                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1742                           
  1743                           
  1744                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1745  0FC8  3028               	movlw	40
  1746  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0FCB  0094               	movwf	20	;volatile
  1749  0FCC                     l2348:
  1750                           
  1751                           ;I2C.c: 19:     SSPCON2 = 0;
  1752  0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0FCE  0191               	clrf	17	;volatile
  1755  0FCF                     l2350:
  1756                           
  1757                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1758  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0FD1  0826               	movf	I2C_Master_Init@c,w
  1761  0FD2  00AA               	movwf	??_I2C_Master_Init
  1762  0FD3  0827               	movf	I2C_Master_Init@c+1,w
  1763  0FD4  00AB               	movwf	??_I2C_Master_Init+1
  1764  0FD5  0828               	movf	I2C_Master_Init@c+2,w
  1765  0FD6  00AC               	movwf	??_I2C_Master_Init+2
  1766  0FD7  0829               	movf	I2C_Master_Init@c+3,w
  1767  0FD8  00AD               	movwf	??_I2C_Master_Init+3
  1768  0FD9  3002               	movlw	2
  1769  0FDA                     u1955:
  1770  0FDA  1003               	clrc
  1771  0FDB  0DAA               	rlf	??_I2C_Master_Init,f
  1772  0FDC  0DAB               	rlf	??_I2C_Master_Init+1,f
  1773  0FDD  0DAC               	rlf	??_I2C_Master_Init+2,f
  1774  0FDE  0DAD               	rlf	??_I2C_Master_Init+3,f
  1775  0FDF                     u1950:
  1776  0FDF  3EFF               	addlw	-1
  1777  0FE0  1D03               	skipz
  1778  0FE1  2FDA               	goto	u1955
  1779  0FE2  082D               	movf	??_I2C_Master_Init+3,w
  1780  0FE3  00F5               	movwf	___lldiv@divisor+3
  1781  0FE4  082C               	movf	??_I2C_Master_Init+2,w
  1782  0FE5  00F4               	movwf	___lldiv@divisor+2
  1783  0FE6  082B               	movf	??_I2C_Master_Init+1,w
  1784  0FE7  00F3               	movwf	___lldiv@divisor+1
  1785  0FE8  082A               	movf	??_I2C_Master_Init,w
  1786  0FE9  00F2               	movwf	___lldiv@divisor
  1787  0FEA  3000               	movlw	0
  1788  0FEB  00F9               	movwf	___lldiv@dividend+3
  1789  0FEC  307A               	movlw	122
  1790  0FED  00F8               	movwf	___lldiv@dividend+2
  1791  0FEE  3012               	movlw	18
  1792  0FEF  00F7               	movwf	___lldiv@dividend+1
  1793  0FF0  3000               	movlw	0
  1794  0FF1  00F6               	movwf	___lldiv@dividend
  1795  0FF2  120A  118A  2549  120A  158A  	fcall	___lldiv
  1796  0FF7  0872               	movf	?___lldiv,w
  1797  0FF8  3EFF               	addlw	255
  1798  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  1800  0FFB  0093               	movwf	19	;volatile
  1801  0FFC                     l2352:
  1802                           
  1803                           ;I2C.c: 21:     SSPSTAT = 0;
  1804  0FFC  0194               	clrf	20	;volatile
  1805  0FFD                     l2354:
  1806                           
  1807                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1808  0FFD  1587               	bsf	7,3	;volatile
  1809  0FFE                     l2356:
  1810                           
  1811                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1812  0FFE  1607               	bsf	7,4	;volatile
  1813  0FFF                     l175:
  1814  0FFF  0008               	return
  1815  1000                     __end_of_I2C_Master_Init:
  1816                           
  1817                           	psect	text4
  1818  0549                     __ptext4:	
  1819 ;; *************** function ___lldiv *****************
  1820 ;; Defined at:
  1821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  divisor         4    2[COMMON] unsigned long 
  1824 ;;  dividend        4    6[COMMON] unsigned long 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  quotient        4    1[BANK0 ] unsigned long 
  1827 ;;  counter         1    5[BANK0 ] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  4    2[COMMON] unsigned long 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         8       0       0       0       0
  1838 ;;      Locals:         0       5       0       0       0
  1839 ;;      Temps:          0       1       0       0       0
  1840 ;;      Totals:         8       6       0       0       0
  1841 ;;Total ram usage:       14 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_I2C_Master_Init
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function ___lldiv
  1853  0549                     ___lldiv:
  1854  0549                     l2168:	
  1855                           ;incstack = 0
  1856                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1857                           
  1858  0549  3000               	movlw	0
  1859  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1860  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1861  054C  00A4               	movwf	___lldiv@quotient+3
  1862  054D  3000               	movlw	0
  1863  054E  00A3               	movwf	___lldiv@quotient+2
  1864  054F  3000               	movlw	0
  1865  0550  00A2               	movwf	___lldiv@quotient+1
  1866  0551  3000               	movlw	0
  1867  0552  00A1               	movwf	___lldiv@quotient
  1868  0553  0875               	movf	___lldiv@divisor+3,w
  1869  0554  0474               	iorwf	___lldiv@divisor+2,w
  1870  0555  0473               	iorwf	___lldiv@divisor+1,w
  1871  0556  0472               	iorwf	___lldiv@divisor,w
  1872  0557  1903               	skipnz
  1873  0558  2D5A               	goto	u1591
  1874  0559  2D5B               	goto	u1590
  1875  055A                     u1591:
  1876  055A  2DA8               	goto	l2188
  1877  055B                     u1590:
  1878  055B                     l2170:
  1879  055B  01A5               	clrf	___lldiv@counter
  1880  055C  0AA5               	incf	___lldiv@counter,f
  1881  055D  2D6B               	goto	l2174
  1882  055E                     l2172:
  1883  055E  3001               	movlw	1
  1884  055F  00A0               	movwf	??___lldiv
  1885  0560                     u1605:
  1886  0560  1003               	clrc
  1887  0561  0DF2               	rlf	___lldiv@divisor,f
  1888  0562  0DF3               	rlf	___lldiv@divisor+1,f
  1889  0563  0DF4               	rlf	___lldiv@divisor+2,f
  1890  0564  0DF5               	rlf	___lldiv@divisor+3,f
  1891  0565  0BA0               	decfsz	??___lldiv,f
  1892  0566  2D60               	goto	u1605
  1893  0567  3001               	movlw	1
  1894  0568  00A0               	movwf	??___lldiv
  1895  0569  0820               	movf	??___lldiv,w
  1896  056A  07A5               	addwf	___lldiv@counter,f
  1897  056B                     l2174:
  1898  056B  1FF5               	btfss	___lldiv@divisor+3,7
  1899  056C  2D6E               	goto	u1611
  1900  056D  2D6F               	goto	u1610
  1901  056E                     u1611:
  1902  056E  2D5E               	goto	l2172
  1903  056F                     u1610:
  1904  056F                     l2176:
  1905  056F  3001               	movlw	1
  1906  0570  00A0               	movwf	??___lldiv
  1907  0571                     u1625:
  1908  0571  1003               	clrc
  1909  0572  0DA1               	rlf	___lldiv@quotient,f
  1910  0573  0DA2               	rlf	___lldiv@quotient+1,f
  1911  0574  0DA3               	rlf	___lldiv@quotient+2,f
  1912  0575  0DA4               	rlf	___lldiv@quotient+3,f
  1913  0576  0BA0               	decfsz	??___lldiv,f
  1914  0577  2D71               	goto	u1625
  1915  0578                     l2178:
  1916  0578  0875               	movf	___lldiv@divisor+3,w
  1917  0579  0279               	subwf	___lldiv@dividend+3,w
  1918  057A  1D03               	skipz
  1919  057B  2D86               	goto	u1635
  1920  057C  0874               	movf	___lldiv@divisor+2,w
  1921  057D  0278               	subwf	___lldiv@dividend+2,w
  1922  057E  1D03               	skipz
  1923  057F  2D86               	goto	u1635
  1924  0580  0873               	movf	___lldiv@divisor+1,w
  1925  0581  0277               	subwf	___lldiv@dividend+1,w
  1926  0582  1D03               	skipz
  1927  0583  2D86               	goto	u1635
  1928  0584  0872               	movf	___lldiv@divisor,w
  1929  0585  0276               	subwf	___lldiv@dividend,w
  1930  0586                     u1635:
  1931  0586  1C03               	skipc
  1932  0587  2D89               	goto	u1631
  1933  0588  2D8A               	goto	u1630
  1934  0589                     u1631:
  1935  0589  2D99               	goto	l2184
  1936  058A                     u1630:
  1937  058A                     l2180:
  1938  058A  0872               	movf	___lldiv@divisor,w
  1939  058B  02F6               	subwf	___lldiv@dividend,f
  1940  058C  0873               	movf	___lldiv@divisor+1,w
  1941  058D  1C03               	skipc
  1942  058E  0F73               	incfsz	___lldiv@divisor+1,w
  1943  058F  02F7               	subwf	___lldiv@dividend+1,f
  1944  0590  0874               	movf	___lldiv@divisor+2,w
  1945  0591  1C03               	skipc
  1946  0592  0F74               	incfsz	___lldiv@divisor+2,w
  1947  0593  02F8               	subwf	___lldiv@dividend+2,f
  1948  0594  0875               	movf	___lldiv@divisor+3,w
  1949  0595  1C03               	skipc
  1950  0596  0F75               	incfsz	___lldiv@divisor+3,w
  1951  0597  02F9               	subwf	___lldiv@dividend+3,f
  1952  0598                     l2182:
  1953  0598  1421               	bsf	___lldiv@quotient,0
  1954  0599                     l2184:
  1955  0599  3001               	movlw	1
  1956  059A                     u1645:
  1957  059A  1003               	clrc
  1958  059B  0CF5               	rrf	___lldiv@divisor+3,f
  1959  059C  0CF4               	rrf	___lldiv@divisor+2,f
  1960  059D  0CF3               	rrf	___lldiv@divisor+1,f
  1961  059E  0CF2               	rrf	___lldiv@divisor,f
  1962  059F  3EFF               	addlw	-1
  1963  05A0  1D03               	skipz
  1964  05A1  2D9A               	goto	u1645
  1965  05A2                     l2186:
  1966  05A2  3001               	movlw	1
  1967  05A3  02A5               	subwf	___lldiv@counter,f
  1968  05A4  1D03               	btfss	3,2
  1969  05A5  2DA7               	goto	u1651
  1970  05A6  2DA8               	goto	u1650
  1971  05A7                     u1651:
  1972  05A7  2D6F               	goto	l2176
  1973  05A8                     u1650:
  1974  05A8                     l2188:
  1975  05A8  0824               	movf	___lldiv@quotient+3,w
  1976  05A9  00F5               	movwf	?___lldiv+3
  1977  05AA  0823               	movf	___lldiv@quotient+2,w
  1978  05AB  00F4               	movwf	?___lldiv+2
  1979  05AC  0822               	movf	___lldiv@quotient+1,w
  1980  05AD  00F3               	movwf	?___lldiv+1
  1981  05AE  0821               	movf	___lldiv@quotient,w
  1982  05AF  00F2               	movwf	?___lldiv
  1983  05B0                     l378:
  1984  05B0  0008               	return
  1985  05B1                     __end_of___lldiv:
  1986                           
  1987                           	psect	text5
  1988  02A4                     __ptext5:	
  1989 ;; *************** function _Text *****************
  1990 ;; Defined at:
  1991 ;;		line 198 in file "main_master.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0
  2007 ;;      Temps:          0       3       0       0       0
  2008 ;;      Totals:         0       3       0       0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    4
  2012 ;; This function calls:
  2013 ;;		_division
  2014 ;;		_printf
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _Text
  2022  02A4                     _Text:
  2023  02A4                     l2542:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2026                           
  2027                           
  2028                           ;main_master.c: 199: 
  2029  02A4  3002               	movlw	2
  2030  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2031  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2032  02A7  00B9               	movwf	??_Text+2
  2033  02A8  3045               	movlw	69
  2034  02A9  00B8               	movwf	??_Text+1
  2035  02AA  30A9               	movlw	169
  2036  02AB  00B7               	movwf	??_Text
  2037  02AC                     u2117:
  2038  02AC  0BB7               	decfsz	??_Text,f
  2039  02AD  2AAC               	goto	u2117
  2040  02AE  0BB8               	decfsz	??_Text+1,f
  2041  02AF  2AAC               	goto	u2117
  2042  02B0  0BB9               	decfsz	??_Text+2,f
  2043  02B1  2AAC               	goto	u2117
  2044  02B2                     l2544:
  2045                           
  2046                           ;main_master.c: 200: char division (char valor){
  2047  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2048  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2049  02B4  0842               	movf	_cont,w
  2050  02B5  120A  118A  2475  120A  118A  	fcall	_division
  2051  02BA                     l2546:
  2052                           
  2053                           ;main_master.c: 201:     centenas = valor/100;
  2054  02BA  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2055  02BB  120A  158A  2770  120A  118A  	fcall	_printf
  2056  02C0                     l2548:
  2057                           
  2058                           ;main_master.c: 202:     residuo = valor%100;
  2059  02C0  3002               	movlw	2
  2060  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2061  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2062  02C3  00B9               	movwf	??_Text+2
  2063  02C4  3045               	movlw	69
  2064  02C5  00B8               	movwf	??_Text+1
  2065  02C6  30A9               	movlw	169
  2066  02C7  00B7               	movwf	??_Text
  2067  02C8                     u2127:
  2068  02C8  0BB7               	decfsz	??_Text,f
  2069  02C9  2AC8               	goto	u2127
  2070  02CA  0BB8               	decfsz	??_Text+1,f
  2071  02CB  2AC8               	goto	u2127
  2072  02CC  0BB9               	decfsz	??_Text+2,f
  2073  02CD  2AC8               	goto	u2127
  2074  02CE                     l2550:
  2075                           
  2076                           ;main_master.c: 205: 
  2077  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2078  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2079  02D0  0840               	movf	_decenas,w
  2080  02D1  0099               	movwf	25	;volatile
  2081  02D2                     l2552:
  2082                           
  2083                           ;main_master.c: 206:     centenas = centenas + 48;
  2084  02D2  3002               	movlw	2
  2085  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2086  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2087  02D5  00B9               	movwf	??_Text+2
  2088  02D6  3045               	movlw	69
  2089  02D7  00B8               	movwf	??_Text+1
  2090  02D8  30A9               	movlw	169
  2091  02D9  00B7               	movwf	??_Text
  2092  02DA                     u2137:
  2093  02DA  0BB7               	decfsz	??_Text,f
  2094  02DB  2ADA               	goto	u2137
  2095  02DC  0BB8               	decfsz	??_Text+1,f
  2096  02DD  2ADA               	goto	u2137
  2097  02DE  0BB9               	decfsz	??_Text+2,f
  2098  02DF  2ADA               	goto	u2137
  2099  02E0                     l2554:
  2100                           
  2101                           ;main_master.c: 207:     decenas = decenas + 48;
  2102  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2103  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2104  02E2  083F               	movf	_unidades,w
  2105  02E3  0099               	movwf	25	;volatile
  2106  02E4                     l2556:
  2107                           
  2108                           ;main_master.c: 208:     unidades = unidades + 48;
  2109  02E4  3002               	movlw	2
  2110  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2111  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2112  02E7  00B9               	movwf	??_Text+2
  2113  02E8  3045               	movlw	69
  2114  02E9  00B8               	movwf	??_Text+1
  2115  02EA  30A9               	movlw	169
  2116  02EB  00B7               	movwf	??_Text
  2117  02EC                     u2147:
  2118  02EC  0BB7               	decfsz	??_Text,f
  2119  02ED  2AEC               	goto	u2147
  2120  02EE  0BB8               	decfsz	??_Text+1,f
  2121  02EF  2AEC               	goto	u2147
  2122  02F0  0BB9               	decfsz	??_Text+2,f
  2123  02F1  2AEC               	goto	u2147
  2124  02F2                     l2558:
  2125                           
  2126                           ;main_master.c: 209: }
  2127  02F2  3021               	movlw	(low (((STR_10+22)-__stringbase)| (0+32768)))& (0+255)
  2128  02F3  120A  158A  2770  120A  118A  	fcall	_printf
  2129  02F8                     l2560:
  2130                           
  2131                           ;main_master.c: 211: 
  2132  02F8  3002               	movlw	2
  2133  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2134  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2135  02FB  00B9               	movwf	??_Text+2
  2136  02FC  3045               	movlw	69
  2137  02FD  00B8               	movwf	??_Text+1
  2138  02FE  30A9               	movlw	169
  2139  02FF  00B7               	movwf	??_Text
  2140  0300                     u2157:
  2141  0300  0BB7               	decfsz	??_Text,f
  2142  0301  2B00               	goto	u2157
  2143  0302  0BB8               	decfsz	??_Text+1,f
  2144  0303  2B00               	goto	u2157
  2145  0304  0BB9               	decfsz	??_Text+2,f
  2146  0305  2B00               	goto	u2157
  2147  0306                     l2562:
  2148                           
  2149                           ;main_master.c: 212: void putch(char data){
  2150  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0308  0843               	movf	_stat,w
  2153  0309  120A  118A  2475  120A  118A  	fcall	_division
  2154  030E                     l2564:
  2155                           
  2156                           ;main_master.c: 213:     while(TXIF == 0);
  2157  030E  304A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2158  030F  120A  158A  2770  120A  118A  	fcall	_printf
  2159  0314                     l2566:
  2160                           
  2161                           ;main_master.c: 214:     TXREG = data;
  2162  0314  3002               	movlw	2
  2163  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0317  00B9               	movwf	??_Text+2
  2166  0318  3045               	movlw	69
  2167  0319  00B8               	movwf	??_Text+1
  2168  031A  30A9               	movlw	169
  2169  031B  00B7               	movwf	??_Text
  2170  031C                     u2167:
  2171  031C  0BB7               	decfsz	??_Text,f
  2172  031D  2B1C               	goto	u2167
  2173  031E  0BB8               	decfsz	??_Text+1,f
  2174  031F  2B1C               	goto	u2167
  2175  0320  0BB9               	decfsz	??_Text+2,f
  2176  0321  2B1C               	goto	u2167
  2177  0322                     l2568:
  2178  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0324  083F               	movf	_unidades,w
  2181  0325  0099               	movwf	25	;volatile
  2182  0326                     l2570:
  2183  0326  3002               	movlw	2
  2184  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0329  00B9               	movwf	??_Text+2
  2187  032A  3045               	movlw	69
  2188  032B  00B8               	movwf	??_Text+1
  2189  032C  30A9               	movlw	169
  2190  032D  00B7               	movwf	??_Text
  2191  032E                     u2177:
  2192  032E  0BB7               	decfsz	??_Text,f
  2193  032F  2B2E               	goto	u2177
  2194  0330  0BB8               	decfsz	??_Text+1,f
  2195  0331  2B2E               	goto	u2177
  2196  0332  0BB9               	decfsz	??_Text+2,f
  2197  0333  2B2E               	goto	u2177
  2198  0334  3021               	movlw	(low (((STR_10+22)-__stringbase)| (0+32768)))& (0+255)
  2199  0335  120A  158A  2770  120A  118A  	fcall	_printf
  2200  033A                     l2572:
  2201  033A  3002               	movlw	2
  2202  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2203  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2204  033D  00B9               	movwf	??_Text+2
  2205  033E  3045               	movlw	69
  2206  033F  00B8               	movwf	??_Text+1
  2207  0340  30A9               	movlw	169
  2208  0341  00B7               	movwf	??_Text
  2209  0342                     u2187:
  2210  0342  0BB7               	decfsz	??_Text,f
  2211  0343  2B42               	goto	u2187
  2212  0344  0BB8               	decfsz	??_Text+1,f
  2213  0345  2B42               	goto	u2187
  2214  0346  0BB9               	decfsz	??_Text+2,f
  2215  0347  2B42               	goto	u2187
  2216  0348                     l2574:
  2217  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2219  034A  0844               	movf	_temp,w
  2220  034B  120A  118A  2475  120A  118A  	fcall	_division
  2221  0350                     l2576:
  2222  0350  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2223  0351  120A  158A  2770  120A  118A  	fcall	_printf
  2224  0356                     l2578:
  2225  0356  3002               	movlw	2
  2226  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0359  00B9               	movwf	??_Text+2
  2229  035A  3045               	movlw	69
  2230  035B  00B8               	movwf	??_Text+1
  2231  035C  30A9               	movlw	169
  2232  035D  00B7               	movwf	??_Text
  2233  035E                     u2197:
  2234  035E  0BB7               	decfsz	??_Text,f
  2235  035F  2B5E               	goto	u2197
  2236  0360  0BB8               	decfsz	??_Text+1,f
  2237  0361  2B5E               	goto	u2197
  2238  0362  0BB9               	decfsz	??_Text+2,f
  2239  0363  2B5E               	goto	u2197
  2240  0364                     l2580:
  2241  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0366  0841               	movf	_centenas,w
  2244  0367  0099               	movwf	25	;volatile
  2245  0368                     l2582:
  2246  0368  3002               	movlw	2
  2247  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2248  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2249  036B  00B9               	movwf	??_Text+2
  2250  036C  3045               	movlw	69
  2251  036D  00B8               	movwf	??_Text+1
  2252  036E  30A9               	movlw	169
  2253  036F  00B7               	movwf	??_Text
  2254  0370                     u2207:
  2255  0370  0BB7               	decfsz	??_Text,f
  2256  0371  2B70               	goto	u2207
  2257  0372  0BB8               	decfsz	??_Text+1,f
  2258  0373  2B70               	goto	u2207
  2259  0374  0BB9               	decfsz	??_Text+2,f
  2260  0375  2B70               	goto	u2207
  2261  0376                     l2584:
  2262  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0378  0840               	movf	_decenas,w
  2265  0379  0099               	movwf	25	;volatile
  2266  037A                     l2586:
  2267  037A  3002               	movlw	2
  2268  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2269  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2270  037D  00B9               	movwf	??_Text+2
  2271  037E  3045               	movlw	69
  2272  037F  00B8               	movwf	??_Text+1
  2273  0380  30A9               	movlw	169
  2274  0381  00B7               	movwf	??_Text
  2275  0382                     u2217:
  2276  0382  0BB7               	decfsz	??_Text,f
  2277  0383  2B82               	goto	u2217
  2278  0384  0BB8               	decfsz	??_Text+1,f
  2279  0385  2B82               	goto	u2217
  2280  0386  0BB9               	decfsz	??_Text+2,f
  2281  0387  2B82               	goto	u2217
  2282  0388                     l2588:
  2283  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2285  038A  083F               	movf	_unidades,w
  2286  038B  0099               	movwf	25	;volatile
  2287  038C                     l2590:
  2288  038C  3002               	movlw	2
  2289  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2290  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2291  038F  00B9               	movwf	??_Text+2
  2292  0390  3045               	movlw	69
  2293  0391  00B8               	movwf	??_Text+1
  2294  0392  30A9               	movlw	169
  2295  0393  00B7               	movwf	??_Text
  2296  0394                     u2227:
  2297  0394  0BB7               	decfsz	??_Text,f
  2298  0395  2B94               	goto	u2227
  2299  0396  0BB8               	decfsz	??_Text+1,f
  2300  0397  2B94               	goto	u2227
  2301  0398  0BB9               	decfsz	??_Text+2,f
  2302  0399  2B94               	goto	u2227
  2303  039A                     l2592:
  2304  039A  3021               	movlw	(low (((STR_10+22)-__stringbase)| (0+32768)))& (0+255)
  2305  039B  120A  158A  2770  120A  118A  	fcall	_printf
  2306  03A0                     l137:
  2307  03A0  0008               	return
  2308  03A1                     __end_of_Text:
  2309                           
  2310                           	psect	text6
  2311  0F70                     __ptext6:	
  2312 ;; *************** function _printf *****************
  2313 ;; Defined at:
  2314 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  f               1    wreg     PTR const unsigned char 
  2317 ;;		 -> STR_11(2), STR_10(24), STR_9(2), STR_8(17), 
  2318 ;;		 -> STR_7(2), STR_6(21), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  2321 ;;		 -> STR_11(2), STR_10(24), STR_9(2), STR_8(17), 
  2322 ;;		 -> STR_7(2), STR_6(21), 
  2323 ;;  pb              2   21[BANK0 ] struct __prbuf
  2324 ;;  ap              1   19[BANK0 ] PTR void [1]
  2325 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2   82[None  ] int 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         0       4       0       0       0
  2337 ;;      Temps:          0       2       0       0       0
  2338 ;;      Totals:         0       6       0       0       0
  2339 ;;Total ram usage:        6 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    3
  2342 ;; This function calls:
  2343 ;;		__doprnt
  2344 ;; This function is called by:
  2345 ;;		_Text
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _printf
  2351  0F70                     _printf:
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2355                           ;printf@f stored from wreg
  2356  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0F72  00B4               	movwf	printf@f
  2359  0F73                     l2366:
  2360  0F73  01B5               	clrf	printf@pb
  2361  0F74                     l2368:
  2362  0F74  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2363  0F75  00B1               	movwf	??_printf
  2364  0F76  0831               	movf	??_printf,w
  2365  0F77  00B6               	movwf	low ((printf@pb| 0+1))
  2366  0F78                     l2370:
  2367  0F78  3070               	movlw	(low (?_printf| 0))& (0+255)
  2368  0F79  00B1               	movwf	??_printf
  2369  0F7A  0831               	movf	??_printf,w
  2370  0F7B  00B3               	movwf	printf@ap
  2371  0F7C                     l2372:
  2372                           
  2373                           ;	Return value of _printf is never used
  2374  0F7C  0834               	movf	printf@f,w
  2375  0F7D  00B1               	movwf	??_printf
  2376  0F7E  0831               	movf	??_printf,w
  2377  0F7F  00A6               	movwf	__doprnt@f
  2378  0F80  3033               	movlw	(low (printf@ap| 0))& (0+255)
  2379  0F81  00B2               	movwf	??_printf+1
  2380  0F82  0832               	movf	??_printf+1,w
  2381  0F83  00A7               	movwf	__doprnt@ap
  2382  0F84  3035               	movlw	(low (printf@pb| 0))& (0+255)
  2383  0F85  120A  118A  216E  120A  158A  	fcall	__doprnt
  2384  0F8A                     l799:
  2385  0F8A  0008               	return
  2386  0F8B                     __end_of_printf:
  2387                           
  2388                           	psect	text7
  2389  016E                     __ptext7:	
  2390 ;; *************** function __doprnt *****************
  2391 ;; Defined at:
  2392 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  pb              1    wreg     PTR struct __prbuf
  2395 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2396 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2397 ;;		 -> STR_11(2), STR_10(24), STR_9(2), STR_8(17), 
  2398 ;;		 -> STR_7(2), STR_6(21), STR_3(4), STR_2(4), 
  2399 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2400 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2403 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2404 ;;  tmpval          4    0        struct .
  2405 ;;  val             2   13[BANK0 ] unsigned int 
  2406 ;;  cp              2    0        PTR const unsigned char 
  2407 ;;  len             2    0        unsigned int 
  2408 ;;  c               1   15[BANK0 ] unsigned char 
  2409 ;;  prec            1   12[BANK0 ] char 
  2410 ;;  flag            1   11[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2    6[BANK0 ] int 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       2       0       0       0
  2421 ;;      Locals:         0       6       0       0       0
  2422 ;;      Temps:          0       3       0       0       0
  2423 ;;      Totals:         0      11       0       0       0
  2424 ;;Total ram usage:       11 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		Absolute function
  2429 ;;		___lwdiv
  2430 ;;		___lwmod
  2431 ;;		_putch
  2432 ;; This function is called by:
  2433 ;;		_printf
  2434 ;;		_sprintf
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           
  2439                           ;psect for function __doprnt
  2440  016E                     __doprnt:
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2444                           ;__doprnt@pb stored from wreg
  2445  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2446  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0170  00B0               	movwf	__doprnt@pb
  2448  0171                     l2274:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2451  0171  2A8D               	goto	l2336
  2452  0172                     l2276:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2455  0172  3025               	movlw	37
  2456  0173  062F               	xorwf	__doprnt@c,w
  2457  0174  1903               	btfsc	3,2
  2458  0175  2977               	goto	u1851
  2459  0176  2978               	goto	u1850
  2460  0177                     u1851:
  2461  0177  299E               	goto	l2286
  2462  0178                     u1850:
  2463  0178                     l2278:
  2464  0178  0A30               	incf	__doprnt@pb,w
  2465  0179  0084               	movwf	4
  2466  017A  1383               	bcf	3,7	;select IRP bank0
  2467  017B  0800               	movf	0,w
  2468  017C  1903               	btfsc	3,2
  2469  017D  297F               	goto	u1861
  2470  017E  2980               	goto	u1860
  2471  017F                     u1861:
  2472  017F  298F               	goto	l2282
  2473  0180                     u1860:
  2474  0180                     l2280:
  2475  0180  082F               	movf	__doprnt@c,w
  2476  0181  00A8               	movwf	??__doprnt
  2477  0182  0828               	movf	??__doprnt,w
  2478  0183  00F2               	movwf	putch@data
  2479  0184  0A30               	incf	__doprnt@pb,w
  2480  0185  0084               	movwf	4
  2481  0186  0800               	movf	0,w
  2482  0187  120A  118A  2024  120A  118A  	fcall	fptable
  2483  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2484  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2485  018E  2971               	goto	l2274
  2486  018F                     l2282:
  2487  018F  082F               	movf	__doprnt@c,w
  2488  0190  00A8               	movwf	??__doprnt
  2489  0191  0830               	movf	__doprnt@pb,w
  2490  0192  0084               	movwf	4
  2491  0193  0800               	movf	0,w
  2492  0194  0084               	movwf	4
  2493  0195  0828               	movf	??__doprnt,w
  2494  0196  0080               	movwf	0
  2495  0197                     l2284:
  2496  0197  3001               	movlw	1
  2497  0198  00A8               	movwf	??__doprnt
  2498  0199  0830               	movf	__doprnt@pb,w
  2499  019A  0084               	movwf	4
  2500  019B  0828               	movf	??__doprnt,w
  2501  019C  0780               	addwf	0,f
  2502  019D  2971               	goto	l2274
  2503  019E                     l2286:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2506  019E  01AB               	clrf	__doprnt@flag
  2507  019F                     l2290:	
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2509                           
  2510  019F  3001               	movlw	1
  2511  01A0  07A6               	addwf	__doprnt@f,f
  2512  01A1  30FF               	movlw	-1
  2513  01A2  0726               	addwf	__doprnt@f,w
  2514  01A3  0084               	movwf	4
  2515  01A4  120A  118A  240A  120A  118A  	fcall	stringdir
  2516  01A9  00AF               	movwf	__doprnt@c
  2517  01AA  00A8               	movwf	??__doprnt
  2518  01AB  01A9               	clrf	??__doprnt+1
  2519                           
  2520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2521                           ; Switch size 1, requested type "simple"
  2522                           ; Number of cases is 1, Range of values is 0 to 0
  2523                           ; switch strategies available:
  2524                           ; Name         Instructions Cycles
  2525                           ; simple_byte            4     3 (average)
  2526                           ; direct_byte           11     8 (fixed)
  2527                           ; jumptable            260     6 (fixed)
  2528                           ;	Chosen strategy is simple_byte
  2529  01AC  0829               	movf	??__doprnt+1,w
  2530  01AD  3A00               	xorlw	0	; case 0
  2531  01AE  1903               	skipnz
  2532  01AF  29B1               	goto	l2686
  2533  01B0  2A8D               	goto	l2336
  2534  01B1                     l2686:
  2535                           
  2536                           ; Switch size 1, requested type "simple"
  2537                           ; Number of cases is 3, Range of values is 0 to 105
  2538                           ; switch strategies available:
  2539                           ; Name         Instructions Cycles
  2540                           ; simple_byte           10     6 (average)
  2541                           ; jumptable            260     6 (fixed)
  2542                           ;	Chosen strategy is simple_byte
  2543  01B1  0828               	movf	??__doprnt,w
  2544  01B2  3A00               	xorlw	0	; case 0
  2545  01B3  1903               	skipnz
  2546  01B4  2AA1               	goto	l2338
  2547  01B5  3A64               	xorlw	100	; case 100
  2548  01B6  1903               	skipnz
  2549  01B7  29BC               	goto	l2292
  2550  01B8  3A0D               	xorlw	13	; case 105
  2551  01B9  1903               	skipnz
  2552  01BA  29BC               	goto	l2292
  2553  01BB  2A8D               	goto	l2336
  2554  01BC                     l2292:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2557  01BC  0827               	movf	__doprnt@ap,w
  2558  01BD  0084               	movwf	4
  2559  01BE  1383               	bcf	3,7	;select IRP bank0
  2560  01BF  0800               	movf	0,w
  2561  01C0  00A8               	movwf	??__doprnt
  2562  01C1  3002               	movlw	2
  2563  01C2  0780               	addwf	0,f
  2564  01C3  0828               	movf	??__doprnt,w
  2565  01C4  0084               	movwf	4
  2566  01C5  0800               	movf	0,w
  2567  01C6  00AD               	movwf	__doprnt@val
  2568  01C7  0A84               	incf	4,f
  2569  01C8  0800               	movf	0,w
  2570  01C9  00AE               	movwf	__doprnt@val+1
  2571  01CA                     l2294:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2574  01CA  1FAE               	btfss	__doprnt@val+1,7
  2575  01CB  29CD               	goto	u1871
  2576  01CC  29CE               	goto	u1870
  2577  01CD                     u1871:
  2578  01CD  29D7               	goto	l2300
  2579  01CE                     u1870:
  2580  01CE                     l2296:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2583  01CE  3003               	movlw	3
  2584  01CF  00A8               	movwf	??__doprnt
  2585  01D0  0828               	movf	??__doprnt,w
  2586  01D1  04AB               	iorwf	__doprnt@flag,f
  2587  01D2                     l2298:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2590  01D2  09AD               	comf	__doprnt@val,f
  2591  01D3  09AE               	comf	__doprnt@val+1,f
  2592  01D4  0AAD               	incf	__doprnt@val,f
  2593  01D5  1903               	skipnz
  2594  01D6  0AAE               	incf	__doprnt@val+1,f
  2595  01D7                     l2300:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2598  01D7  01AF               	clrf	__doprnt@c
  2599  01D8  0AAF               	incf	__doprnt@c,f
  2600  01D9                     l2306:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2603  01D9  082F               	movf	__doprnt@c,w
  2604  01DA  00A8               	movwf	??__doprnt
  2605  01DB  0728               	addwf	??__doprnt,w
  2606  01DC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2607  01DD  0084               	movwf	4
  2608  01DE  120A  118A  240A  120A  118A  	fcall	stringdir
  2609  01E3  00A9               	movwf	??__doprnt+1
  2610  01E4  120A  118A  240A  120A  118A  	fcall	stringdir
  2611  01E9  00AA               	movwf	??__doprnt+2
  2612  01EA  082A               	movf	??__doprnt+2,w
  2613  01EB  022E               	subwf	__doprnt@val+1,w
  2614  01EC  1D03               	skipz
  2615  01ED  29F0               	goto	u1885
  2616  01EE  0829               	movf	??__doprnt+1,w
  2617  01EF  022D               	subwf	__doprnt@val,w
  2618  01F0                     u1885:
  2619  01F0  1803               	skipnc
  2620  01F1  29F3               	goto	u1881
  2621  01F2  29F4               	goto	u1880
  2622  01F3                     u1881:
  2623  01F3  29F5               	goto	l2310
  2624  01F4                     u1880:
  2625  01F4  29FF               	goto	l2312
  2626  01F5                     l2310:
  2627  01F5  3001               	movlw	1
  2628  01F6  00A8               	movwf	??__doprnt
  2629  01F7  0828               	movf	??__doprnt,w
  2630  01F8  07AF               	addwf	__doprnt@c,f
  2631  01F9  3005               	movlw	5
  2632  01FA  062F               	xorwf	__doprnt@c,w
  2633  01FB  1D03               	btfss	3,2
  2634  01FC  29FE               	goto	u1891
  2635  01FD  29FF               	goto	u1890
  2636  01FE                     u1891:
  2637  01FE  29D9               	goto	l2306
  2638  01FF                     u1890:
  2639  01FF                     l2312:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2642  01FF  082B               	movf	__doprnt@flag,w
  2643  0200  3903               	andlw	3
  2644  0201  1903               	btfsc	3,2
  2645  0202  2A04               	goto	u1901
  2646  0203  2A05               	goto	u1900
  2647  0204                     u1901:
  2648  0204  2A28               	goto	l2322
  2649  0205                     u1900:
  2650  0205                     l2314:
  2651  0205  0A30               	incf	__doprnt@pb,w
  2652  0206  0084               	movwf	4
  2653  0207  1383               	bcf	3,7	;select IRP bank0
  2654  0208  0800               	movf	0,w
  2655  0209  1903               	btfsc	3,2
  2656  020A  2A0C               	goto	u1911
  2657  020B  2A0D               	goto	u1910
  2658  020C                     u1911:
  2659  020C  2A1A               	goto	l2318
  2660  020D                     u1910:
  2661  020D                     l2316:
  2662  020D  302D               	movlw	45
  2663  020E  00A8               	movwf	??__doprnt
  2664  020F  0828               	movf	??__doprnt,w
  2665  0210  00F2               	movwf	putch@data
  2666  0211  0A30               	incf	__doprnt@pb,w
  2667  0212  0084               	movwf	4
  2668  0213  0800               	movf	0,w
  2669  0214  120A  118A  2024  120A  118A  	fcall	fptable
  2670  0219  2A28               	goto	l2322
  2671  021A                     l2318:
  2672  021A  302D               	movlw	45
  2673  021B  00A8               	movwf	??__doprnt
  2674  021C  0830               	movf	__doprnt@pb,w
  2675  021D  0084               	movwf	4
  2676  021E  0800               	movf	0,w
  2677  021F  0084               	movwf	4
  2678  0220  0828               	movf	??__doprnt,w
  2679  0221  0080               	movwf	0
  2680  0222                     l2320:
  2681  0222  3001               	movlw	1
  2682  0223  00A8               	movwf	??__doprnt
  2683  0224  0830               	movf	__doprnt@pb,w
  2684  0225  0084               	movwf	4
  2685  0226  0828               	movf	??__doprnt,w
  2686  0227  0780               	addwf	0,f
  2687  0228                     l2322:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2690  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2692  022A  082F               	movf	__doprnt@c,w
  2693  022B  00A8               	movwf	??__doprnt
  2694  022C  0828               	movf	??__doprnt,w
  2695  022D  00AC               	movwf	__doprnt@prec
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2698  022E  2A82               	goto	l2334
  2699  022F                     l2324:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2702  022F  300A               	movlw	10
  2703  0230  00A0               	movwf	___lwmod@divisor
  2704  0231  3000               	movlw	0
  2705  0232  00A1               	movwf	___lwmod@divisor+1
  2706  0233  082C               	movf	__doprnt@prec,w
  2707  0234  00A8               	movwf	??__doprnt
  2708  0235  0728               	addwf	??__doprnt,w
  2709  0236  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2710  0237  0084               	movwf	4
  2711  0238  120A  118A  240A  120A  118A  	fcall	stringdir
  2712  023D  00F2               	movwf	___lwdiv@divisor
  2713  023E  120A  118A  240A  120A  118A  	fcall	stringdir
  2714  0243  00F3               	movwf	___lwdiv@divisor+1
  2715  0244  082E               	movf	__doprnt@val+1,w
  2716  0245  00F5               	movwf	___lwdiv@dividend+1
  2717  0246  082D               	movf	__doprnt@val,w
  2718  0247  00F4               	movwf	___lwdiv@dividend
  2719  0248  120A  118A  2752  120A  118A  	fcall	___lwdiv
  2720  024D  0873               	movf	?___lwdiv+1,w
  2721  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2722  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0250  00A3               	movwf	___lwmod@dividend+1
  2724  0251  0872               	movf	?___lwdiv,w
  2725  0252  00A2               	movwf	___lwmod@dividend
  2726  0253  120A  118A  2796  120A  118A  	fcall	___lwmod
  2727  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2729  025A  0820               	movf	?___lwmod,w
  2730  025B  3E30               	addlw	48
  2731  025C  00A9               	movwf	??__doprnt+1
  2732  025D  0829               	movf	??__doprnt+1,w
  2733  025E  00AF               	movwf	__doprnt@c
  2734  025F                     l2326:
  2735  025F  0A30               	incf	__doprnt@pb,w
  2736  0260  0084               	movwf	4
  2737  0261  1383               	bcf	3,7	;select IRP bank0
  2738  0262  0800               	movf	0,w
  2739  0263  1903               	btfsc	3,2
  2740  0264  2A66               	goto	u1921
  2741  0265  2A67               	goto	u1920
  2742  0266                     u1921:
  2743  0266  2A74               	goto	l2330
  2744  0267                     u1920:
  2745  0267                     l2328:
  2746  0267  082F               	movf	__doprnt@c,w
  2747  0268  00A8               	movwf	??__doprnt
  2748  0269  0828               	movf	??__doprnt,w
  2749  026A  00F2               	movwf	putch@data
  2750  026B  0A30               	incf	__doprnt@pb,w
  2751  026C  0084               	movwf	4
  2752  026D  0800               	movf	0,w
  2753  026E  120A  118A  2024  120A  118A  	fcall	fptable
  2754  0273  2A82               	goto	l2334
  2755  0274                     l2330:
  2756  0274  082F               	movf	__doprnt@c,w
  2757  0275  00A8               	movwf	??__doprnt
  2758  0276  0830               	movf	__doprnt@pb,w
  2759  0277  0084               	movwf	4
  2760  0278  0800               	movf	0,w
  2761  0279  0084               	movwf	4
  2762  027A  0828               	movf	??__doprnt,w
  2763  027B  0080               	movwf	0
  2764  027C                     l2332:
  2765  027C  3001               	movlw	1
  2766  027D  00A8               	movwf	??__doprnt
  2767  027E  0830               	movf	__doprnt@pb,w
  2768  027F  0084               	movwf	4
  2769  0280  0828               	movf	??__doprnt,w
  2770  0281  0780               	addwf	0,f
  2771  0282                     l2334:
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2774  0282  30FF               	movlw	255
  2775  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0285  00A8               	movwf	??__doprnt
  2778  0286  0828               	movf	??__doprnt,w
  2779  0287  07AC               	addwf	__doprnt@prec,f
  2780  0288  0A2C               	incf	__doprnt@prec,w
  2781  0289  1D03               	btfss	3,2
  2782  028A  2A8C               	goto	u1931
  2783  028B  2A8D               	goto	u1930
  2784  028C                     u1931:
  2785  028C  2A2F               	goto	l2324
  2786  028D                     u1930:
  2787  028D                     l2336:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2790  028D  3001               	movlw	1
  2791  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2792  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0290  07A6               	addwf	__doprnt@f,f
  2794  0291  30FF               	movlw	-1
  2795  0292  0726               	addwf	__doprnt@f,w
  2796  0293  0084               	movwf	4
  2797  0294  120A  118A  240A  120A  118A  	fcall	stringdir
  2798  0299  00A8               	movwf	??__doprnt
  2799  029A  0828               	movf	??__doprnt,w
  2800  029B  00AF               	movwf	__doprnt@c
  2801  029C  082F               	movf	__doprnt@c,w
  2802  029D  1D03               	btfss	3,2
  2803  029E  2AA0               	goto	u1941
  2804  029F  2AA1               	goto	u1940
  2805  02A0                     u1941:
  2806  02A0  2972               	goto	l2276
  2807  02A1                     u1940:
  2808  02A1                     l2338:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2811  02A1  01A6               	clrf	?__doprnt
  2812  02A2  01A7               	clrf	?__doprnt+1
  2813  02A3                     l837:
  2814  02A3  0008               	return
  2815  02A4                     __end_of__doprnt:
  2816                           
  2817                           	psect	text8
  2818  0F29                     __ptext8:	
  2819 ;; *************** function _putch *****************
  2820 ;; Defined at:
  2821 ;;		line 249 in file "main_master.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  data            1    2[COMMON] unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         1       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0
  2838 ;;      Totals:         1       0       0       0       0
  2839 ;;Total ram usage:        1 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_printf
  2846 ;;		__doprnt
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _putch
  2852  0F29                     _putch:
  2853  0F29                     l2104:	
  2854                           ;incstack = 0
  2855                           ; Regs used in _putch: [wreg]
  2856                           
  2857  0F29                     l143:
  2858  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0F2B  1E0C               	btfss	12,4	;volatile
  2861  0F2C  2F2E               	goto	u1411
  2862  0F2D  2F2F               	goto	u1410
  2863  0F2E                     u1411:
  2864  0F2E  2F29               	goto	l143
  2865  0F2F                     u1410:
  2866  0F2F                     l2106:
  2867  0F2F  0872               	movf	putch@data,w
  2868  0F30  0099               	movwf	25	;volatile
  2869  0F31                     l146:
  2870  0F31  0008               	return
  2871  0F32                     __end_of_putch:
  2872                           
  2873                           	psect	text9
  2874  0796                     __ptext9:	
  2875 ;; *************** function ___lwmod *****************
  2876 ;; Defined at:
  2877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  divisor         2    0[BANK0 ] unsigned int 
  2880 ;;  dividend        2    2[BANK0 ] unsigned int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  counter         1    5[BANK0 ] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2    0[BANK0 ] unsigned int 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       4       0       0       0
  2893 ;;      Locals:         0       1       0       0       0
  2894 ;;      Temps:          0       1       0       0       0
  2895 ;;      Totals:         0       6       0       0       0
  2896 ;;Total ram usage:        6 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		__doprnt
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function ___lwmod
  2908  0796                     ___lwmod:
  2909  0796                     l2136:	
  2910                           ;incstack = 0
  2911                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2912                           
  2913  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0798  0820               	movf	___lwmod@divisor,w
  2916  0799  0421               	iorwf	___lwmod@divisor+1,w
  2917  079A  1903               	btfsc	3,2
  2918  079B  2F9D               	goto	u1491
  2919  079C  2F9E               	goto	u1490
  2920  079D                     u1491:
  2921  079D  2FCD               	goto	l2154
  2922  079E                     u1490:
  2923  079E                     l2138:
  2924  079E  01A5               	clrf	___lwmod@counter
  2925  079F  0AA5               	incf	___lwmod@counter,f
  2926  07A0  2FAC               	goto	l2144
  2927  07A1                     l2140:
  2928  07A1  3001               	movlw	1
  2929  07A2                     u1505:
  2930  07A2  1003               	clrc
  2931  07A3  0DA0               	rlf	___lwmod@divisor,f
  2932  07A4  0DA1               	rlf	___lwmod@divisor+1,f
  2933  07A5  3EFF               	addlw	-1
  2934  07A6  1D03               	skipz
  2935  07A7  2FA2               	goto	u1505
  2936  07A8                     l2142:
  2937  07A8  3001               	movlw	1
  2938  07A9  00A4               	movwf	??___lwmod
  2939  07AA  0824               	movf	??___lwmod,w
  2940  07AB  07A5               	addwf	___lwmod@counter,f
  2941  07AC                     l2144:
  2942  07AC  1FA1               	btfss	___lwmod@divisor+1,7
  2943  07AD  2FAF               	goto	u1511
  2944  07AE  2FB0               	goto	u1510
  2945  07AF                     u1511:
  2946  07AF  2FA1               	goto	l2140
  2947  07B0                     u1510:
  2948  07B0                     l2146:
  2949  07B0  0821               	movf	___lwmod@divisor+1,w
  2950  07B1  0223               	subwf	___lwmod@dividend+1,w
  2951  07B2  1D03               	skipz
  2952  07B3  2FB6               	goto	u1525
  2953  07B4  0820               	movf	___lwmod@divisor,w
  2954  07B5  0222               	subwf	___lwmod@dividend,w
  2955  07B6                     u1525:
  2956  07B6  1C03               	skipc
  2957  07B7  2FB9               	goto	u1521
  2958  07B8  2FBA               	goto	u1520
  2959  07B9                     u1521:
  2960  07B9  2FC0               	goto	l2150
  2961  07BA                     u1520:
  2962  07BA                     l2148:
  2963  07BA  0820               	movf	___lwmod@divisor,w
  2964  07BB  02A2               	subwf	___lwmod@dividend,f
  2965  07BC  0821               	movf	___lwmod@divisor+1,w
  2966  07BD  1C03               	skipc
  2967  07BE  03A3               	decf	___lwmod@dividend+1,f
  2968  07BF  02A3               	subwf	___lwmod@dividend+1,f
  2969  07C0                     l2150:
  2970  07C0  3001               	movlw	1
  2971  07C1                     u1535:
  2972  07C1  1003               	clrc
  2973  07C2  0CA1               	rrf	___lwmod@divisor+1,f
  2974  07C3  0CA0               	rrf	___lwmod@divisor,f
  2975  07C4  3EFF               	addlw	-1
  2976  07C5  1D03               	skipz
  2977  07C6  2FC1               	goto	u1535
  2978  07C7                     l2152:
  2979  07C7  3001               	movlw	1
  2980  07C8  02A5               	subwf	___lwmod@counter,f
  2981  07C9  1D03               	btfss	3,2
  2982  07CA  2FCC               	goto	u1541
  2983  07CB  2FCD               	goto	u1540
  2984  07CC                     u1541:
  2985  07CC  2FB0               	goto	l2146
  2986  07CD                     u1540:
  2987  07CD                     l2154:
  2988  07CD  0823               	movf	___lwmod@dividend+1,w
  2989  07CE  00A1               	movwf	?___lwmod+1
  2990  07CF  0822               	movf	___lwmod@dividend,w
  2991  07D0  00A0               	movwf	?___lwmod
  2992  07D1                     l624:
  2993  07D1  0008               	return
  2994  07D2                     __end_of___lwmod:
  2995                           
  2996                           	psect	text10
  2997  0752                     __ptext10:	
  2998 ;; *************** function ___lwdiv *****************
  2999 ;; Defined at:
  3000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  divisor         2    2[COMMON] unsigned int 
  3003 ;;  dividend        2    4[COMMON] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  quotient        2    8[COMMON] unsigned int 
  3006 ;;  counter         1    7[COMMON] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    2[COMMON] unsigned int 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         4       0       0       0       0
  3017 ;;      Locals:         3       0       0       0       0
  3018 ;;      Temps:          1       0       0       0       0
  3019 ;;      Totals:         8       0       0       0       0
  3020 ;;Total ram usage:        8 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		__doprnt
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function ___lwdiv
  3032  0752                     ___lwdiv:
  3033  0752                     l2110:	
  3034                           ;incstack = 0
  3035                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3036                           
  3037  0752  01F8               	clrf	___lwdiv@quotient
  3038  0753  01F9               	clrf	___lwdiv@quotient+1
  3039  0754                     l2112:
  3040  0754  0872               	movf	___lwdiv@divisor,w
  3041  0755  0473               	iorwf	___lwdiv@divisor+1,w
  3042  0756  1903               	btfsc	3,2
  3043  0757  2F59               	goto	u1421
  3044  0758  2F5A               	goto	u1420
  3045  0759                     u1421:
  3046  0759  2F91               	goto	l2132
  3047  075A                     u1420:
  3048  075A                     l2114:
  3049  075A  01F7               	clrf	___lwdiv@counter
  3050  075B  0AF7               	incf	___lwdiv@counter,f
  3051  075C  2F68               	goto	l2120
  3052  075D                     l2116:
  3053  075D  3001               	movlw	1
  3054  075E                     u1435:
  3055  075E  1003               	clrc
  3056  075F  0DF2               	rlf	___lwdiv@divisor,f
  3057  0760  0DF3               	rlf	___lwdiv@divisor+1,f
  3058  0761  3EFF               	addlw	-1
  3059  0762  1D03               	skipz
  3060  0763  2F5E               	goto	u1435
  3061  0764                     l2118:
  3062  0764  3001               	movlw	1
  3063  0765  00F6               	movwf	??___lwdiv
  3064  0766  0876               	movf	??___lwdiv,w
  3065  0767  07F7               	addwf	___lwdiv@counter,f
  3066  0768                     l2120:
  3067  0768  1FF3               	btfss	___lwdiv@divisor+1,7
  3068  0769  2F6B               	goto	u1441
  3069  076A  2F6C               	goto	u1440
  3070  076B                     u1441:
  3071  076B  2F5D               	goto	l2116
  3072  076C                     u1440:
  3073  076C                     l2122:
  3074  076C  3001               	movlw	1
  3075  076D                     u1455:
  3076  076D  1003               	clrc
  3077  076E  0DF8               	rlf	___lwdiv@quotient,f
  3078  076F  0DF9               	rlf	___lwdiv@quotient+1,f
  3079  0770  3EFF               	addlw	-1
  3080  0771  1D03               	skipz
  3081  0772  2F6D               	goto	u1455
  3082  0773  0873               	movf	___lwdiv@divisor+1,w
  3083  0774  0275               	subwf	___lwdiv@dividend+1,w
  3084  0775  1D03               	skipz
  3085  0776  2F79               	goto	u1465
  3086  0777  0872               	movf	___lwdiv@divisor,w
  3087  0778  0274               	subwf	___lwdiv@dividend,w
  3088  0779                     u1465:
  3089  0779  1C03               	skipc
  3090  077A  2F7C               	goto	u1461
  3091  077B  2F7D               	goto	u1460
  3092  077C                     u1461:
  3093  077C  2F84               	goto	l2128
  3094  077D                     u1460:
  3095  077D                     l2124:
  3096  077D  0872               	movf	___lwdiv@divisor,w
  3097  077E  02F4               	subwf	___lwdiv@dividend,f
  3098  077F  0873               	movf	___lwdiv@divisor+1,w
  3099  0780  1C03               	skipc
  3100  0781  03F5               	decf	___lwdiv@dividend+1,f
  3101  0782  02F5               	subwf	___lwdiv@dividend+1,f
  3102  0783                     l2126:
  3103  0783  1478               	bsf	___lwdiv@quotient,0
  3104  0784                     l2128:
  3105  0784  3001               	movlw	1
  3106  0785                     u1475:
  3107  0785  1003               	clrc
  3108  0786  0CF3               	rrf	___lwdiv@divisor+1,f
  3109  0787  0CF2               	rrf	___lwdiv@divisor,f
  3110  0788  3EFF               	addlw	-1
  3111  0789  1D03               	skipz
  3112  078A  2F85               	goto	u1475
  3113  078B                     l2130:
  3114  078B  3001               	movlw	1
  3115  078C  02F7               	subwf	___lwdiv@counter,f
  3116  078D  1D03               	btfss	3,2
  3117  078E  2F90               	goto	u1481
  3118  078F  2F91               	goto	u1480
  3119  0790                     u1481:
  3120  0790  2F6C               	goto	l2122
  3121  0791                     u1480:
  3122  0791                     l2132:
  3123  0791  0879               	movf	___lwdiv@quotient+1,w
  3124  0792  00F3               	movwf	?___lwdiv+1
  3125  0793  0878               	movf	___lwdiv@quotient,w
  3126  0794  00F2               	movwf	?___lwdiv
  3127  0795                     l614:
  3128  0795  0008               	return
  3129  0796                     __end_of___lwdiv:
  3130                           
  3131                           	psect	text11
  3132  0475                     __ptext11:	
  3133 ;; *************** function _division *****************
  3134 ;; Defined at:
  3135 ;;		line 237 in file "main_master.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  valor           1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  valor           1    9[COMMON] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      unsigned char 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0
  3151 ;;      Temps:          0       3       0       0       0
  3152 ;;      Totals:         1       3       0       0       0
  3153 ;;Total ram usage:        4 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    2
  3156 ;; This function calls:
  3157 ;;		___awdiv
  3158 ;;		___awmod
  3159 ;; This function is called by:
  3160 ;;		_Text
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _division
  3166  0475                     _division:
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  3170                           ;division@valor stored from wreg
  3171  0475  00F9               	movwf	division@valor
  3172  0476                     l2358:
  3173  0476  3064               	movlw	100
  3174  0477  00F2               	movwf	___awdiv@divisor
  3175  0478  3000               	movlw	0
  3176  0479  00F3               	movwf	___awdiv@divisor+1
  3177  047A  0879               	movf	division@valor,w
  3178  047B  1283               	bcf	3,5	;RP0=0, select bank0
  3179  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3180  047D  00A4               	movwf	??_division
  3181  047E  01A5               	clrf	??_division+1
  3182  047F  0824               	movf	??_division,w
  3183  0480  00F4               	movwf	___awdiv@dividend
  3184  0481  0825               	movf	??_division+1,w
  3185  0482  00F5               	movwf	___awdiv@dividend+1
  3186  0483  120A  118A  24E0  120A  118A  	fcall	___awdiv
  3187  0488  0872               	movf	?___awdiv,w
  3188  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3189  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3190  048B  00A6               	movwf	??_division+2
  3191  048C  0826               	movf	??_division+2,w
  3192  048D  00C1               	movwf	_centenas
  3193  048E  3064               	movlw	100
  3194  048F  00F2               	movwf	___awmod@divisor
  3195  0490  3000               	movlw	0
  3196  0491  00F3               	movwf	___awmod@divisor+1
  3197  0492  0879               	movf	division@valor,w
  3198  0493  00A4               	movwf	??_division
  3199  0494  01A5               	clrf	??_division+1
  3200  0495  0824               	movf	??_division,w
  3201  0496  00F4               	movwf	___awmod@dividend
  3202  0497  0825               	movf	??_division+1,w
  3203  0498  00F5               	movwf	___awmod@dividend+1
  3204  0499  120A  118A  260E  120A  118A  	fcall	___awmod
  3205  049E  0872               	movf	?___awmod,w
  3206  049F  1283               	bcf	3,5	;RP0=0, select bank0
  3207  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  3208  04A1  00A6               	movwf	??_division+2
  3209  04A2  0826               	movf	??_division+2,w
  3210  04A3  00FA               	movwf	_residuo
  3211  04A4  300A               	movlw	10
  3212  04A5  00F2               	movwf	___awdiv@divisor
  3213  04A6  3000               	movlw	0
  3214  04A7  00F3               	movwf	___awdiv@divisor+1
  3215  04A8  087A               	movf	_residuo,w
  3216  04A9  00A4               	movwf	??_division
  3217  04AA  01A5               	clrf	??_division+1
  3218  04AB  0824               	movf	??_division,w
  3219  04AC  00F4               	movwf	___awdiv@dividend
  3220  04AD  0825               	movf	??_division+1,w
  3221  04AE  00F5               	movwf	___awdiv@dividend+1
  3222  04AF  120A  118A  24E0  120A  118A  	fcall	___awdiv
  3223  04B4  0872               	movf	?___awdiv,w
  3224  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  3225  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  3226  04B7  00A6               	movwf	??_division+2
  3227  04B8  0826               	movf	??_division+2,w
  3228  04B9  00C0               	movwf	_decenas
  3229  04BA  300A               	movlw	10
  3230  04BB  00F2               	movwf	___awmod@divisor
  3231  04BC  3000               	movlw	0
  3232  04BD  00F3               	movwf	___awmod@divisor+1
  3233  04BE  087A               	movf	_residuo,w
  3234  04BF  00A4               	movwf	??_division
  3235  04C0  01A5               	clrf	??_division+1
  3236  04C1  0824               	movf	??_division,w
  3237  04C2  00F4               	movwf	___awmod@dividend
  3238  04C3  0825               	movf	??_division+1,w
  3239  04C4  00F5               	movwf	___awmod@dividend+1
  3240  04C5  120A  118A  260E  120A  118A  	fcall	___awmod
  3241  04CA  0872               	movf	?___awmod,w
  3242  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3243  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3244  04CD  00A6               	movwf	??_division+2
  3245  04CE  0826               	movf	??_division+2,w
  3246  04CF  00BF               	movwf	_unidades
  3247  04D0                     l2360:
  3248  04D0  0841               	movf	_centenas,w
  3249  04D1  3E30               	addlw	48
  3250  04D2  00A4               	movwf	??_division
  3251  04D3  0824               	movf	??_division,w
  3252  04D4  00C1               	movwf	_centenas
  3253  04D5                     l2362:
  3254  04D5  0840               	movf	_decenas,w
  3255  04D6  3E30               	addlw	48
  3256  04D7  00A4               	movwf	??_division
  3257  04D8  0824               	movf	??_division,w
  3258  04D9  00C0               	movwf	_decenas
  3259  04DA                     l2364:
  3260  04DA  083F               	movf	_unidades,w
  3261  04DB  3E30               	addlw	48
  3262  04DC  00A4               	movwf	??_division
  3263  04DD  0824               	movf	??_division,w
  3264  04DE  00BF               	movwf	_unidades
  3265  04DF                     l140:
  3266  04DF  0008               	return
  3267  04E0                     __end_of_division:
  3268                           
  3269                           	psect	text12
  3270  060E                     __ptext12:	
  3271 ;; *************** function ___awmod *****************
  3272 ;; Defined at:
  3273 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  divisor         2    2[COMMON] int 
  3276 ;;  dividend        2    4[COMMON] int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  sign            1    8[COMMON] unsigned char 
  3279 ;;  counter         1    7[COMMON] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2    2[COMMON] int 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3289 ;;      Params:         4       0       0       0       0
  3290 ;;      Locals:         2       0       0       0       0
  3291 ;;      Temps:          1       0       0       0       0
  3292 ;;      Totals:         7       0       0       0       0
  3293 ;;Total ram usage:        7 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_division
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function ___awmod
  3305  060E                     ___awmod:
  3306  060E                     l2236:	
  3307                           ;incstack = 0
  3308                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3309                           
  3310  060E  01F8               	clrf	___awmod@sign
  3311  060F                     l2238:
  3312  060F  1FF5               	btfss	___awmod@dividend+1,7
  3313  0610  2E12               	goto	u1761
  3314  0611  2E13               	goto	u1760
  3315  0612                     u1761:
  3316  0612  2E1A               	goto	l2244
  3317  0613                     u1760:
  3318  0613                     l2240:
  3319  0613  09F4               	comf	___awmod@dividend,f
  3320  0614  09F5               	comf	___awmod@dividend+1,f
  3321  0615  0AF4               	incf	___awmod@dividend,f
  3322  0616  1903               	skipnz
  3323  0617  0AF5               	incf	___awmod@dividend+1,f
  3324  0618                     l2242:
  3325  0618  01F8               	clrf	___awmod@sign
  3326  0619  0AF8               	incf	___awmod@sign,f
  3327  061A                     l2244:
  3328  061A  1FF3               	btfss	___awmod@divisor+1,7
  3329  061B  2E1D               	goto	u1771
  3330  061C  2E1E               	goto	u1770
  3331  061D                     u1771:
  3332  061D  2E23               	goto	l2248
  3333  061E                     u1770:
  3334  061E                     l2246:
  3335  061E  09F2               	comf	___awmod@divisor,f
  3336  061F  09F3               	comf	___awmod@divisor+1,f
  3337  0620  0AF2               	incf	___awmod@divisor,f
  3338  0621  1903               	skipnz
  3339  0622  0AF3               	incf	___awmod@divisor+1,f
  3340  0623                     l2248:
  3341  0623  0872               	movf	___awmod@divisor,w
  3342  0624  0473               	iorwf	___awmod@divisor+1,w
  3343  0625  1903               	btfsc	3,2
  3344  0626  2E28               	goto	u1781
  3345  0627  2E29               	goto	u1780
  3346  0628                     u1781:
  3347  0628  2E58               	goto	l2266
  3348  0629                     u1780:
  3349  0629                     l2250:
  3350  0629  01F7               	clrf	___awmod@counter
  3351  062A  0AF7               	incf	___awmod@counter,f
  3352  062B  2E37               	goto	l2256
  3353  062C                     l2252:
  3354  062C  3001               	movlw	1
  3355  062D                     u1795:
  3356  062D  1003               	clrc
  3357  062E  0DF2               	rlf	___awmod@divisor,f
  3358  062F  0DF3               	rlf	___awmod@divisor+1,f
  3359  0630  3EFF               	addlw	-1
  3360  0631  1D03               	skipz
  3361  0632  2E2D               	goto	u1795
  3362  0633                     l2254:
  3363  0633  3001               	movlw	1
  3364  0634  00F6               	movwf	??___awmod
  3365  0635  0876               	movf	??___awmod,w
  3366  0636  07F7               	addwf	___awmod@counter,f
  3367  0637                     l2256:
  3368  0637  1FF3               	btfss	___awmod@divisor+1,7
  3369  0638  2E3A               	goto	u1801
  3370  0639  2E3B               	goto	u1800
  3371  063A                     u1801:
  3372  063A  2E2C               	goto	l2252
  3373  063B                     u1800:
  3374  063B                     l2258:
  3375  063B  0873               	movf	___awmod@divisor+1,w
  3376  063C  0275               	subwf	___awmod@dividend+1,w
  3377  063D  1D03               	skipz
  3378  063E  2E41               	goto	u1815
  3379  063F  0872               	movf	___awmod@divisor,w
  3380  0640  0274               	subwf	___awmod@dividend,w
  3381  0641                     u1815:
  3382  0641  1C03               	skipc
  3383  0642  2E44               	goto	u1811
  3384  0643  2E45               	goto	u1810
  3385  0644                     u1811:
  3386  0644  2E4B               	goto	l2262
  3387  0645                     u1810:
  3388  0645                     l2260:
  3389  0645  0872               	movf	___awmod@divisor,w
  3390  0646  02F4               	subwf	___awmod@dividend,f
  3391  0647  0873               	movf	___awmod@divisor+1,w
  3392  0648  1C03               	skipc
  3393  0649  03F5               	decf	___awmod@dividend+1,f
  3394  064A  02F5               	subwf	___awmod@dividend+1,f
  3395  064B                     l2262:
  3396  064B  3001               	movlw	1
  3397  064C                     u1825:
  3398  064C  1003               	clrc
  3399  064D  0CF3               	rrf	___awmod@divisor+1,f
  3400  064E  0CF2               	rrf	___awmod@divisor,f
  3401  064F  3EFF               	addlw	-1
  3402  0650  1D03               	skipz
  3403  0651  2E4C               	goto	u1825
  3404  0652                     l2264:
  3405  0652  3001               	movlw	1
  3406  0653  02F7               	subwf	___awmod@counter,f
  3407  0654  1D03               	btfss	3,2
  3408  0655  2E57               	goto	u1831
  3409  0656  2E58               	goto	u1830
  3410  0657                     u1831:
  3411  0657  2E3B               	goto	l2258
  3412  0658                     u1830:
  3413  0658                     l2266:
  3414  0658  0878               	movf	___awmod@sign,w
  3415  0659  1903               	btfsc	3,2
  3416  065A  2E5C               	goto	u1841
  3417  065B  2E5D               	goto	u1840
  3418  065C                     u1841:
  3419  065C  2E62               	goto	l2270
  3420  065D                     u1840:
  3421  065D                     l2268:
  3422  065D  09F4               	comf	___awmod@dividend,f
  3423  065E  09F5               	comf	___awmod@dividend+1,f
  3424  065F  0AF4               	incf	___awmod@dividend,f
  3425  0660  1903               	skipnz
  3426  0661  0AF5               	incf	___awmod@dividend+1,f
  3427  0662                     l2270:
  3428  0662  0875               	movf	___awmod@dividend+1,w
  3429  0663  00F3               	movwf	?___awmod+1
  3430  0664  0874               	movf	___awmod@dividend,w
  3431  0665  00F2               	movwf	?___awmod
  3432  0666                     l508:
  3433  0666  0008               	return
  3434  0667                     __end_of___awmod:
  3435                           
  3436                           	psect	text13
  3437  04E0                     __ptext13:	
  3438 ;; *************** function ___awdiv *****************
  3439 ;; Defined at:
  3440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  divisor         2    2[COMMON] int 
  3443 ;;  dividend        2    4[COMMON] int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  quotient        2    2[BANK0 ] int 
  3446 ;;  sign            1    1[BANK0 ] unsigned char 
  3447 ;;  counter         1    0[BANK0 ] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2    2[COMMON] int 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         4       0       0       0       0
  3458 ;;      Locals:         0       4       0       0       0
  3459 ;;      Temps:          1       0       0       0       0
  3460 ;;      Totals:         5       4       0       0       0
  3461 ;;Total ram usage:        9 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_division
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function ___awdiv
  3473  04E0                     ___awdiv:
  3474  04E0                     l2192:	
  3475                           ;incstack = 0
  3476                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3477                           
  3478  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3479  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3480  04E2  01A1               	clrf	___awdiv@sign
  3481  04E3                     l2194:
  3482  04E3  1FF3               	btfss	___awdiv@divisor+1,7
  3483  04E4  2CE6               	goto	u1661
  3484  04E5  2CE7               	goto	u1660
  3485  04E6                     u1661:
  3486  04E6  2CEE               	goto	l2200
  3487  04E7                     u1660:
  3488  04E7                     l2196:
  3489  04E7  09F2               	comf	___awdiv@divisor,f
  3490  04E8  09F3               	comf	___awdiv@divisor+1,f
  3491  04E9  0AF2               	incf	___awdiv@divisor,f
  3492  04EA  1903               	skipnz
  3493  04EB  0AF3               	incf	___awdiv@divisor+1,f
  3494  04EC                     l2198:
  3495  04EC  01A1               	clrf	___awdiv@sign
  3496  04ED  0AA1               	incf	___awdiv@sign,f
  3497  04EE                     l2200:
  3498  04EE  1FF5               	btfss	___awdiv@dividend+1,7
  3499  04EF  2CF1               	goto	u1671
  3500  04F0  2CF2               	goto	u1670
  3501  04F1                     u1671:
  3502  04F1  2CFB               	goto	l2206
  3503  04F2                     u1670:
  3504  04F2                     l2202:
  3505  04F2  09F4               	comf	___awdiv@dividend,f
  3506  04F3  09F5               	comf	___awdiv@dividend+1,f
  3507  04F4  0AF4               	incf	___awdiv@dividend,f
  3508  04F5  1903               	skipnz
  3509  04F6  0AF5               	incf	___awdiv@dividend+1,f
  3510  04F7                     l2204:
  3511  04F7  3001               	movlw	1
  3512  04F8  00F6               	movwf	??___awdiv
  3513  04F9  0876               	movf	??___awdiv,w
  3514  04FA  06A1               	xorwf	___awdiv@sign,f
  3515  04FB                     l2206:
  3516  04FB  01A2               	clrf	___awdiv@quotient
  3517  04FC  01A3               	clrf	___awdiv@quotient+1
  3518  04FD                     l2208:
  3519  04FD  0872               	movf	___awdiv@divisor,w
  3520  04FE  0473               	iorwf	___awdiv@divisor+1,w
  3521  04FF  1903               	btfsc	3,2
  3522  0500  2D02               	goto	u1681
  3523  0501  2D03               	goto	u1680
  3524  0502                     u1681:
  3525  0502  2D3A               	goto	l2228
  3526  0503                     u1680:
  3527  0503                     l2210:
  3528  0503  01A0               	clrf	___awdiv@counter
  3529  0504  0AA0               	incf	___awdiv@counter,f
  3530  0505  2D11               	goto	l2216
  3531  0506                     l2212:
  3532  0506  3001               	movlw	1
  3533  0507                     u1695:
  3534  0507  1003               	clrc
  3535  0508  0DF2               	rlf	___awdiv@divisor,f
  3536  0509  0DF3               	rlf	___awdiv@divisor+1,f
  3537  050A  3EFF               	addlw	-1
  3538  050B  1D03               	skipz
  3539  050C  2D07               	goto	u1695
  3540  050D                     l2214:
  3541  050D  3001               	movlw	1
  3542  050E  00F6               	movwf	??___awdiv
  3543  050F  0876               	movf	??___awdiv,w
  3544  0510  07A0               	addwf	___awdiv@counter,f
  3545  0511                     l2216:
  3546  0511  1FF3               	btfss	___awdiv@divisor+1,7
  3547  0512  2D14               	goto	u1701
  3548  0513  2D15               	goto	u1700
  3549  0514                     u1701:
  3550  0514  2D06               	goto	l2212
  3551  0515                     u1700:
  3552  0515                     l2218:
  3553  0515  3001               	movlw	1
  3554  0516                     u1715:
  3555  0516  1003               	clrc
  3556  0517  0DA2               	rlf	___awdiv@quotient,f
  3557  0518  0DA3               	rlf	___awdiv@quotient+1,f
  3558  0519  3EFF               	addlw	-1
  3559  051A  1D03               	skipz
  3560  051B  2D16               	goto	u1715
  3561  051C  0873               	movf	___awdiv@divisor+1,w
  3562  051D  0275               	subwf	___awdiv@dividend+1,w
  3563  051E  1D03               	skipz
  3564  051F  2D22               	goto	u1725
  3565  0520  0872               	movf	___awdiv@divisor,w
  3566  0521  0274               	subwf	___awdiv@dividend,w
  3567  0522                     u1725:
  3568  0522  1C03               	skipc
  3569  0523  2D25               	goto	u1721
  3570  0524  2D26               	goto	u1720
  3571  0525                     u1721:
  3572  0525  2D2D               	goto	l2224
  3573  0526                     u1720:
  3574  0526                     l2220:
  3575  0526  0872               	movf	___awdiv@divisor,w
  3576  0527  02F4               	subwf	___awdiv@dividend,f
  3577  0528  0873               	movf	___awdiv@divisor+1,w
  3578  0529  1C03               	skipc
  3579  052A  03F5               	decf	___awdiv@dividend+1,f
  3580  052B  02F5               	subwf	___awdiv@dividend+1,f
  3581  052C                     l2222:
  3582  052C  1422               	bsf	___awdiv@quotient,0
  3583  052D                     l2224:
  3584  052D  3001               	movlw	1
  3585  052E                     u1735:
  3586  052E  1003               	clrc
  3587  052F  0CF3               	rrf	___awdiv@divisor+1,f
  3588  0530  0CF2               	rrf	___awdiv@divisor,f
  3589  0531  3EFF               	addlw	-1
  3590  0532  1D03               	skipz
  3591  0533  2D2E               	goto	u1735
  3592  0534                     l2226:
  3593  0534  3001               	movlw	1
  3594  0535  02A0               	subwf	___awdiv@counter,f
  3595  0536  1D03               	btfss	3,2
  3596  0537  2D39               	goto	u1741
  3597  0538  2D3A               	goto	u1740
  3598  0539                     u1741:
  3599  0539  2D15               	goto	l2218
  3600  053A                     u1740:
  3601  053A                     l2228:
  3602  053A  0821               	movf	___awdiv@sign,w
  3603  053B  1903               	btfsc	3,2
  3604  053C  2D3E               	goto	u1751
  3605  053D  2D3F               	goto	u1750
  3606  053E                     u1751:
  3607  053E  2D44               	goto	l2232
  3608  053F                     u1750:
  3609  053F                     l2230:
  3610  053F  09A2               	comf	___awdiv@quotient,f
  3611  0540  09A3               	comf	___awdiv@quotient+1,f
  3612  0541  0AA2               	incf	___awdiv@quotient,f
  3613  0542  1903               	skipnz
  3614  0543  0AA3               	incf	___awdiv@quotient+1,f
  3615  0544                     l2232:
  3616  0544  0823               	movf	___awdiv@quotient+1,w
  3617  0545  00F3               	movwf	?___awdiv+1
  3618  0546  0822               	movf	___awdiv@quotient,w
  3619  0547  00F2               	movwf	?___awdiv
  3620  0548                     l495:
  3621  0548  0008               	return
  3622  0549                     __end_of___awdiv:
  3623                           
  3624                           	psect	text14
  3625  070C                     __ptext14:	
  3626 ;; *************** function _Lcd_Write_String *****************
  3627 ;; Defined at:
  3628 ;;		line 98 in file "LCD.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  a               2    7[COMMON] PTR unsigned char 
  3631 ;;		 -> STR_5(4), STR_4(3), main@buffer2(20), main@buffer(20), 
  3632 ;;		 -> STR_1(18), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  i               2    3[BANK0 ] int 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         2       0       0       0       0
  3645 ;;      Locals:         0       2       0       0       0
  3646 ;;      Temps:          0       3       0       0       0
  3647 ;;      Totals:         2       5       0       0       0
  3648 ;;Total ram usage:        7 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    3
  3651 ;; This function calls:
  3652 ;;		_Lcd_Write_Char
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _Lcd_Write_String
  3660  070C                     _Lcd_Write_String:
  3661  070C                     l2494:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3664                           
  3665                           
  3666                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3667  070C  1283               	bcf	3,5	;RP0=0, select bank0
  3668  070D  1303               	bcf	3,6	;RP1=0, select bank0
  3669  070E  01A3               	clrf	Lcd_Write_String@i
  3670  070F  01A4               	clrf	Lcd_Write_String@i+1
  3671  0710  2F35               	goto	l2500
  3672  0711                     l2496:
  3673                           
  3674                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3675  0711  0823               	movf	Lcd_Write_String@i,w
  3676  0712  0777               	addwf	Lcd_Write_String@a,w
  3677  0713  00A1               	movwf	??_Lcd_Write_String+1
  3678  0714  0878               	movf	Lcd_Write_String@a+1,w
  3679  0715  00A0               	movwf	??_Lcd_Write_String
  3680  0716  1803               	skipnc
  3681  0717  0AA0               	incf	??_Lcd_Write_String,f
  3682  0718  1FA3               	btfss	Lcd_Write_String@i,7
  3683  0719  2F1B               	goto	u2030
  3684  071A  03A0               	decf	??_Lcd_Write_String,f
  3685  071B                     u2030:
  3686  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3687  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3688  071D  0820               	movf	??_Lcd_Write_String,w
  3689  071E  00A2               	movwf	??_Lcd_Write_String+2
  3690  071F  0822               	movf	??_Lcd_Write_String+2,w
  3691  0720  00FF               	movwf	btemp+1
  3692  0721  0821               	movf	??_Lcd_Write_String+1,w
  3693  0722  0084               	movwf	4
  3694  0723  120A  118A  2400  120A  118A  	fcall	stringtab
  3695  0728  120A  118A  23A1  120A  118A  	fcall	_Lcd_Write_Char
  3696  072D                     l2498:
  3697  072D  3001               	movlw	1
  3698  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3699  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0730  07A3               	addwf	Lcd_Write_String@i,f
  3701  0731  1803               	skipnc
  3702  0732  0AA4               	incf	Lcd_Write_String@i+1,f
  3703  0733  3000               	movlw	0
  3704  0734  07A4               	addwf	Lcd_Write_String@i+1,f
  3705  0735                     l2500:
  3706  0735  0823               	movf	Lcd_Write_String@i,w
  3707  0736  0777               	addwf	Lcd_Write_String@a,w
  3708  0737  00A1               	movwf	??_Lcd_Write_String+1
  3709  0738  0878               	movf	Lcd_Write_String@a+1,w
  3710  0739  00A0               	movwf	??_Lcd_Write_String
  3711  073A  1803               	skipnc
  3712  073B  0AA0               	incf	??_Lcd_Write_String,f
  3713  073C  1FA3               	btfss	Lcd_Write_String@i,7
  3714  073D  2F3F               	goto	u2040
  3715  073E  03A0               	decf	??_Lcd_Write_String,f
  3716  073F                     u2040:
  3717  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0740  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0741  0820               	movf	??_Lcd_Write_String,w
  3720  0742  00A2               	movwf	??_Lcd_Write_String+2
  3721  0743  0822               	movf	??_Lcd_Write_String+2,w
  3722  0744  00FF               	movwf	btemp+1
  3723  0745  0821               	movf	??_Lcd_Write_String+1,w
  3724  0746  0084               	movwf	4
  3725  0747  120A  118A  2400  120A  118A  	fcall	stringtab
  3726  074C  3A00               	xorlw	0
  3727  074D  1D03               	skipz
  3728  074E  2F50               	goto	u2051
  3729  074F  2F51               	goto	u2050
  3730  0750                     u2051:
  3731  0750  2F11               	goto	l2496
  3732  0751                     u2050:
  3733  0751                     l250:
  3734  0751  0008               	return
  3735  0752                     __end_of_Lcd_Write_String:
  3736                           
  3737                           	psect	text15
  3738  03A1                     __ptext15:	
  3739 ;; *************** function _Lcd_Write_Char *****************
  3740 ;; Defined at:
  3741 ;;		line 83 in file "LCD.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  a               1    wreg     unsigned char 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  a               1    6[COMMON] unsigned char 
  3746 ;;  y               1    5[COMMON] unsigned char 
  3747 ;;  temp            1    4[COMMON] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         3       0       0       0       0
  3759 ;;      Temps:          1       0       0       0       0
  3760 ;;      Totals:         4       0       0       0       0
  3761 ;;Total ram usage:        4 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    2
  3764 ;; This function calls:
  3765 ;;		_Lcd_Port
  3766 ;; This function is called by:
  3767 ;;		_Lcd_Write_String
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           
  3772                           ;psect for function _Lcd_Write_Char
  3773  03A1                     _Lcd_Write_Char:
  3774                           
  3775                           ;incstack = 0
  3776                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3777                           ;Lcd_Write_Char@a stored from wreg
  3778  03A1  00F6               	movwf	Lcd_Write_Char@a
  3779  03A2                     l2390:
  3780                           
  3781                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3782  03A2  0876               	movf	Lcd_Write_Char@a,w
  3783  03A3  390F               	andlw	15
  3784  03A4  00F3               	movwf	??_Lcd_Write_Char
  3785  03A5  0873               	movf	??_Lcd_Write_Char,w
  3786  03A6  00F4               	movwf	Lcd_Write_Char@temp
  3787                           
  3788                           ;LCD.c: 86:     y = a & 0xF0;
  3789  03A7  0876               	movf	Lcd_Write_Char@a,w
  3790  03A8  39F0               	andlw	240
  3791  03A9  00F3               	movwf	??_Lcd_Write_Char
  3792  03AA  0873               	movf	??_Lcd_Write_Char,w
  3793  03AB  00F5               	movwf	Lcd_Write_Char@y
  3794  03AC                     l2392:
  3795                           
  3796                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3797  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3798  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3799  03AE  1508               	bsf	8,2	;volatile
  3800  03AF                     l2394:
  3801                           
  3802                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3803  03AF  0875               	movf	Lcd_Write_Char@y,w
  3804  03B0  00F3               	movwf	??_Lcd_Write_Char
  3805  03B1  3004               	movlw	4
  3806  03B2                     u1985:
  3807  03B2  1003               	clrc
  3808  03B3  0CF3               	rrf	??_Lcd_Write_Char,f
  3809  03B4  3EFF               	addlw	-1
  3810  03B5  1D03               	skipz
  3811  03B6  2BB2               	goto	u1985
  3812  03B7  0873               	movf	??_Lcd_Write_Char,w
  3813  03B8  120A  118A  23DA  120A  118A  	fcall	_Lcd_Port
  3814  03BD                     l2396:
  3815                           
  3816                           ;LCD.c: 89:     RD3 = 1;
  3817  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3818  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  3819  03BF  1588               	bsf	8,3	;volatile
  3820  03C0                     l2398:
  3821                           
  3822                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3823  03C0  301A               	movlw	26
  3824  03C1  00F3               	movwf	??_Lcd_Write_Char
  3825  03C2                     u2237:
  3826  03C2  0BF3               	decfsz	??_Lcd_Write_Char,f
  3827  03C3  2BC2               	goto	u2237
  3828  03C4  0000               	nop
  3829  03C5                     l2400:
  3830                           
  3831                           ;LCD.c: 91:     RD3 = 0;
  3832  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3833  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3834  03C7  1188               	bcf	8,3	;volatile
  3835  03C8                     l2402:
  3836                           
  3837                           ;LCD.c: 92:     Lcd_Port(temp);
  3838  03C8  0874               	movf	Lcd_Write_Char@temp,w
  3839  03C9  120A  118A  23DA  120A  118A  	fcall	_Lcd_Port
  3840  03CE                     l2404:
  3841                           
  3842                           ;LCD.c: 93:     RD3 = 1;
  3843  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3844  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3845  03D0  1588               	bsf	8,3	;volatile
  3846  03D1                     l2406:
  3847                           
  3848                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3849  03D1  301A               	movlw	26
  3850  03D2  00F3               	movwf	??_Lcd_Write_Char
  3851  03D3                     u2247:
  3852  03D3  0BF3               	decfsz	??_Lcd_Write_Char,f
  3853  03D4  2BD3               	goto	u2247
  3854  03D5  0000               	nop
  3855  03D6                     l2408:
  3856                           
  3857                           ;LCD.c: 95:     RD3 = 0;
  3858  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  3859  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  3860  03D8  1188               	bcf	8,3	;volatile
  3861  03D9                     l244:
  3862  03D9  0008               	return
  3863  03DA                     __end_of_Lcd_Write_Char:
  3864                           
  3865                           	psect	text16
  3866  0667                     __ptext16:	
  3867 ;; *************** function _Lcd_Set_Cursor *****************
  3868 ;; Defined at:
  3869 ;;		line 48 in file "LCD.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  a               1    wreg     unsigned char 
  3872 ;;  b               1    6[COMMON] unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  a               1    0[BANK0 ] unsigned char 
  3875 ;;  temp            1    3[BANK0 ] unsigned char 
  3876 ;;  y               1    2[BANK0 ] unsigned char 
  3877 ;;  z               1    1[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, pclath, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         1       0       0       0       0
  3888 ;;      Locals:         0       4       0       0       0
  3889 ;;      Temps:          2       0       0       0       0
  3890 ;;      Totals:         3       4       0       0       0
  3891 ;;Total ram usage:        7 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    3
  3894 ;; This function calls:
  3895 ;;		_Lcd_Cmd
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _Lcd_Set_Cursor
  3903  0667                     _Lcd_Set_Cursor:
  3904                           
  3905                           ;incstack = 0
  3906                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3907                           ;Lcd_Set_Cursor@a stored from wreg
  3908  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3909  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0669  00A0               	movwf	Lcd_Set_Cursor@a
  3911  066A                     l2474:
  3912                           
  3913                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3914  066A  0320               	decf	Lcd_Set_Cursor@a,w
  3915  066B  1D03               	btfss	3,2
  3916  066C  2E6E               	goto	u1991
  3917  066D  2E6F               	goto	u1990
  3918  066E                     u1991:
  3919  066E  2E94               	goto	l2484
  3920  066F                     u1990:
  3921  066F                     l2476:
  3922                           
  3923                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3924  066F  0876               	movf	Lcd_Set_Cursor@b,w
  3925  0670  3E7F               	addlw	127
  3926  0671  00F7               	movwf	??_Lcd_Set_Cursor
  3927  0672  0877               	movf	??_Lcd_Set_Cursor,w
  3928  0673  00A3               	movwf	Lcd_Set_Cursor@temp
  3929                           
  3930                           ;LCD.c: 52:         z = temp >> 4;
  3931  0674  0823               	movf	Lcd_Set_Cursor@temp,w
  3932  0675  00F7               	movwf	??_Lcd_Set_Cursor
  3933  0676  3004               	movlw	4
  3934  0677                     u2005:
  3935  0677  1003               	clrc
  3936  0678  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3937  0679  3EFF               	addlw	-1
  3938  067A  1D03               	skipz
  3939  067B  2E77               	goto	u2005
  3940  067C  0877               	movf	??_Lcd_Set_Cursor,w
  3941  067D  00F8               	movwf	??_Lcd_Set_Cursor+1
  3942  067E  0878               	movf	??_Lcd_Set_Cursor+1,w
  3943  067F  00A1               	movwf	Lcd_Set_Cursor@z
  3944  0680                     l2478:
  3945                           
  3946                           ;LCD.c: 53:         y = temp & 0x0F;
  3947  0680  0823               	movf	Lcd_Set_Cursor@temp,w
  3948  0681  390F               	andlw	15
  3949  0682  00F7               	movwf	??_Lcd_Set_Cursor
  3950  0683  0877               	movf	??_Lcd_Set_Cursor,w
  3951  0684  00A2               	movwf	Lcd_Set_Cursor@y
  3952  0685                     l2480:
  3953                           
  3954                           ;LCD.c: 54:         Lcd_Cmd(z);
  3955  0685  0821               	movf	Lcd_Set_Cursor@z,w
  3956  0686  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  3957  068B                     l2482:
  3958                           
  3959                           ;LCD.c: 55:         Lcd_Cmd(y);
  3960  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3961  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3962  068D  0822               	movf	Lcd_Set_Cursor@y,w
  3963  068E  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  3964                           
  3965                           ;LCD.c: 56:     } else if (a == 2) {
  3966  0693  2EBE               	goto	l238
  3967  0694                     l2484:
  3968  0694  3002               	movlw	2
  3969  0695  0620               	xorwf	Lcd_Set_Cursor@a,w
  3970  0696  1D03               	btfss	3,2
  3971  0697  2E99               	goto	u2011
  3972  0698  2E9A               	goto	u2010
  3973  0699                     u2011:
  3974  0699  2EBE               	goto	l238
  3975  069A                     u2010:
  3976  069A                     l2486:
  3977                           
  3978                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3979  069A  0876               	movf	Lcd_Set_Cursor@b,w
  3980  069B  3EBF               	addlw	191
  3981  069C  00F7               	movwf	??_Lcd_Set_Cursor
  3982  069D  0877               	movf	??_Lcd_Set_Cursor,w
  3983  069E  00A3               	movwf	Lcd_Set_Cursor@temp
  3984                           
  3985                           ;LCD.c: 58:         z = temp >> 4;
  3986  069F  0823               	movf	Lcd_Set_Cursor@temp,w
  3987  06A0  00F7               	movwf	??_Lcd_Set_Cursor
  3988  06A1  3004               	movlw	4
  3989  06A2                     u2025:
  3990  06A2  1003               	clrc
  3991  06A3  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3992  06A4  3EFF               	addlw	-1
  3993  06A5  1D03               	skipz
  3994  06A6  2EA2               	goto	u2025
  3995  06A7  0877               	movf	??_Lcd_Set_Cursor,w
  3996  06A8  00F8               	movwf	??_Lcd_Set_Cursor+1
  3997  06A9  0878               	movf	??_Lcd_Set_Cursor+1,w
  3998  06AA  00A1               	movwf	Lcd_Set_Cursor@z
  3999  06AB                     l2488:
  4000                           
  4001                           ;LCD.c: 59:         y = temp & 0x0F;
  4002  06AB  0823               	movf	Lcd_Set_Cursor@temp,w
  4003  06AC  390F               	andlw	15
  4004  06AD  00F7               	movwf	??_Lcd_Set_Cursor
  4005  06AE  0877               	movf	??_Lcd_Set_Cursor,w
  4006  06AF  00A2               	movwf	Lcd_Set_Cursor@y
  4007  06B0                     l2490:
  4008                           
  4009                           ;LCD.c: 60:         Lcd_Cmd(z);
  4010  06B0  0821               	movf	Lcd_Set_Cursor@z,w
  4011  06B1  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4012  06B6                     l2492:
  4013                           
  4014                           ;LCD.c: 61:         Lcd_Cmd(y);
  4015  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4016  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  4017  06B8  0822               	movf	Lcd_Set_Cursor@y,w
  4018  06B9  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4019  06BE                     l238:
  4020  06BE  0008               	return
  4021  06BF                     __end_of_Lcd_Set_Cursor:
  4022                           
  4023                           	psect	text17
  4024  05B1                     __ptext17:	
  4025 ;; *************** function _Lcd_Init *****************
  4026 ;; Defined at:
  4027 ;;		line 65 in file "LCD.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0
  4043 ;;      Temps:          2       0       0       0       0
  4044 ;;      Totals:         2       0       0       0       0
  4045 ;;Total ram usage:        2 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    3
  4048 ;; This function calls:
  4049 ;;		_Lcd_Cmd
  4050 ;;		_Lcd_Port
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _Lcd_Init
  4058  05B1                     _Lcd_Init:
  4059  05B1                     l2462:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4062                           
  4063                           
  4064                           ;LCD.c: 66:     Lcd_Port(0x00);
  4065  05B1  3000               	movlw	0
  4066  05B2  120A  118A  23DA  120A  118A  	fcall	_Lcd_Port
  4067  05B7                     l2464:
  4068                           
  4069                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4070  05B7  3034               	movlw	52
  4071  05B8  00F7               	movwf	??_Lcd_Init+1
  4072  05B9  30F1               	movlw	241
  4073  05BA  00F6               	movwf	??_Lcd_Init
  4074  05BB                     u2257:
  4075  05BB  0BF6               	decfsz	??_Lcd_Init,f
  4076  05BC  2DBB               	goto	u2257
  4077  05BD  0BF7               	decfsz	??_Lcd_Init+1,f
  4078  05BE  2DBB               	goto	u2257
  4079  05BF  2DC0               	nop2
  4080  05C0                     l2466:
  4081                           
  4082                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4083  05C0  3003               	movlw	3
  4084  05C1  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4085                           
  4086                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4087  05C6  300D               	movlw	13
  4088  05C7  00F7               	movwf	??_Lcd_Init+1
  4089  05C8  30FB               	movlw	251
  4090  05C9  00F6               	movwf	??_Lcd_Init
  4091  05CA                     u2267:
  4092  05CA  0BF6               	decfsz	??_Lcd_Init,f
  4093  05CB  2DCA               	goto	u2267
  4094  05CC  0BF7               	decfsz	??_Lcd_Init+1,f
  4095  05CD  2DCA               	goto	u2267
  4096  05CE  2DCF               	nop2
  4097  05CF                     l2468:
  4098                           
  4099                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4100  05CF  3003               	movlw	3
  4101  05D0  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4102  05D5                     l2470:
  4103                           
  4104                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4105  05D5  301D               	movlw	29
  4106  05D6  00F7               	movwf	??_Lcd_Init+1
  4107  05D7  3091               	movlw	145
  4108  05D8  00F6               	movwf	??_Lcd_Init
  4109  05D9                     u2277:
  4110  05D9  0BF6               	decfsz	??_Lcd_Init,f
  4111  05DA  2DD9               	goto	u2277
  4112  05DB  0BF7               	decfsz	??_Lcd_Init+1,f
  4113  05DC  2DD9               	goto	u2277
  4114                           
  4115                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4116  05DD  3003               	movlw	3
  4117  05DE  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4118                           
  4119                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4120  05E3  3002               	movlw	2
  4121  05E4  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4122                           
  4123                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  4124  05E9  3002               	movlw	2
  4125  05EA  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4126                           
  4127                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  4128  05EF  3008               	movlw	8
  4129  05F0  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4130                           
  4131                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  4132  05F5  3000               	movlw	0
  4133  05F6  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4134                           
  4135                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  4136  05FB  300C               	movlw	12
  4137  05FC  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4138                           
  4139                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  4140  0601  3000               	movlw	0
  4141  0602  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4142                           
  4143                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  4144  0607  3006               	movlw	6
  4145  0608  120A  158A  2756  120A  118A  	fcall	_Lcd_Cmd
  4146  060D                     l241:
  4147  060D  0008               	return
  4148  060E                     __end_of_Lcd_Init:
  4149                           
  4150                           	psect	text18
  4151  0F49                     __ptext18:	
  4152 ;; *************** function _Lcd_Clear *****************
  4153 ;; Defined at:
  4154 ;;		line 43 in file "LCD.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0
  4171 ;;      Totals:         0       0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    3
  4175 ;; This function calls:
  4176 ;;		_Lcd_Cmd
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function _Lcd_Clear
  4184  0F49                     _Lcd_Clear:
  4185  0F49                     l2472:	
  4186                           ;incstack = 0
  4187                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4188                           
  4189                           
  4190                           ;LCD.c: 44:     Lcd_Cmd(0);
  4191  0F49  3000               	movlw	0
  4192  0F4A  120A  158A  2756  120A  158A  	fcall	_Lcd_Cmd
  4193                           
  4194                           ;LCD.c: 45:     Lcd_Cmd(1);
  4195  0F4F  3001               	movlw	1
  4196  0F50  120A  158A  2756  120A  158A  	fcall	_Lcd_Cmd
  4197  0F55                     l232:
  4198  0F55  0008               	return
  4199  0F56                     __end_of_Lcd_Clear:
  4200                           
  4201                           	psect	text19
  4202  0F56                     __ptext19:	
  4203 ;; *************** function _Lcd_Cmd *****************
  4204 ;; Defined at:
  4205 ;;		line 35 in file "LCD.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  a               1    wreg     unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  a               1    5[COMMON] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0, pclath, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4219 ;;      Params:         0       0       0       0       0
  4220 ;;      Locals:         1       0       0       0       0
  4221 ;;      Temps:          2       0       0       0       0
  4222 ;;      Totals:         3       0       0       0       0
  4223 ;;Total ram usage:        3 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    2
  4226 ;; This function calls:
  4227 ;;		_Lcd_Port
  4228 ;; This function is called by:
  4229 ;;		_Lcd_Clear
  4230 ;;		_Lcd_Set_Cursor
  4231 ;;		_Lcd_Init
  4232 ;;		_Lcd_Shift_Right
  4233 ;;		_Lcd_Shift_Left
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _Lcd_Cmd
  4239  0F56                     _Lcd_Cmd:
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4243                           ;Lcd_Cmd@a stored from wreg
  4244  0F56  00F5               	movwf	Lcd_Cmd@a
  4245  0F57                     l2380:
  4246                           
  4247                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4248  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  4250  0F59  1108               	bcf	8,2	;volatile
  4251  0F5A                     l2382:
  4252                           
  4253                           ;LCD.c: 37:     Lcd_Port(a);
  4254  0F5A  0875               	movf	Lcd_Cmd@a,w
  4255  0F5B  120A  118A  23DA  120A  158A  	fcall	_Lcd_Port
  4256  0F60                     l2384:
  4257                           
  4258                           ;LCD.c: 38:     RD3 = 1;
  4259  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0F62  1588               	bsf	8,3	;volatile
  4262  0F63                     l2386:
  4263                           
  4264                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4265  0F63  300B               	movlw	11
  4266  0F64  00F4               	movwf	??_Lcd_Cmd+1
  4267  0F65  3062               	movlw	98
  4268  0F66  00F3               	movwf	??_Lcd_Cmd
  4269  0F67                     u2287:
  4270  0F67  0BF3               	decfsz	??_Lcd_Cmd,f
  4271  0F68  2F67               	goto	u2287
  4272  0F69  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4273  0F6A  2F67               	goto	u2287
  4274  0F6B  0000               	nop
  4275  0F6C                     l2388:
  4276                           
  4277                           ;LCD.c: 40:     RD3 = 0;
  4278  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0F6E  1188               	bcf	8,3	;volatile
  4281  0F6F                     l229:
  4282  0F6F  0008               	return
  4283  0F70                     __end_of_Lcd_Cmd:
  4284                           
  4285                           	psect	text20
  4286  03DA                     __ptext20:	
  4287 ;; *************** function _Lcd_Port *****************
  4288 ;; Defined at:
  4289 ;;		line 13 in file "LCD.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  a               1    wreg     unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  a               1    2[COMMON] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       0       0       0       0
  4304 ;;      Locals:         1       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         1       0       0       0       0
  4307 ;;Total ram usage:        1 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_Lcd_Cmd
  4314 ;;		_Lcd_Init
  4315 ;;		_Lcd_Write_Char
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _Lcd_Port
  4321  03DA                     _Lcd_Port:
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _Lcd_Port: [wreg]
  4325                           ;Lcd_Port@a stored from wreg
  4326  03DA  00F2               	movwf	Lcd_Port@a
  4327  03DB                     l2158:
  4328                           
  4329                           ;LCD.c: 14:     if (a & 1)
  4330  03DB  1C72               	btfss	Lcd_Port@a,0
  4331  03DC  2BDE               	goto	u1551
  4332  03DD  2BDF               	goto	u1550
  4333  03DE                     u1551:
  4334  03DE  2BE3               	goto	l218
  4335  03DF                     u1550:
  4336  03DF                     l2160:
  4337                           
  4338                           ;LCD.c: 15:         RD4 = 1;
  4339  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  4340  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  4341  03E1  1608               	bsf	8,4	;volatile
  4342  03E2  2BE6               	goto	l219
  4343  03E3                     l218:	
  4344                           ;LCD.c: 16:     else
  4345                           
  4346                           
  4347                           ;LCD.c: 17:         RD4 = 0;
  4348  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  4349  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  4350  03E5  1208               	bcf	8,4	;volatile
  4351  03E6                     l219:
  4352                           
  4353                           ;LCD.c: 19:     if (a & 2)
  4354  03E6  1CF2               	btfss	Lcd_Port@a,1
  4355  03E7  2BE9               	goto	u1561
  4356  03E8  2BEA               	goto	u1560
  4357  03E9                     u1561:
  4358  03E9  2BEC               	goto	l220
  4359  03EA                     u1560:
  4360  03EA                     l2162:
  4361                           
  4362                           ;LCD.c: 20:         RD5 = 1;
  4363  03EA  1688               	bsf	8,5	;volatile
  4364  03EB  2BED               	goto	l221
  4365  03EC                     l220:	
  4366                           ;LCD.c: 21:     else
  4367                           
  4368                           
  4369                           ;LCD.c: 22:         RD5 = 0;
  4370  03EC  1288               	bcf	8,5	;volatile
  4371  03ED                     l221:
  4372                           
  4373                           ;LCD.c: 24:     if (a & 4)
  4374  03ED  1D72               	btfss	Lcd_Port@a,2
  4375  03EE  2BF0               	goto	u1571
  4376  03EF  2BF1               	goto	u1570
  4377  03F0                     u1571:
  4378  03F0  2BF3               	goto	l222
  4379  03F1                     u1570:
  4380  03F1                     l2164:
  4381                           
  4382                           ;LCD.c: 25:         RD6 = 1;
  4383  03F1  1708               	bsf	8,6	;volatile
  4384  03F2  2BF4               	goto	l223
  4385  03F3                     l222:	
  4386                           ;LCD.c: 26:     else
  4387                           
  4388                           
  4389                           ;LCD.c: 27:         RD6 = 0;
  4390  03F3  1308               	bcf	8,6	;volatile
  4391  03F4                     l223:
  4392                           
  4393                           ;LCD.c: 29:     if (a & 8)
  4394  03F4  1DF2               	btfss	Lcd_Port@a,3
  4395  03F5  2BF7               	goto	u1581
  4396  03F6  2BF8               	goto	u1580
  4397  03F7                     u1581:
  4398  03F7  2BFA               	goto	l224
  4399  03F8                     u1580:
  4400  03F8                     l2166:
  4401                           
  4402                           ;LCD.c: 30:         RD7 = 1;
  4403  03F8  1788               	bsf	8,7	;volatile
  4404  03F9  2BFB               	goto	l226
  4405  03FA                     l224:	
  4406                           ;LCD.c: 31:     else
  4407                           
  4408                           
  4409                           ;LCD.c: 32:         RD7 = 0;
  4410  03FA  1388               	bcf	8,7	;volatile
  4411  03FB                     l226:
  4412  03FB  0008               	return
  4413  03FC                     __end_of_Lcd_Port:
  4414                           
  4415                           	psect	text21
  4416  0F32                     __ptext21:	
  4417 ;; *************** function _I2C_Master_Write *****************
  4418 ;; Defined at:
  4419 ;;		line 65 in file "I2C.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  d               2    2[COMMON] unsigned int 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0, pclath, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         2       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0
  4436 ;;      Totals:         2       0       0       0       0
  4437 ;;Total ram usage:        2 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    2
  4440 ;; This function calls:
  4441 ;;		_I2C_Master_Wait
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _I2C_Master_Write
  4449  0F32                     _I2C_Master_Write:
  4450  0F32                     l2518:	
  4451                           ;incstack = 0
  4452                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4453                           
  4454                           
  4455                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4456  0F32  120A  158A  273C  120A  158A  	fcall	_I2C_Master_Wait
  4457  0F37                     l2520:
  4458                           
  4459                           ;I2C.c: 68:     SSPBUF = d;
  4460  0F37  0872               	movf	I2C_Master_Write@d,w
  4461  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  4463  0F3A  0093               	movwf	19	;volatile
  4464  0F3B                     l193:
  4465  0F3B  0008               	return
  4466  0F3C                     __end_of_I2C_Master_Write:
  4467                           
  4468                           	psect	text22
  4469  0F20                     __ptext22:	
  4470 ;; *************** function _I2C_Master_Stop *****************
  4471 ;; Defined at:
  4472 ;;		line 55 in file "I2C.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         0       0       0       0       0
  4487 ;;      Locals:         0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0
  4489 ;;      Totals:         0       0       0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    2
  4493 ;; This function calls:
  4494 ;;		_I2C_Master_Wait
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _I2C_Master_Stop
  4502  0F20                     _I2C_Master_Stop:
  4503  0F20                     l2538:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4506                           
  4507                           
  4508                           ;I2C.c: 57:     I2C_Master_Wait();
  4509  0F20  120A  158A  273C  120A  158A  	fcall	_I2C_Master_Wait
  4510  0F25                     l2540:
  4511                           
  4512                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4513  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  4514  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  4515  0F27  1511               	bsf	17,2	;volatile
  4516  0F28                     l190:
  4517  0F28  0008               	return
  4518  0F29                     __end_of_I2C_Master_Stop:
  4519                           
  4520                           	psect	text23
  4521  0F17                     __ptext23:	
  4522 ;; *************** function _I2C_Master_Start *****************
  4523 ;; Defined at:
  4524 ;;		line 39 in file "I2C.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0, pclath, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         0       0       0       0       0
  4539 ;;      Locals:         0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0
  4541 ;;      Totals:         0       0       0       0       0
  4542 ;;Total ram usage:        0 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    2
  4545 ;; This function calls:
  4546 ;;		_I2C_Master_Wait
  4547 ;; This function is called by:
  4548 ;;		_main
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function _I2C_Master_Start
  4554  0F17                     _I2C_Master_Start:
  4555  0F17                     l2514:	
  4556                           ;incstack = 0
  4557                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4558                           
  4559                           
  4560                           ;I2C.c: 41:     I2C_Master_Wait();
  4561  0F17  120A  158A  273C  120A  158A  	fcall	_I2C_Master_Wait
  4562  0F1C                     l2516:
  4563                           
  4564                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4565  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  4566  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  4567  0F1E  1411               	bsf	17,0	;volatile
  4568  0F1F                     l184:
  4569  0F1F  0008               	return
  4570  0F20                     __end_of_I2C_Master_Start:
  4571                           
  4572                           	psect	text24
  4573  07D2                     __ptext24:	
  4574 ;; *************** function _I2C_Master_Read *****************
  4575 ;; Defined at:
  4576 ;;		line 74 in file "I2C.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  a               2    2[COMMON] unsigned short 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  temp            2    6[COMMON] unsigned short 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  2    2[COMMON] unsigned short 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         2       0       0       0       0
  4591 ;;      Locals:         2       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0
  4593 ;;      Totals:         6       0       0       0       0
  4594 ;;Total ram usage:        6 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    2
  4597 ;; This function calls:
  4598 ;;		_I2C_Master_Wait
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function _I2C_Master_Read
  4606  07D2                     _I2C_Master_Read:
  4607  07D2                     l2522:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4610                           
  4611                           
  4612                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4613  07D2  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Wait
  4614  07D7                     l2524:
  4615                           
  4616                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4617  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  4618  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  4619  07D9  1591               	bsf	17,3	;volatile
  4620                           
  4621                           ;I2C.c: 79:     I2C_Master_Wait();
  4622  07DA  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Wait
  4623  07DF                     l2526:
  4624                           
  4625                           ;I2C.c: 80:     temp = SSPBUF;
  4626  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  4627  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  4628  07E1  0813               	movf	19,w	;volatile
  4629  07E2  00F4               	movwf	??_I2C_Master_Read
  4630  07E3  01F5               	clrf	??_I2C_Master_Read+1
  4631  07E4  0874               	movf	??_I2C_Master_Read,w
  4632  07E5  00F6               	movwf	I2C_Master_Read@temp
  4633  07E6  0875               	movf	??_I2C_Master_Read+1,w
  4634  07E7  00F7               	movwf	I2C_Master_Read@temp+1
  4635  07E8                     l2528:
  4636                           
  4637                           ;I2C.c: 81:     I2C_Master_Wait();
  4638  07E8  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Wait
  4639  07ED                     l2530:
  4640                           
  4641                           ;I2C.c: 82:     if(a == 1){
  4642  07ED  0372               	decf	I2C_Master_Read@a,w
  4643  07EE  0473               	iorwf	I2C_Master_Read@a+1,w
  4644  07EF  1D03               	btfss	3,2
  4645  07F0  2FF2               	goto	u2061
  4646  07F1  2FF3               	goto	u2060
  4647  07F2                     u2061:
  4648  07F2  2FF7               	goto	l196
  4649  07F3                     u2060:
  4650  07F3                     l2532:
  4651                           
  4652                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4653  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  4654  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  4655  07F5  1291               	bcf	17,5	;volatile
  4656                           
  4657                           ;I2C.c: 84:     }else{
  4658  07F6  2FFA               	goto	l197
  4659  07F7                     l196:
  4660                           
  4661                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4662  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  4663  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  4664  07F9  1691               	bsf	17,5	;volatile
  4665  07FA                     l197:	
  4666                           ;I2C.c: 86:     }
  4667                           
  4668                           
  4669                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4670  07FA  1611               	bsf	17,4	;volatile
  4671  07FB                     l2534:
  4672                           
  4673                           ;I2C.c: 88:     return temp;
  4674  07FB  0877               	movf	I2C_Master_Read@temp+1,w
  4675  07FC  00F3               	movwf	?_I2C_Master_Read+1
  4676  07FD  0876               	movf	I2C_Master_Read@temp,w
  4677  07FE  00F2               	movwf	?_I2C_Master_Read
  4678  07FF                     l198:
  4679  07FF  0008               	return
  4680  0800                     __end_of_I2C_Master_Read:
  4681                           
  4682                           	psect	text25
  4683  0F3C                     __ptext25:	
  4684 ;; *************** function _I2C_Master_Wait *****************
  4685 ;; Defined at:
  4686 ;;		line 32 in file "I2C.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4700 ;;      Params:         0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0
  4703 ;;      Totals:         0       0       0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_I2C_Master_Start
  4711 ;;		_I2C_Master_Stop
  4712 ;;		_I2C_Master_Write
  4713 ;;		_I2C_Master_Read
  4714 ;;		_I2C_Master_RepeatedStart
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _I2C_Master_Wait
  4720  0F3C                     _I2C_Master_Wait:
  4721  0F3C                     l2376:	
  4722                           ;incstack = 0
  4723                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4724                           
  4725  0F3C                     l178:	
  4726                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4727                           
  4728  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4729  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4730  0F3E  1914               	btfsc	20,2	;volatile
  4731  0F3F  2F41               	goto	u1961
  4732  0F40  2F42               	goto	u1960
  4733  0F41                     u1961:
  4734  0F41  2F3C               	goto	l178
  4735  0F42                     u1960:
  4736  0F42                     l2378:
  4737  0F42  0811               	movf	17,w	;volatile
  4738  0F43  391F               	andlw	31
  4739  0F44  1D03               	btfss	3,2
  4740  0F45  2F47               	goto	u1971
  4741  0F46  2F48               	goto	u1970
  4742  0F47                     u1971:
  4743  0F47  2F3C               	goto	l178
  4744  0F48                     u1970:
  4745  0F48                     l181:
  4746  0F48  0008               	return
  4747  0F49                     __end_of_I2C_Master_Wait:
  4748                           
  4749                           	psect	text26
  4750  0F8B                     __ptext26:	
  4751 ;; *************** function _isr *****************
  4752 ;; Defined at:
  4753 ;;		line 56 in file "main_master.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		status,2
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4767 ;;      Params:         0       0       0       0       0
  4768 ;;      Locals:         0       0       0       0       0
  4769 ;;      Temps:          2       0       0       0       0
  4770 ;;      Totals:         2       0       0       0       0
  4771 ;;Total ram usage:        2 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		Interrupt level 1
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _isr
  4782  0F8B                     _isr:
  4783  0F8B                     i1l2000:
  4784                           
  4785                           ;main_master.c: 58:         Lcd_Set_Cursor(1,1);
  4786  0F8B  1C0B               	btfss	11,0	;volatile
  4787  0F8C  2F8E               	goto	u137_21
  4788  0F8D  2F8F               	goto	u137_20
  4789  0F8E                     u137_21:
  4790  0F8E  2FA0               	goto	i1l121
  4791  0F8F                     u137_20:
  4792  0F8F                     i1l2002:
  4793                           
  4794                           ;main_master.c: 59:         Lcd_Write_String("CONT: STAT: TEMP:");;main_master.c: 60:   
      +                                sprintf(buffer, "%d ", val);
  4795  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0F91  1806               	btfsc	6,0	;volatile
  4798  0F92  2F94               	goto	u138_21
  4799  0F93  2F95               	goto	u138_20
  4800  0F94                     u138_21:
  4801  0F94  2F99               	goto	i1l118
  4802  0F95                     u138_20:
  4803  0F95                     i1l2004:
  4804                           
  4805                           ;main_master.c: 61:         sprintf(buffer2, "%d ", val2);;main_master.c: 62:         Lc
      +                          d_Set_Cursor(2,2);
  4806  0F95  1408               	bsf	8,0	;volatile
  4807                           
  4808                           ;main_master.c: 63:         Lcd_Write_String(buffer);
  4809  0F96  01C3               	clrf	_stat
  4810  0F97  0AC3               	incf	_stat,f
  4811                           
  4812                           ;main_master.c: 64:         Lcd_Set_Cursor(2,14);
  4813  0F98  2F9F               	goto	i1l2010
  4814  0F99                     i1l118:	
  4815                           ;main_master.c: 65:         Lcd_Write_String(buffer2);
  4816                           
  4817  0F99  1C06               	btfss	6,0	;volatile
  4818  0F9A  2F9C               	goto	u139_21
  4819  0F9B  2F9D               	goto	u139_20
  4820  0F9C                     u139_21:
  4821  0F9C  2F9F               	goto	i1l2010
  4822  0F9D                     u139_20:
  4823  0F9D                     i1l2006:
  4824                           
  4825                           ;main_master.c: 66: ;main_master.c: 67:         if (val1==1){
  4826  0F9D  1008               	bcf	8,0	;volatile
  4827  0F9E                     i1l2008:
  4828                           
  4829                           ;main_master.c: 68:             Lcd_Set_Cursor(2,8);
  4830  0F9E  01C3               	clrf	_stat
  4831  0F9F                     i1l2010:
  4832                           
  4833                           ;main_master.c: 70:         }
  4834  0F9F  100B               	bcf	11,0	;volatile
  4835  0FA0                     i1l121:
  4836  0FA0  0871               	movf	??_isr+1,w
  4837  0FA1  008A               	movwf	10
  4838  0FA2  0E70               	swapf	??_isr,w
  4839  0FA3  0083               	movwf	3
  4840  0FA4  0EFE               	swapf	btemp,f
  4841  0FA5  0E7E               	swapf	btemp,w
  4842  0FA6  0009               	retfie
  4843  0FA7                     __end_of_isr:
  4844  0002                     
  4845                           	psect	intentry
  4846  0004                     __pintentry:	
  4847                           ;incstack = 0
  4848                           ; Regs used in _isr: [status,2]
  4849                           
  4850  0004                     interrupt_function:
  4851  007E                     saved_w	set	btemp
  4852  0004  00FE               	movwf	btemp
  4853  0005  0E03               	swapf	3,w
  4854  0006  00F0               	movwf	??_isr
  4855  0007  080A               	movf	10,w
  4856  0008  00F1               	movwf	??_isr+1
  4857  0009  120A  158A  2F8B   	ljmp	_isr
  4858                           
  4859                           	psect	functab
  4860  0024                     __pfunctab:
  4861  0024                     __fptable:
  4862  0024                     fptable:
  4863  0024  00FF               	movwf	(btemp+1)& (0+127)
  4864  0025  3000               	movlw	high fptable
  4865  0026  008A               	movwf	10
  4866  0027  087F               	movf	(btemp+1)& (0+127),w
  4867  0028  0782               	addwf	2,f
  4868  0029                     fpbase:
  4869  0029  2829               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4870  002A                     fp__putch:
  4871  002A  120A  158A  2F29   	ljmp	_putch
  4872  002D                     __end_of__fptable:
  4873  007E                     btemp	set	126	;btemp
  4874  007E                     wtemp0	set	126
  4875                           
  4876                           	psect	config
  4877                           
  4878                           ;Config register CONFIG1 @ 0x2007
  4879                           ;	Oscillator Selection bits
  4880                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4881                           ;	Watchdog Timer Enable bit
  4882                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4883                           ;	Power-up Timer Enable bit
  4884                           ;	PWRTE = OFF, PWRT disabled
  4885                           ;	RE3/MCLR pin function select bit
  4886                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4887                           ;	Code Protection bit
  4888                           ;	CP = OFF, Program memory code protection is disabled
  4889                           ;	Data Code Protection bit
  4890                           ;	CPD = OFF, Data memory code protection is disabled
  4891                           ;	Brown Out Reset Selection bits
  4892                           ;	BOREN = OFF, BOR disabled
  4893                           ;	Internal External Switchover bit
  4894                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4895                           ;	Fail-Safe Clock Monitor Enabled bit
  4896                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4897                           ;	Low Voltage Programming Enable bit
  4898                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4899                           ;	In-Circuit Debugger Mode bit
  4900                           ;	DEBUG = 0x1, unprogrammed default
  4901  2007                     	org	8199
  4902  2007  20D4               	dw	8404
  4903                           
  4904                           ;Config register CONFIG2 @ 0x2008
  4905                           ;	Brown-out Reset Selection bit
  4906                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4907                           ;	Flash Program Memory Self Write Enable bits
  4908                           ;	WRT = OFF, Write protection off
  4909  2008                     	org	8200
  4910  2008  3FFF               	dw	16383

Data Sizes:
    Strings     91
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     29      39
    BANK1            80     43      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer2(BANK1[20]), main@buffer(BANK1[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer2(BANK1[20]), main@buffer(BANK1[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_11(CODE[2]), STR_10(CODE[24]), STR_9(CODE[2]), STR_8(CODE[17]), 
		 -> STR_7(CODE[2]), STR_6(CODE[21]), STR_3(CODE[4]), STR_2(CODE[4]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer2(BANK1[20]), main@buffer(BANK1[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_11(CODE[2]), STR_10(CODE[24]), STR_9(CODE[2]), STR_8(CODE[17]), 
		 -> STR_7(CODE[2]), STR_6(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    S1119__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1119__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer2(BANK1[20]), main@buffer(BANK1[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer2(BANK1[20]), main@buffer(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[4]), STR_4(CODE[3]), main@buffer2(BANK1[20]), main@buffer(BANK1[20]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Text->_division
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _division->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Text
    _main->_sprintf
    _sprintf->__doprnt
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Text->_printf
    _printf->__doprnt
    __doprnt->___lwmod
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   11089
                                             26 BANK0      3     3      0
                                              0 BANK1     43    43      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _Text
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     6      3    2997
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Text                                                 3     3      0    4545
                                             23 BANK0      3     3      0
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     6      0    2885
                                             17 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             19    17      2    2482
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     226
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1660
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     834
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     995
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     211
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     245
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Text
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      2C       7       55.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 31 22:25:30 2021

                        pc 0002                         _R1 0046                         _R2 0045  
             ___awdiv@sign 0021                         fsr 0004                        l220 03EC  
                      l140 04DF                        l221 03ED                        l222 03F3  
                      l134 070B                        l223 03F4                        l143 0F29  
                      l224 03FA                        l232 0F55                        l241 060D  
                      l137 03A0                        l226 03FB                        l218 03E3  
                      l250 0751                        l146 0F31                        l219 03E6  
                      l244 03D9                        l181 0F48                        l229 0F6F  
                      l190 0F28                        l238 06BE                        l175 0FFF  
                      l184 0F1F                        l193 0F3B                        l178 0F3C  
                      l196 07F7                        l508 0666                        l197 07FA  
                      l198 07FF                        l614 0795                        l624 07D1  
                      l378 05B0                        l495 0548                        l844 0FC7  
                      l837 02A3                        l799 0F8A                        _GIE 005F  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        _dec 003D  
                      _cen 003E                        _isr 0F8B                        fsr0 0004  
                      _uni 00CB                        indf 0000               ___awmod@sign 0078  
              main@buffer2 00B4                       l2110 0752                       l2200 04EE  
                     l2120 0768                       l2112 0754                       l2104 0F29  
                     l2210 0503                       l2202 04F2                       l2130 078B  
                     l2122 076C                       l2114 075A                       l2106 0F2F  
                     l2220 0526                       l2212 0506                       l2204 04F7  
                     l2124 077D                       l2116 075D                       l2132 0791  
                     l2140 07A1                       l2300 01D7                       l2230 053F  
                     l2222 052C                       l2214 050D                       l2206 04FB  
                     l2126 0783                       l2118 0764                       l2150 07C0  
                     l2142 07A8                       l2310 01F5                       l2160 03DF  
                     l2400 03C5                       l2232 0544                       l2224 052D  
                     l2216 0511                       l2208 04FD                       l2240 0613  
                     l2128 0784                       l2152 07C7                       l2144 07AC  
                     l2136 0796                       l2320 0222                       l2312 01FF  
                     l2162 03EA                       l2402 03C8                       l2226 0534  
                     l2218 0515                       l2250 0629                       l2242 0618  
                     l2146 07B0                       l2138 079E                       l2154 07CD  
                     l2330 0274                       l2314 0205                       l2322 0228  
                     l2306 01D9                       l2170 055B                       l2410 06BF  
                     l2164 03F1                       l2404 03CE                       l2500 0735  
                     l2228 053A                       l2260 0645                       l2252 062C  
                     l2244 061A                       l2236 060E                       l2148 07BA  
                     l2332 027C                       l2324 022F                       l2316 020D  
                     l2180 058A                       l2172 055E                       l2420 06D9  
                     l2412 06C5                       l2166 03F8                       l2158 03DB  
                     l2406 03D1                       l2270 0662                       l2262 064B  
                     l2254 0633                       l2246 061E                       l2238 060F  
                     l2326 025F                       l2334 0282                       l2318 021A  
                     l2182 0598                       l2174 056B                       l2350 0FCF  
                     l2430 06E1                       l2422 06DB                       l2414 06C9  
                     l2510 0FC1                       l2502 0FAA                       l2520 0F37  
                     l2408 03D6                       l2192 04E0                       l2264 0652  
                     l2256 0637                       l2248 0623                       l2360 04D0  
                     l2328 0267                       l2280 0180                       l2336 028D  
                     l2184 0599                       l2176 056F                       l2168 0549  
                     l2352 0FFC                       l2440 06EC                       l2432 06E5  
                     l2424 06DC                       l2416 06CC                       l2504 0FAE  
                     l2600 0041                       l2530 07ED                       l2522 07D2  
                     l2514 0F17                       l2194 04E3                       l2258 063B  
                     l2266 0658                       l2362 04D5                       l2338 02A1  
                     l2290 019F                       l2282 018F                       l2274 0171  
                     l2370 0F78                       l2186 05A2                       l2178 0578  
                     l2354 0FFD                       l2346 0FC8                       l2450 06F5  
                     l2442 06EF                       l2434 06E7                       l2426 06DD  
                     l2418 06D6                       l2506 0FAF                       l2610 0064  
                     l2602 0047                       l2532 07F3                       l2524 07D7  
                     l2516 0F1C                       l2540 0F25                       l2380 0F57  
                     l2196 04E7                       l2268 065D                       l2364 04DA  
                     l2292 01BC                       l2284 0197                       l2276 0172  
                     l2372 0F7C                       l2188 05A8                       l2356 0FFE  
                     l2348 0FCC                       l2460 06FC                       l2452 06F6  
                     l2444 06F0                       l2436 06EA                       l2428 06DE  
                     l2508 0FB3                       l2620 00B0                       l2612 006D  
                     l2604 004F                       l2534 07FB                       l2526 07DF  
                     l2518 0F32                       l2382 0F5A                       l2470 05D5  
                     l2462 05B1                       l2390 03A2                       l2198 04EC  
                     l2358 0476                       l2294 01CA                       l2278 0178  
                     l2286 019E                       l2366 0F73                       l2550 02CE  
                     l2542 02A4                       l2454 06F9                       l2446 06F3  
                     l2438 06EB                       l2630 00E2                       l2622 00BC  
                     l2614 0084                       l2606 0057                       l2376 0F3C  
                     l2528 07E8                       l2384 0F60                       l2472 0F49  
                     l2464 05B7                       l2480 0685                       l2392 03AC  
                     l2296 01CE                       l2368 0F74                       l2560 02F8  
                     l2552 02D2                       l2544 02B2                       l2456 06FA  
                     l2448 06F4                       l2640 0113                       l2632 00EE  
                     l2624 00C5                       l2616 009B                       l2608 005C  
                     l2378 0F42                       l2538 0F20                       l2386 0F63  
                     l2466 05C0                       l2490 06B0                       l2482 068B  
                     l2474 066A                       l2394 03AF                       l2298 01D2  
                     l2570 0326                       l2562 0306                       l2554 02E0  
                     l2546 02BA                       l2458 06FB                       l2650 0143  
                     l2642 0121                       l2634 00F7                       l2626 00CC  
                     l2618 00A7                       l2388 0F6C                       l2468 05CF  
                     l2492 06B6                       l2476 066F                       l2484 0694  
                     l2396 03BD                       l2580 0364                       l2572 033A  
                     l2564 030E                       l2556 02E4                       l2548 02C0  
                     l2652 0151                       l2644 0126                       l2636 0105  
                     l2628 00D8                       l2486 069A                       l2478 0680  
                     l2398 03C0                       l2494 070C                       l2590 038C  
                     l2582 0368                       l2574 0348                       l2566 0314  
                     l2558 02F2                       l2654 0156                       l2646 0135  
                     l2638 010A                       l2488 06AB                       l2496 0711  
                     l2592 039A                       l2584 0376                       l2576 0350  
                     l2568 0322                       l2656 0165                       l2648 013A  
                     l2498 072D                       l2586 037A                       l2578 0356  
                     l2594 002D                       l2588 0388                       l2596 0037  
                     l2686 01B1                       l2598 003D                       ?_isr 0070  
                     STR_1 0447                       STR_2 046A                       STR_3 046A  
                     STR_4 0472                       STR_5 046E                       STR_6 0432  
                     STR_7 0430                       STR_8 0459                       STR_9 0430  
                     u2010 069A                       u2011 0699                       u2005 0677  
                     u2030 071B                       u2040 073F                       u2025 06A2  
                     u2050 0751                       u1410 0F2F                       u2051 0750  
                     u1411 0F2E                       u2107 015E                       u2060 07F3  
                     u1420 075A                       u2061 07F2                       u1421 0759  
                     u2117 02AC                       u1510 07B0                       u2070 00CC  
                     u1511 07AF                       u2207 0370                       u2127 02C8  
                     u2071 00CB                       u1440 076C                       u1520 07BA  
                     u1441 076B                       u1521 07B9                       u1505 07A2  
                     u2217 0382                       u2137 02DA                       u1610 056F  
                     u1435 075E                       u2227 0394                       u2147 02EC  
                     u1611 056E                       u1700 0515                       u1460 077D  
                     u1540 07CD                       u2237 03C2                       u1701 0514  
                     u1461 077C                       u1541 07CC                       u1525 07B6  
                     u2157 0300                       u1605 0560                       u1550 03DF  
                     u1630 058A                       u1551 03DE                       u2247 03D3  
                     u1455 076D                       u1535 07C1                       u2167 031C  
                     u1631 0589                       u2087 00FF                       u1560 03EA  
                     u1720 0526                       u1800 063B                       u1480 0791  
                     u1561 03E9                       u2257 05BB                       u1721 0525  
                     u1801 063A                       u1481 0790                       u1465 0779  
                     u2177 032E                       u1625 0571                       u2097 012E  
                     u1570 03F1                       u1810 0645                       u1490 079E  
                     u1650 05A8                       u1571 03F0                       u2267 05CA  
                     u1715 0516                       u1811 0644                       u1475 0785  
                     u1491 079D                       u2187 0342                       u1651 05A7  
                     u1635 0586                       u1580 03F8                       u1740 053A  
                     u1660 04E7                       u1900 0205                       u1581 03F7  
                     u2277 05D9                       u1741 0539                       u1725 0522  
                     u1661 04E6                       u1901 0204                       u2197 035E  
                     u1645 059A                       u1750 053F                       u1670 04F2  
                     u1830 0658                       u1910 020D                       u1590 055B  
                     u2287 0F67                       u1751 053E                       u1735 052E  
                     u1671 04F1                       u1831 0657                       u1815 0641  
                     u1911 020C                       u1591 055A                       u1680 0503  
                     u1840 065D                       u1760 0613                       u1920 0267  
                     u1681 0502                       u1841 065C                       u1825 064C  
                     u1761 0612                       u1921 0266                       u1770 061E  
                     u1930 028D                       u1850 0178                       u1771 061D  
                     u1931 028C                       u1851 0177                       u1780 0629  
                     u1940 02A1                       u1860 0180                       u1781 0628  
                     u1941 02A0                       u1861 017F                       u1870 01CE  
                     u1950 0FDF                       u1695 0507                       u1871 01CD  
                     u1960 0F42                       u1880 01F4                       u1961 0F41  
                     u1881 01F3                       u1970 0F48                       u1890 01FF  
                     u1971 0F47                       u1795 062D                       u1891 01FE  
                     u1955 0FDA                       _PEIE 005E                       u1885 01F0  
                     u1990 066F                       u1991 066E                       _RBIF 0058  
                     u1985 03B2                       _TXIF 0064                       _WPUB 0095  
                     _Text 02A4          ?_Lcd_Write_String 0077                       _cont 0042  
                     _main 002D                       _temp 0044                       _stat 0043  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0020  
          __end_of_Lcd_Cmd 0F70                      ??_isr 0070           ?_I2C_Master_Init 0026  
         ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_Text 0070                      ?_main 0070            __end_of___awdiv 0549  
                    STR_10 041A                      STR_11 0430            __end_of___awmod 0667  
                    _ANSEL 0188            __end_of___lldiv 05B1            ___awdiv@divisor 0072  
          __end_of___lwdiv 0796                      i1l121 0FA0                      i1l118 0F99  
          __end_of___lwmod 07D2            ___awdiv@counter 0020                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009            __end_of__doprnt 02A4  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063                      _TXREG 0019  
          __end_of_dpowers 041A                      _valor 007B                      _setup 06BF  
                    _putch 0F29                      fpbase 0029                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0FC8  
         __end_of_Lcd_Init 060E           __end_of_Lcd_Port 03FC            __initialization 000F  
             __end_of_Text 03A1               __end_of_main 016E                     ??_Text 0037  
                   ??_main 003A         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074  
         ___awdiv@dividend 0074                     ?_setup 0070                     ?_putch 0072  
                   _ANSELH 0189                     i1l2000 0F8B                     i1l2010 0F9F  
                   i1l2002 0F8F                     i1l2004 0F95                     i1l2006 0F9D  
                   i1l2008 0F9E                     u137_20 0F8F                     u137_21 0F8E  
                   u138_20 0F95                     u138_21 0F94                     u139_20 0F9D  
                   u139_21 0F9C                  ??_Lcd_Cmd 0073                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0039                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of__fptable 002D           __end_of_division 04E0                  ??___awdiv 0076  
                ??___awmod 0076                  ??___lldiv 0020                  ??___lwdiv 0076  
                ??___lwmod 0024                  ??__doprnt 0028           ___awdiv@quotient 0022  
          ___awmod@divisor 0072               __doprnt@flag 002B            ___awmod@counter 0077  
                   _printf 0F70               __doprnt@prec 002C                     fptable 0024  
                   fptotal 0002                     saved_w 007E                  ??_sprintf 0034  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021    __end_of__initialization 0020          __end_of_Lcd_Clear 0F56  
           __pcstackCOMMON 0070              __end_of_setup 070C              __end_of_putch 0F32  
            division@valor 0079             _Lcd_Set_Cursor 0667             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __doprnt@ap 0027  
               __doprnt@pb 0030                    ??_setup 007A                    ??_putch 0073  
               __pbssBANK0 003D                 __pbssBANK1 00CB                 __pmaintext 002D  
               __pintentry 0004  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 06BF  
                  ?_printf 0070                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0400  
                ?_division 0070             _Lcd_Write_Char 03A1                    _Lcd_Cmd 0F56  
                  ___awdiv 04E0                    ___awmod 060E                    ___lldiv 0549  
                  ___lwdiv 0752                    ___lwmod 0796                    __doprnt 016E  
                  _decenas 0040            ?_Lcd_Set_Cursor 0076                    __ptext1 0FA7  
                  __ptext2 06BF                    __ptext3 0FC8                    __ptext4 0549  
                  __ptext5 02A4                    __ptext6 0F70                    __ptext7 016E  
                  __ptext8 0F29                    __ptext9 0796            __size_of_printf 001B  
                  _dpowers 0410               __size_of_isr 001C           ___awmod@dividend 0074  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E                    _residuo 007A  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 0FA7  
                  main@val 00CA     __end_of_Lcd_Write_Char 03DA       end_of_initialization 0020  
               ??_division 0024  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0072            ___lldiv@counter 0025                  _RCSTAbits 0018  
                  printf@f 0034           I2C_Master_Init@c 0026           I2C_Master_Read@a 0072  
                Lcd_Port@a 0072                  _PORTBbits 0006                  _PORTDbits 0008  
                _TRISBbits 0086                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0023                 main@buffer 00A0  
                _TXSTAbits 0098                  _Lcd_Clear 0F49           _Lcd_Write_String 070C  
              _BAUDCTLbits 0187             __end_of_printf 0F8B        start_initialization 000F  
              __end_of_isr 0FA7          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
        ??_I2C_Master_Init 002A          ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072  
        ??_I2C_Master_Stop 0072                 ?_Lcd_Clear 0070                __doprnt@val 002D  
          Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075                   ??_printf 0031  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of__fptable 0009                   ?_Lcd_Cmd 0070  
                __doprnt@c 002F                  __doprnt@f 0026          __size_of_division 006B  
         _I2C_Master_Start 0F17           _I2C_Master_Write 0F32           ___lwdiv@dividend 0074  
         ??_Lcd_Set_Cursor 0077                  __pfunctab 0024                   ?___awdiv 0072  
                 ?___awmod 0072                   ?___lldiv 0072                   ?___lwdiv 0072  
                 ?___lwmod 0020                   ?__doprnt 0026                  __pstrings 0400  
         ___lwdiv@quotient 0078                   ?_sprintf 0031             __size_of_setup 004D  
           __size_of_putch 0009          interrupt_function 0004                   _IOCBbits 0096  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              ??_Lcd_Clear 0076                __stringbase 040F           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 05B1                   _Lcd_Port 03DA        I2C_Master_Read@temp 0076  
 __end_of_Lcd_Write_String 0752           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
         __size_of___awmod 0059           __size_of___lldiv 0068           __size_of___lwdiv 0044  
         __size_of___lwmod 003C           __size_of__doprnt 0136         __end_of__stringtab 0410  
                 __fptable 0024            _I2C_Master_Init 0FC8            _I2C_Master_Read 07D2  
          _I2C_Master_Wait 0F3C            _I2C_Master_Stop 0F20            ___lwdiv@divisor 0072  
                 _centenas 0041            ___lwdiv@counter 0077                   __ptext10 0752  
                 __ptext11 0475                   __ptext20 03DA                   __ptext12 060E  
                 __ptext21 0F32                   __ptext13 04E0                   __ptext22 0F20  
                 __ptext14 070C                   __ptext23 0F17                   __ptext15 03A1  
                 __ptext24 07D2                   __ptext16 0667                   __ptext25 0F3C  
                 __ptext17 05B1                   __ptext26 0F8B                   __ptext18 0F49  
                 __ptext19 0F56                   _division 0475           __size_of_sprintf 0021  
            __size_of_Text 00FD              __size_of_main 0141                   _unidades 003F  
                 fp__putch 002A                   main@val1 00C9                   main@val2 00C8  
                putch@data 0072   __end_of_I2C_Master_Start 0F20   __end_of_I2C_Master_Write 0F3C  
               _INTCONbits 000B         Lcd_Write_Char@temp 0074                   intlevel1 0024  
                sprintf@ap 0037                  sprintf@pb 0038                  sprintf@wh 0036  
         ___lwmod@dividend 0022           ___lldiv@dividend 0076                  stringcode 040A  
               _OSCCONbits 008F                   printf@ap 0033                   printf@pb 0035  
  __end_of_I2C_Master_Init 1000    __end_of_I2C_Master_Read 0800    __end_of_I2C_Master_Wait 0F49  
  __end_of_I2C_Master_Stop 0F29         Lcd_Set_Cursor@temp 0023                   sprintf@f 0031  
         ___lldiv@quotient 0021          I2C_Master_Write@d 0072            ___lwmod@divisor 0020  
          ___lwmod@counter 0025                   stringdir 040A                   stringtab 0400  
              _SSPCON2bits 0091  
